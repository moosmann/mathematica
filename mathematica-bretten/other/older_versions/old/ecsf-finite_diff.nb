(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    312592,       6610]
NotebookOptionsPosition[    305194,       6365]
NotebookOutlinePosition[    305559,       6381]
CellTagsIndexPosition[    305516,       6378]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MOL: finite differences method", "Section",
 CellChangeTimes->{{3.412403433566656*^9, 3.412403459736923*^9}, {
  3.413267774510323*^9, 3.413267777301197*^9}}],

Cell[CellGroupData[{

Cell["functions", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.412412691545334*^9, 3.412412692993355*^9}, {
  3.412423445933554*^9, 3.412423450067917*^9}, {3.412423697910116*^9, 
  3.412423699501485*^9}}],

Cell[CellGroupData[{

Cell["options settings", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.41235303707004*^9, 3.41235303769355*^9}, {
   3.412412696722202*^9, 3.412412698897586*^9}, {3.412512773846835*^9, 
   3.412512792062851*^9}, 3.412580378494876*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<mathematica\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearSystemCache", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Needs", "[", "\"\<DifferentialEquations`NDSolveProblems`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Needs", "[", "\"\<DifferentialEquations`NDSolveUtilities`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Needs", "[", "\"\<DifferentialEquations`InterpolatingFunctionAnatomy`\>\"",
    "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.413025343964165*^9, 3.413025347048731*^9}, {
  3.413056404807935*^9, 3.413056405738357*^9}, {3.413056444751366*^9, 
  3.413056445180186*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Interpolation", ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "4"}], ",", 
    RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "Interpolation", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412512316100657*^9, 3.412512344806839*^9}, {
   3.412512378783444*^9, 3.412512388785741*^9}, 3.412580378495455*^9, {
   3.412627880975948*^9, 3.41262788974943*^9}, 3.412962093465249*^9, 
   3.412962360835205*^9, {3.41320384447754*^9, 3.413203882505373*^9}, 
   3.413203945891726*^9, 3.413204010989813*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"InterpolationOrder", "\[Rule]", "4"}], ",", 
   RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.412962365881191*^9, 3.412966369189828*^9, 3.412966941919173*^9, 
   3.413004416240957*^9, 3.413015453097076*^9, 3.41301577172099*^9, {
   3.413024834437502*^9, 3.413024835073948*^9}, 3.413025805651612*^9, 
   3.413026586013839*^9, 3.413026769309146*^9, 3.413096846112158*^9, 
   3.413136994945443*^9, 3.413138935997882*^9, 3.4131413773049*^9, 
   3.413174728824427*^9, 3.413193098770029*^9, {3.413203848579528*^9, 
   3.413203909765718*^9}, {3.41320401698955*^9, 3.41320401842033*^9}, 
   3.413204868646652*^9, 3.413204954917085*^9, 3.413205018775048*^9, {
   3.413205919192497*^9, 3.413205921441951*^9}, 3.413206093096221*^9, 
   3.413267823831231*^9, 3.41327710062357*^9, 3.413285706139057*^9, 
   3.41329722950942*^9, 3.413347592746526*^9, 3.413353755914134*^9, {
   3.413355680417061*^9, 3.41335568430864*^9}, {3.413381938934356*^9, 
   3.413381943508367*^9}, 3.41345069478506*^9, 3.413450959256413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NIntegrate", ",", 
    RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", 
  RowBox[{"NIntegrate", ",", "MaxRecursion"}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412512499937158*^9, 3.412512524629316*^9}, 
   3.412580378496335*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"MaxRecursion", "\[Rule]", "20"}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.412661674015131*^9, 3.412664736270051*^9, 3.412685324657308*^9, 
   3.412691848396644*^9, 3.412696325851462*^9, 3.412696397586197*^9, 
   3.412696538747285*^9, 3.412750145550294*^9, 3.41278619760719*^9, 
   3.412840124116108*^9, 3.41286554323294*^9, 3.41286803071346*^9, 
   3.412873404601871*^9, 3.412915247047912*^9, {3.412924174746607*^9, 
   3.412924185968041*^9}, 3.412928044976718*^9, 3.412928121588746*^9, 
   3.412931083568725*^9, 3.412931350375071*^9, 3.412936943620345*^9, 
   3.412938133548063*^9, 3.412938293453343*^9, 3.412947111958941*^9, 
   3.412949198428207*^9, 3.412955700730828*^9, 3.412956244649302*^9, 
   3.412959729969528*^9, 3.41296211099708*^9, 3.412962366541112*^9, 
   3.412966369295156*^9, 3.412966942609507*^9, 3.413004416336931*^9, 
   3.413015453210135*^9, 3.41301577177448*^9, {3.413024834708899*^9, 
   3.413024835203526*^9}, 3.413025805998444*^9, 3.413026586304184*^9, 
   3.413026769671939*^9, 3.413096846409143*^9, 3.413136996266183*^9, 
   3.413138936775843*^9, 3.413141378479493*^9, 3.413174729140946*^9, 
   3.41319309993692*^9, 3.413203909964464*^9, {3.413204017454803*^9, 
   3.413204018511055*^9}, 3.413204869082881*^9, 3.413204955152301*^9, 
   3.413205018947996*^9, {3.413205919372607*^9, 3.413205921874398*^9}, 
   3.413206093363479*^9, 3.413267824353342*^9, 3.413277101282991*^9, 
   3.413285706407802*^9, 3.413297229965793*^9, 3.413347593005932*^9, 
   3.413353756227962*^9, {3.413355680629245*^9, 3.413355684585829*^9}, {
   3.413381939391956*^9, 3.413381943983328*^9}, 3.413450695046876*^9, 
   3.413450959474331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NDSolve`FiniteDifferenceDerivative", ",", 
    RowBox[{"DifferenceOrder", "\[Rule]", "6"}], ",", 
    RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", "NDSolve`FiniteDifferenceDerivative", 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.413016037862585*^9, 3.413016079600595*^9}, 
   3.413016666110847*^9, 3.41301688732412*^9, {3.413016991679173*^9, 
   3.413017048224815*^9}, 3.413017086089611*^9, 3.413102745379546*^9, {
   3.413204737102867*^9, 3.41320474729158*^9}, {3.413204888694668*^9, 
   3.413204889413612*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"DifferenceOrder", "\[Rule]", "6"}], ",", 
   RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "}"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.412696326516207*^9, 3.412696398259587*^9, 3.412696539272835*^9, 
   3.412750145731875*^9, 3.412786197709781*^9, 3.412840124416514*^9, 
   3.412865544346663*^9, 3.412868031936934*^9, 3.412873406010222*^9, 
   3.412915247178467*^9, {3.41292417511231*^9, 3.41292418630592*^9}, 
   3.412928045344299*^9, 3.412928121974433*^9, 3.412931084040083*^9, 
   3.412931350506812*^9, 3.41293694400139*^9, 3.412938133854553*^9, 
   3.412938293750648*^9, 3.412947112155919*^9, 3.412949198829362*^9, 
   3.41295570134154*^9, 3.412956245291511*^9, 3.412959730647115*^9, 
   3.4129621117253*^9, 3.412962367277635*^9, 3.412966369408182*^9, 
   3.412966942853462*^9, 3.41300441645987*^9, 3.413015453311162*^9, 
   3.413015771872616*^9, {3.413016039070793*^9, 3.413016080456572*^9}, 
   3.413016666967429*^9, 3.413016910820779*^9, {3.413016992477075*^9, 
   3.413017049616887*^9}, 3.413017087135532*^9, {3.413024834811477*^9, 
   3.4130248353281*^9}, 3.41302580609295*^9, 3.413026586401143*^9, 
   3.41302676976657*^9, 3.413096846482892*^9, 3.413102746827352*^9, 
   3.413136997093022*^9, 3.413138937622548*^9, 3.413141379641416*^9, 
   3.413174729229183*^9, 3.413193101590031*^9, 3.413203910248321*^9, {
   3.413204017573766*^9, 3.413204018654618*^9}, {3.413204869588646*^9, 
   3.413204890538999*^9}, 3.41320495537369*^9, 3.413205019190395*^9, {
   3.413205919619547*^9, 3.413205922115217*^9}, 3.413206093664957*^9, 
   3.413267824468588*^9, 3.413277101388289*^9, 3.413285706663119*^9, 
   3.413297230628625*^9, 3.413347593101255*^9, 3.413353756313359*^9, {
   3.413355681034646*^9, 3.413355684859297*^9}, {3.413381940012684*^9, 
   3.413381944595358*^9}, 3.413450695145323*^9, 3.413450959553249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NDSolve", ",", 
    RowBox[{"MaxSteps", "->", "15000"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", 
  RowBox[{"NDSolve", ",", 
   RowBox[{"{", 
    RowBox[{"MaxSteps", ",", "InterpolationOrder"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.413187333636468*^9, 3.413187379447152*^9}, {
   3.413204902468647*^9, 3.413204949282988*^9}, 3.413205012055107*^9, {
   3.413205859574075*^9, 3.413205860011092*^9}, {3.413206070882684*^9, 
   3.413206071118751*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MaxSteps", "\[Rule]", "15000"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "Automatic"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.413187351618755*^9, 3.41318738014733*^9}, 
   3.413193102859146*^9, 3.413203910637323*^9, {3.413204017703057*^9, 
   3.413204018801659*^9}, 3.413204869952167*^9, {3.4132049045769*^9, 
   3.413204955693081*^9}, {3.413205013125498*^9, 3.413205019422389*^9}, {
   3.413205919868421*^9, 3.413205922353866*^9}, 3.413206094093597*^9, 
   3.413267824675441*^9, 3.413277101587597*^9, 3.413285706918359*^9, 
   3.41329723112939*^9, 3.413347593208908*^9, 3.413353756420161*^9, {
   3.413355681430579*^9, 3.413355685121459*^9}, {3.413381940463993*^9, 
   3.413381945041534*^9}, 3.413450695241722*^9, 3.413450959643623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NDSolve`ProcessEquations", ",", 
    RowBox[{"MaxSteps", "->", "15000"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Options", "[", 
  RowBox[{"NDSolve`ProcessEquations", ",", "MaxSteps"}], "]"}]}], "Input",
 CellChangeTimes->{{3.413348488243095*^9, 3.41334849449974*^9}, {
  3.413348524980421*^9, 3.413348587143609*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"MaxSteps", "\[Rule]", "15000"}], "}"}]], "Output",
 CellChangeTimes->{
  3.413348587933696*^9, 3.413353756506231*^9, {3.413355681714582*^9, 
   3.413355685456979*^9}, {3.413381941087216*^9, 3.413381945660834*^9}, 
   3.413450695349431*^9, 3.413450959723596*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["curve generator", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.410260828030827*^9, 3.410260842934085*^9}, 
   3.410271153341838*^9, {3.411887249967072*^9, 3.411887250151075*^9}, {
   3.412582170041772*^9, 3.412582177176514*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["curve", 
     RowBox[{"0", ",", "1"}]], "[", "u_", "]"}], ":=", 
   RowBox[{"10", 
    RowBox[{"Sqrt", "[", "2", "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "u", "]"}], ",", 
      RowBox[{"Cos", "[", "u", "]"}]}], "}"}]}]}], ";", 
  RowBox[{
   SubscriptBox["tf", 
    RowBox[{"0", ",", "0"}]], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"scg", ",", "sp", ",", "rcg", ",", "rp"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"scg", "[", 
     RowBox[{
     "num_", ",", "width_", ",", "height_", ",", "kink_", ",", "touch_", ",", 
      "asymmetrie_", ",", "diagonaldistortion_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "lo", ",", "initialcurve", ",", "aoi"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["tf", 
         RowBox[{"num", ",", "0"}]], "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initialcurve", "[", "u_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"asymmetrie", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "u", "]"}], "-", "1"}], ")"}]}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"width", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"kink", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "u", "]"}], "^", "2"}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"Sin", "[", "u", "]"}], ")"}]}], ",", 
             RowBox[{"height", "  ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"touch", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "u", "]"}], "^", "2"}]}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"Cos", "[", "u", "]"}], ")"}]}]}], "}"}], "+", 
           RowBox[{"diagonaldistortion", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "u", "]"}], ",", 
              RowBox[{"Sin", "[", "u", "]"}]}], "}"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aoi", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"initialcurve", "[", "u", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "u"], 
               RowBox[{
                RowBox[{"initialcurve", "[", "u", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"initialcurve", "[", "u", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ")"}], 
             RowBox[{"(", " ", 
              RowBox[{
               SubscriptBox["\[PartialD]", "u"], 
               RowBox[{
                RowBox[{"initialcurve", "[", "u", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["curve", 
          RowBox[{"num", ",", "1"}]], "[", "u_", "]"}], ":=", 
        RowBox[{"10", 
         RowBox[{
          RowBox[{"initialcurve", "[", "u", "]"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"aoi", "/", 
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["il", "num"], "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[PartialD]", "u"], 
              RowBox[{
               SubscriptBox["curve", 
                RowBox[{"num", ",", "1"}]], "[", "u", "]"}]}], ")"}], ".", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[PartialD]", "u"], 
              RowBox[{
               SubscriptBox["curve", 
                RowBox[{"num", ",", "1"}]], "[", "u", "]"}]}], ")"}]}], "]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
         "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sp", "[", 
    RowBox[{
    "num_", ",", "width_", ",", "height_", ",", "kink_", ",", "touch_", ",", 
     "asymmetrie_", ",", "diagonaldistortion_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"scg", "[", 
      RowBox[{
      "num", ",", "width", ",", "height", ",", "kink", ",", "touch", ",", 
       "asymmetrie", ",", "diagonaldistortion"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["curve", 
         RowBox[{"num", ",", "1"}]], "[", "u", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rcg", "[", "num_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rpn", "=", "7"}], ",", 
        RowBox[{"order", "=", "8"}], " ", ",", 
        RowBox[{"fpts", "=", "44"}], ",", 
        RowBox[{"intord", "=", "4"}], ",", "aoi", ",", "xint", ",", "yint", 
        ",", "rpts", ",", "xpts", ",", "ypts", ",", "xxpts", ",", "yypts", 
        ",", "xexp", ",", "yexp", ",", "xfk", ",", "yfk", ",", "xpara", ",", 
        "ypara", ",", "yfitdat", ",", "xfitdat", ",", "initialcurve"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["tf", 
         RowBox[{"num", ",", "0"}]], "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"rpts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "+", 
           RowBox[{"3", 
            RowBox[{"RandomReal", "[", "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "rpn"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xpts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", " ", "2", 
             RowBox[{"\[Pi]", "/", "rpn"}]}], " ", ",", 
            RowBox[{
             RowBox[{"rpts", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"i", " ", "2", 
               RowBox[{"\[Pi]", "/", "rpn"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "rpn"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xpts", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"rpn", "+", "1"}], ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{"xpts", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"ypts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", " ", "2", 
             RowBox[{"\[Pi]", "/", "rpn"}]}], " ", ",", 
            RowBox[{
             RowBox[{"rpts", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"i", " ", "2", 
               RowBox[{"\[Pi]", "/", "rpn"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "rpn"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ypts", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"rpn", "+", "1"}], ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{"ypts", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"xint", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"xpts", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "intord"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"yint", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{"ypts", ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "intord"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"xxpts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", " ", "2", 
             RowBox[{"\[Pi]", "/", "fpts"}]}], ",", 
            RowBox[{"xint", "[", 
             RowBox[{"i", " ", "2", 
              RowBox[{"\[Pi]", "/", "fpts"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fpts"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"yypts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", " ", "2", 
             RowBox[{"\[Pi]", "/", "fpts"}]}], ",", 
            RowBox[{"yint", "[", 
             RowBox[{"i", " ", "2", 
              RowBox[{"\[Pi]", "/", "fpts"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "fpts"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xexp", "[", "u_", "]"}], ":=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["xfk", "i"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}], "+", 
           RowBox[{
            SubscriptBox["xfk", 
             RowBox[{"order", "+", "i"}]], 
            RowBox[{"Sin", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yexp", "[", "u_", "]"}], ":=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["yfk", "i"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}], "+", 
           RowBox[{
            SubscriptBox["yfk", 
             RowBox[{"order", "+", "i"}]], 
            RowBox[{"Sin", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xpara", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xfk", "i"], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"2", " ", "order"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ypara", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["yfk", "i"], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"2", " ", "order"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xfitdat", "=", 
        RowBox[{"FindFit", "[", 
         RowBox[{"xxpts", ",", 
          RowBox[{"xexp", "[", "u", "]"}], ",", "xpara", " ", ",", "u"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yfitdat", "=", 
        RowBox[{"FindFit", "[", 
         RowBox[{"yypts", ",", 
          RowBox[{"yexp", "[", "u", "]"}], ",", "ypara", " ", ",", "u"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initialcurve", "[", "u_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"xexp", "[", "u", "]"}], "/.", "xfitdat"}], ",", 
          RowBox[{
           RowBox[{"yexp", "[", "u", "]"}], "/.", "yfitdat"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"aoi", "=", 
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"initialcurve", "[", "u", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], ")"}], 
              RowBox[{"(", " ", 
               RowBox[{
                SubscriptBox["\[PartialD]", "u"], 
                RowBox[{
                 RowBox[{"initialcurve", "[", "u", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"initialcurve", "[", "u", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[PartialD]", "u"], 
                RowBox[{
                 RowBox[{"initialcurve", "[", "u", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["curve", 
          RowBox[{"num", ",", "1"}]], "[", "u_", "]"}], ":=", 
        RowBox[{"10", 
         RowBox[{
          RowBox[{"initialcurve", "[", "u", "]"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"aoi", "/", 
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["il", "num"], "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "u"], 
               RowBox[{
                SubscriptBox["curve", 
                 RowBox[{"num", ",", "1"}]], "[", "u", "]"}]}], ")"}], ".", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "u"], 
               RowBox[{
                SubscriptBox["curve", 
                 RowBox[{"num", ",", "1"}]], "[", "u", "]"}]}], ")"}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
         "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rp", "[", "num_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rcg", "[", "num", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["curve", 
         RowBox[{"num", ",", "1"}]], "[", "u", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "//", "Print"}]}], 
   ")"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.410245972378533*^9, 3.410246103919876*^9}, {
   3.410246134715471*^9, 3.410246156014594*^9}, 3.410676190154127*^9, {
   3.410676276580458*^9, 3.410676287186697*^9}, {3.410676327790612*^9, 
   3.410676334498352*^9}, {3.410676484064613*^9, 3.410676484910733*^9}, 
   3.410676684299695*^9, {3.41095062083552*^9, 3.410950626000015*^9}, 
   3.410950722361495*^9, {3.410950785343652*^9, 3.410950788329192*^9}, {
   3.410952040119992*^9, 3.410952042354561*^9}, 3.410958012826108*^9, 
   3.410958288360066*^9, 3.410958340512313*^9, {3.411060744891825*^9, 
   3.411060810845041*^9}, 3.411061003776004*^9, {3.411061053796963*^9, 
   3.411061088933324*^9}, {3.411061130482525*^9, 3.411061140552226*^9}, {
   3.411063904431745*^9, 3.411063923370747*^9}, 3.411063960481387*^9, {
   3.411063995557556*^9, 3.411064010478993*^9}, {3.411064576523847*^9, 
   3.411064583514111*^9}, {3.411065188549759*^9, 3.411065218623939*^9}, {
   3.411065423050047*^9, 3.411065446688584*^9}, 3.411065479123362*^9, {
   3.412061321639858*^9, 3.412061322914015*^9}, {3.412061929598485*^9, 
   3.412061932938117*^9}, {3.412063134450998*^9, 3.412063134542877*^9}, {
   3.412064092312856*^9, 3.412064103511061*^9}, {3.412069119468365*^9, 
   3.412069123073735*^9}, {3.412069219620056*^9, 3.412069227473818*^9}, {
   3.412069334395395*^9, 3.412069342488705*^9}, {3.412069977208016*^9, 
   3.412069987733159*^9}, {3.412072581249003*^9, 3.412072592161061*^9}, {
   3.412073083646986*^9, 3.412073088267129*^9}, {3.412073144757272*^9, 
   3.412073162332633*^9}, {3.412312429831331*^9, 3.412312450661942*^9}, {
   3.412312672930152*^9, 3.412312685440845*^9}, {3.412405842022973*^9, 
   3.412405892083661*^9}, {3.412405943841052*^9, 3.412405954187959*^9}, {
   3.412506167436525*^9, 3.41250620174508*^9}, {3.412506382280275*^9, 
   3.412506382463542*^9}, {3.412513778302151*^9, 3.412513808193102*^9}, {
   3.412580466966538*^9, 3.412580467175109*^9}, {3.41258228492005*^9, 
   3.412582285714724*^9}, {3.412583316225933*^9, 3.412583324190761*^9}, {
   3.412602726072445*^9, 3.412602730806167*^9}, 3.412662607845767*^9, {
   3.412662638651033*^9, 3.41266265198748*^9}, 3.412665885060208*^9, {
   3.412752375801906*^9, 3.412752378175551*^9}, {3.41283818508236*^9, 
   3.412838196849683*^9}, {3.412838251320117*^9, 3.412838276303942*^9}, {
   3.413096700743358*^9, 3.41309674041513*^9}, {3.413096804362568*^9, 
   3.41309681087457*^9}, {3.41309709057596*^9, 3.413097094485262*^9}, {
   3.413097279948166*^9, 3.413097299104996*^9}, {3.413097358020677*^9, 
   3.413097385730485*^9}, 3.413097450811601*^9, {3.41312348910197*^9, 
   3.413123561026496*^9}, 3.41318400958637*^9, {3.413184135077331*^9, 
   3.413184187331571*^9}, 3.41318441293706*^9, {3.413184516383416*^9, 
   3.413184516784706*^9}, {3.413184588207299*^9, 3.413184630472998*^9}, {
   3.413186617653887*^9, 3.413186619368646*^9}, 3.413186782427723*^9, 
   3.413450668454258*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["method of lines", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{3.412512775055156*^9, 3.412592069608475*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"flow", ",", "fp"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"flow", "[", 
     RowBox[{"num_", ",", "step_", ",", "dt_", ",", 
      RowBox[{"grid_:", "150"}], ",", "opts___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", "grid"}], ",", "grdpts", ",", "ugrid", ",", "t1", 
        ",", "t2", ",", "X", ",", "Y", ",", "xu", ",", "yu", ",", "xuu", ",", 
        "yuu", ",", "v", ",", "xeqns", ",", "yeqns", ",", "xic", ",", "yic", 
        ",", "xicval", ",", "yicval"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"grdpts", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ugrid", "=", 
        RowBox[{"2", 
         RowBox[{"\[Pi]", "/", "n"}], " ", "grdpts"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        SubscriptBox["tf", 
         RowBox[{"num", ",", 
          RowBox[{"step", "-", "1"}]}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t2", "=", 
        RowBox[{
         SubscriptBox["tf", 
          RowBox[{"num", ",", "step"}]], "=", 
         RowBox[{"t1", "+", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"X", "[", "t_", "]"}], "=", 
        RowBox[{"Through", "[", 
         RowBox[{
          RowBox[{"Thread", "[", 
           SubscriptBox["x", "grdpts"], "]"}], "[", "t", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Y", "[", "t_", "]"}], "=", 
        RowBox[{"Through", "[", 
         RowBox[{
          RowBox[{"Thread", "[", 
           SubscriptBox["y", "grdpts"], "]"}], "[", "t", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"xu", "=", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], ",", "ugrid", ",", 
          RowBox[{"X", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"yu", "=", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], ",", "ugrid", ",", 
          RowBox[{"Y", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"xuu", "=", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "2", "]"}], ",", "ugrid", ",", 
          RowBox[{"X", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"yuu", "=", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "2", "]"}], ",", "ugrid", ",", 
          RowBox[{"Y", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"v", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xu", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"yu", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ")"}], "^", "2"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"xeqns", " ", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{"X", "[", "t", "]"}]}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"v", "^", 
            RowBox[{"(", 
             RowBox[{"-", "2"}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"v", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "2"}], ")"}]}]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xu", " ", "xuu"}], " ", "+", 
                RowBox[{"yu", " ", "yuu"}]}], ")"}], "xu"}], "+", "xuu"}], 
            ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yeqns", " ", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{"Y", "[", "t", "]"}]}], " ", "\[Equal]", 
          RowBox[{
           RowBox[{"v", "^", 
            RowBox[{"(", 
             RowBox[{"-", "2"}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"v", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "2"}], ")"}]}]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xu", " ", "xuu"}], " ", "+", 
                RowBox[{"yu", " ", "yuu"}]}], ")"}], "yu"}], "+", "yuu"}], 
            ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"xic", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"X", "[", "t1", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             SubscriptBox["curve", 
              RowBox[{"num", ",", "step"}]], "[", "u", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
          RowBox[{"u", "\[Rule]", "ugrid"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"yic", "=", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "[", "t1", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             SubscriptBox["curve", 
              RowBox[{"num", ",", "step"}]], "[", "u", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
          RowBox[{"u", "\[Rule]", "ugrid"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["sol", 
         RowBox[{"num", ",", "step"}]], "=", "\[IndentingNewLine]", 
        RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"xeqns", ",", "yeqns", ",", "xic", ",", "yic"}], "]"}], 
          ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["x", "i"], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["y", "i"], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
          "\[IndentingNewLine]", "opts"}], "\[IndentingNewLine]", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"step", "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["gpn", 
            RowBox[{"num", ",", "1"}]], "=", "grid"}], ";", 
          RowBox[{
           SubscriptBox["dmin", "num"], "=", 
           RowBox[{"Min", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"dist", "[", 
               RowBox[{"num", ",", "1", ",", "0", ",", "i", ",", 
                RowBox[{"i", "-", "1"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "grid"}], "}"}]}], "]"}], 
            "]"}]}]}], ",", "None", ",", 
         RowBox[{
         "Print", "[", "\"\<Error bei gpn Zuweisung und dmin Ermittelung\>\"",
           "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fp", "[", 
    RowBox[{
    "num_", ",", "step_", ",", "dt_", ",", "grid___", ",", "opts___"}], "]"}],
    ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plot", ",", "time"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"time", "=", 
       RowBox[{
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"flow", "[", 
           RowBox[{"num", ",", "step", ",", "dt", ",", "grid", ",", "opts"}], 
           "]"}], ";"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\[IndentingNewLine]", 
       RowBox[{"\"\<grid points: \>\"", ",", 
        SubscriptBox["gpn", 
         RowBox[{"num", ",", "step"}]], ",", "\[IndentingNewLine]", 
        "\"\<, minimum distance at t=0: \>\"", ",", " ", 
        SubscriptBox["dmin", "num"], ",", "\[IndentingNewLine]", 
        "\"\<, evaluation time: \>\"", ",", "time"}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"plot3d", "[", 
       RowBox[{"num", ",", "step"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41235087041348*^9, 3.41235094556426*^9}, {
   3.412354364042591*^9, 3.412354375633848*^9}, 3.412354780592964*^9, 
   3.41235695412709*^9, {3.412402517941081*^9, 3.412402593905855*^9}, {
   3.41240363757482*^9, 3.412403637698522*^9}, {3.412404411212892*^9, 
   3.412404417081858*^9}, {3.412405462113864*^9, 3.412405527613596*^9}, {
   3.412406238571017*^9, 3.412406285452443*^9}, {3.412415870275848*^9, 
   3.412415871114241*^9}, {3.412415966957333*^9, 3.412415972551906*^9}, {
   3.412416032452715*^9, 3.412416055843201*^9}, {3.41241613311836*^9, 
   3.412416179276735*^9}, {3.412416222536119*^9, 3.412416233208732*^9}, {
   3.41242349170022*^9, 3.412423517523661*^9}, {3.412424017989307*^9, 
   3.412424039542085*^9}, {3.412424075457353*^9, 3.412424081314202*^9}, 
   3.412424635536282*^9, {3.412424704777979*^9, 3.41242471454658*^9}, 
   3.412424759740452*^9, {3.412424898907292*^9, 3.412424899075503*^9}, {
   3.412426617829502*^9, 3.412426656084437*^9}, {3.412426687134043*^9, 
   3.412426716013127*^9}, 3.412426963489655*^9, {3.412437646165278*^9, 
   3.412437752814755*^9}, 3.412437782964863*^9, {3.41243794199079*^9, 
   3.412437942403397*^9}, {3.412440310178722*^9, 3.412440316367136*^9}, {
   3.412440397177309*^9, 3.412440432199014*^9}, 3.412440480905483*^9, {
   3.412441422539507*^9, 3.412441426786639*^9}, {3.412441469062812*^9, 
   3.412441469241217*^9}, {3.412486055812832*^9, 3.412486070515018*^9}, {
   3.412486115213314*^9, 3.412486137845644*^9}, {3.412486293885994*^9, 
   3.412486321687359*^9}, {3.412486373916004*^9, 3.412486375668272*^9}, {
   3.412487361169098*^9, 3.412487380864195*^9}, {3.41248792769519*^9, 
   3.412487936822423*^9}, {3.412496475094521*^9, 3.412496497010769*^9}, {
   3.412498256924982*^9, 3.412498379354928*^9}, {3.41249845520152*^9, 
   3.412498470471284*^9}, {3.412506261780633*^9, 3.412506277366892*^9}, {
   3.412506307853993*^9, 3.412506354399385*^9}, {3.412506405335325*^9, 
   3.412506525971829*^9}, {3.412506723775041*^9, 3.412506738892798*^9}, {
   3.412510994099772*^9, 3.412511018581389*^9}, 3.412511226842037*^9, {
   3.412511398533063*^9, 3.412511414942576*^9}, {3.412511650257597*^9, 
   3.412511710504632*^9}, 3.412511772391112*^9, 3.41251181175662*^9, 
   3.412511867188889*^9, 3.412511906537249*^9, {3.412511956150183*^9, 
   3.412511957297525*^9}, {3.412511989992751*^9, 3.412512115237286*^9}, {
   3.412513898244148*^9, 3.412513908707532*^9}, {3.412582217895679*^9, 
   3.412582221013484*^9}, {3.412582303279424*^9, 3.412582303941838*^9}, {
   3.412582344916775*^9, 3.412582359813154*^9}, {3.412583986937894*^9, 
   3.41258399932704*^9}, {3.412588353164497*^9, 3.412588356721871*^9}, {
   3.412588763559514*^9, 3.412588773583131*^9}, {3.412588810429543*^9, 
   3.412588907313825*^9}, {3.412588941537268*^9, 3.412588985529878*^9}, {
   3.412589038503453*^9, 3.412589047671101*^9}, {3.412589089015031*^9, 
   3.412589092478655*^9}, {3.412589326664371*^9, 3.412589344422148*^9}, {
   3.412589417221862*^9, 3.412589424759354*^9}, {3.412589481455292*^9, 
   3.412589483724379*^9}, {3.412589522448089*^9, 3.41258954806398*^9}, {
   3.412589715324907*^9, 3.412589830113999*^9}, {3.412589862026173*^9, 
   3.41258986494786*^9}, {3.412590461207604*^9, 3.412590523234597*^9}, {
   3.412590784171719*^9, 3.41259086908905*^9}, {3.412590937788443*^9, 
   3.412590962025841*^9}, {3.412591077045385*^9, 3.412591097258816*^9}, {
   3.412591225652925*^9, 3.41259125997848*^9}, {3.412591437071068*^9, 
   3.412591437302518*^9}, {3.412591473605456*^9, 3.412591497215042*^9}, {
   3.412591552182363*^9, 3.41259157261197*^9}, {3.412591635615753*^9, 
   3.412591638078713*^9}, {3.412593148455191*^9, 3.412593182947984*^9}, {
   3.412593238829167*^9, 3.412593285035719*^9}, {3.412593322554135*^9, 
   3.412593344598232*^9}, {3.412593383625364*^9, 3.412593388717683*^9}, {
   3.412593483408539*^9, 3.412593493912814*^9}, {3.412593617627658*^9, 
   3.412593663630581*^9}, {3.412593696289138*^9, 3.412593701965888*^9}, {
   3.412593818398823*^9, 3.412593863843902*^9}, {3.412593955686485*^9, 
   3.412593970102414*^9}, 3.412596100131677*^9, {3.41259726226958*^9, 
   3.412597263640533*^9}, {3.412662584192261*^9, 3.412662590688179*^9}, {
   3.412664415563645*^9, 3.412664418459529*^9}, {3.412664498679372*^9, 
   3.412664511345971*^9}, {3.412672222354681*^9, 3.412672223823956*^9}, {
   3.41267226144591*^9, 3.412672275507635*^9}, {3.412692390385783*^9, 
   3.412692575087009*^9}, {3.412692658711559*^9, 3.412692704402035*^9}, {
   3.412692757648767*^9, 3.412692769213029*^9}, {3.412692842521871*^9, 
   3.41269286847862*^9}, {3.412692936661226*^9, 3.412692958917253*^9}, {
   3.412693053690221*^9, 3.41269310723806*^9}, {3.412693148039122*^9, 
   3.412693149247717*^9}, {3.412693198748091*^9, 3.412693202443453*^9}, {
   3.412693265640861*^9, 3.412693280884561*^9}, {3.412696257500437*^9, 
   3.412696288760493*^9}, {3.412696343143012*^9, 3.412696359455892*^9}, {
   3.412696506762114*^9, 3.412696515641211*^9}, {3.412752412010686*^9, 
   3.412752418049909*^9}, {3.41275260157704*^9, 3.412752603329467*^9}, {
   3.412768398626497*^9, 3.41276843505369*^9}, {3.412768744005231*^9, 
   3.412768851740105*^9}, {3.412768886408182*^9, 3.412768958382119*^9}, {
   3.412769000861296*^9, 3.412769001260044*^9}, {3.41276905772606*^9, 
   3.412769060771321*^9}, {3.412769111908443*^9, 3.412769115299055*^9}, 
   3.412770768330349*^9, {3.412770902820555*^9, 3.412770904683542*^9}, {
   3.412771019406443*^9, 3.412771019976645*^9}, {3.41277689491324*^9, 
   3.412776934726224*^9}, {3.41277867765169*^9, 3.41277869769882*^9}, {
   3.412778886553709*^9, 3.412778911951434*^9}, 3.412785520560733*^9, {
   3.412786397456834*^9, 3.412786415669641*^9}, {3.412786508334753*^9, 
   3.412786586134167*^9}, {3.412786635833633*^9, 3.412786707902963*^9}, {
   3.412786742396115*^9, 3.412786751903124*^9}, {3.41278678939516*^9, 
   3.412786855144588*^9}, {3.412786946646099*^9, 3.412786953189101*^9}, 
   3.412786995424294*^9, {3.412838167689638*^9, 3.412838171954402*^9}, 
   3.412838388418511*^9, {3.412840330566932*^9, 3.412840435933975*^9}, {
   3.412918926819505*^9, 3.41291895809564*^9}, {3.412919064579282*^9, 
   3.412919079582034*^9}, {3.412966891006331*^9, 3.4129668951939*^9}, {
   3.413004810518912*^9, 3.413004939194159*^9}, {3.413004990585291*^9, 
   3.413004994535081*^9}, {3.41300531209994*^9, 3.41300536395969*^9}, {
   3.413005702487915*^9, 3.413005703293119*^9}, {3.413005947900028*^9, 
   3.413005962952403*^9}, 3.413006006371468*^9, 3.413006043606013*^9, 
   3.413021951308529*^9, {3.413139452078067*^9, 3.413139480230682*^9}}],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41277088580457*^9, 3.412770898417225*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["plotting", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.412423484814471*^9, 3.412423486901348*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "plot3d", ",", "plot", ",", "evoplot", ",", "dplot", ",", "fplot"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plot3d", "[", 
     RowBox[{"num_", ",", "step_", ",", 
      RowBox[{"stretch_:", "1"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plots", ",", 
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}], ",", 
        RowBox[{"t1", "=", 
         SubscriptBox["tf", 
          RowBox[{"num", ",", 
           RowBox[{"step", "-", "1"}]}]]}], ",", 
        RowBox[{"t2", "=", 
         SubscriptBox["tf", 
          RowBox[{"num", ",", "step"}]]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"stretch", " ", 
              RowBox[{
               SubscriptBox["x", "i"], "[", "t", "]"}]}], "/.", 
             RowBox[{
              SubscriptBox["sol", 
               RowBox[{"num", ",", "step"}]], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", 
                RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"stretch", " ", 
              RowBox[{
               SubscriptBox["y", "i"], "[", "t", "]"}]}], "/.", 
             RowBox[{
              SubscriptBox["sol", 
               RowBox[{"num", ",", "step"}]], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", 
                RowBox[{"i", "+", "n", "+", "2"}]}], "]"}], "]"}]}], ",", 
            "t"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"plots", "//", "Evaluate"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plot", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_", ",", 
      RowBox[{"intord_:", "6"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xint", ",", "yint", ",", 
        RowBox[{"tt", "=", "t"}], ",", 
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xint", "=", 
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", 
                RowBox[{"i", "/", "n"}]}], ",", 
               RowBox[{
                RowBox[{
                 SubscriptBox["x", "i"], "[", "tt", "]"}], "/.", 
                RowBox[{
                 SubscriptBox["sol", 
                  RowBox[{"num", ",", "step"}]], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "intord"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yint", "=", 
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", 
                RowBox[{"i", "/", "n"}]}], ",", 
               RowBox[{
                RowBox[{
                 SubscriptBox["y", "i"], "[", "tt", "]"}], "/.", 
                RowBox[{
                 SubscriptBox["sol", 
                  RowBox[{"num", ",", "step"}]], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"i", "+", "n", "+", "2"}]}], "]"}], "]"}]}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "intord"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xint", "[", "u", "]"}], ",", 
           RowBox[{"yint", "[", "u", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"evoplot", "[", "num_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         SubscriptBox["steps", "num"]}], ",", 
        RowBox[{"stretch", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"stretch", " ", 
               RowBox[{
                RowBox[{
                 SubscriptBox["curve", 
                  RowBox[{"num", ",", "1"}]], "[", "u", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"stretch", " ", 
               RowBox[{
                RowBox[{
                 SubscriptBox["curve", 
                  RowBox[{"num", ",", "1"}]], "[", "u", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              SubscriptBox["tf", 
               RowBox[{"num", ",", "n"}]]}], "}"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plot3d", "[", 
           RowBox[{"num", ",", "i", ",", "stretch"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dplot", "[", 
     RowBox[{"num_", ",", 
      RowBox[{"comp_:", "1"}]}], "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[PartialD]", "u"], 
           RowBox[{
            RowBox[{
             SubscriptBox["curve", 
              RowBox[{"num", ",", "0"}]], "[", "u", "]"}], "[", 
            RowBox[{"[", "comp", "]"}], "]"}]}], ",", 
          RowBox[{
           SubscriptBox["\[PartialD]", 
            RowBox[{"u", ",", "u"}]], 
           RowBox[{
            RowBox[{
             SubscriptBox["curve", 
              RowBox[{"num", ",", "0"}]], "[", "u", "]"}], "[", 
            RowBox[{"[", "comp", "]"}], "]"}]}], ",", ",", 
          RowBox[{"2", 
           RowBox[{
            SubscriptBox["\[PartialD]", 
             RowBox[{"u", ",", "u", ",", "u"}]], 
            RowBox[{
             RowBox[{
              SubscriptBox["curve", 
               RowBox[{"num", ",", "0"}]], "[", "u", "]"}], "[", 
             RowBox[{"[", "comp", "]"}], "]"}]}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fplot", "[", "nn_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"lt", "[", 
            RowBox[{"nn", ",", "t"}], "]"}], "^", "2"}], "/", 
          RowBox[{"at", "[", 
           RowBox[{"nn", ",", "t"}], "]"}]}], ",", 
         RowBox[{
          SubscriptBox["iso", "nn"], "[", "t", "]"}], ",", 
         RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "99"}], "}"}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"lla", "[", "nn", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412424515616732*^9, 3.41242452860674*^9}, {
   3.412425128186414*^9, 3.412425128822865*^9}, {3.412425178883528*^9, 
   3.412425179144562*^9}, {3.412487615549899*^9, 3.412487639585651*^9}, {
   3.412488014248107*^9, 3.41248803330087*^9}, {3.412488116481215*^9, 
   3.412488117206745*^9}, {3.412506544851652*^9, 3.412506608851154*^9}, {
   3.412584075417086*^9, 3.412584083725947*^9}, {3.412584139211269*^9, 
   3.412584139397372*^9}, {3.412627313447881*^9, 3.412627453221629*^9}, {
   3.412627512920103*^9, 3.412627540365202*^9}, {3.412627666185147*^9, 
   3.412627676942071*^9}, {3.412627714140843*^9, 3.412627719483863*^9}, {
   3.412627756446477*^9, 3.412627788088246*^9}, {3.412627925949297*^9, 
   3.412627928730056*^9}, {3.412628344648072*^9, 3.412628350190778*^9}, {
   3.412670582876371*^9, 3.41267058801012*^9}, {3.41267800771209*^9, 
   3.412678034656198*^9}, {3.412678084302888*^9, 3.412678252674631*^9}, {
   3.412678309382562*^9, 3.412678326768533*^9}, {3.412678361174843*^9, 
   3.412678397144413*^9}, {3.41267849783472*^9, 3.412678502872738*^9}, 
   3.41267858515945*^9, {3.412686981917259*^9, 3.412687096962365*^9}, {
   3.412687223271521*^9, 3.412687280692552*^9}, {3.412687354013867*^9, 
   3.412687373099001*^9}, {3.412687455914428*^9, 3.412687461654777*^9}, {
   3.412690717408206*^9, 3.412690717724956*^9}, 3.412690986637352*^9, {
   3.412691038934316*^9, 3.412691124331191*^9}, {3.412691178542353*^9, 
   3.41269119788489*^9}, {3.412691240071916*^9, 3.412691334079837*^9}, 
   3.412691369455601*^9, {3.412691402941965*^9, 3.41269153647119*^9}, {
   3.412691599483134*^9, 3.412691627885774*^9}, {3.41269228202347*^9, 
   3.412692284435011*^9}, {3.412693644017925*^9, 3.412693650246446*^9}, {
   3.412693712322021*^9, 3.412693713022721*^9}, {3.412693772880273*^9, 
   3.412693889872709*^9}, {3.412693933907532*^9, 3.412693938401407*^9}, {
   3.412694023897898*^9, 3.412694082128686*^9}, 3.412695501977306*^9, {
   3.41269559154709*^9, 3.412695670636764*^9}, {3.412695721068765*^9, 
   3.412695726452069*^9}, {3.412695784433119*^9, 3.412695784589148*^9}, {
   3.412695838336431*^9, 3.412695839757101*^9}, {3.412695873336192*^9, 
   3.412695889771503*^9}, {3.412695968181479*^9, 3.412695968555044*^9}, {
   3.412752437450813*^9, 3.412752470984698*^9}, {3.412752585122889*^9, 
   3.412752587712005*^9}, {3.412752634489856*^9, 3.412752634943356*^9}, {
   3.412838117727712*^9, 3.412838153966481*^9}, {3.412916672491142*^9, 
   3.412916720895989*^9}, {3.41291680789505*^9, 3.412916824412221*^9}, {
   3.412916967380834*^9, 3.41291699946493*^9}, {3.412917058955951*^9, 
   3.412917071438456*^9}, {3.412917120789571*^9, 3.412917146218896*^9}, {
   3.412917297984192*^9, 3.412917319312333*^9}, {3.412917370540854*^9, 
   3.412917383849256*^9}, {3.412966484684769*^9, 3.412966490440916*^9}, {
   3.413007456072404*^9, 3.413007467812418*^9}, {3.413011563137247*^9, 
   3.413011566996316*^9}, {3.41301179744488*^9, 3.413011799458632*^9}, {
   3.41301185874282*^9, 3.41301188311826*^9}, {3.413011942930114*^9, 
   3.413011987561107*^9}, {3.413012112326014*^9, 3.413012121075178*^9}, {
   3.4130219528952*^9, 3.413021954969516*^9}, {3.413107433494814*^9, 
   3.413107433708717*^9}, {3.413108046971803*^9, 3.413108063049274*^9}, {
   3.41329735327485*^9, 3.41329741131181*^9}, {3.413297572322529*^9, 
   3.413297624590212*^9}, {3.413297691424493*^9, 3.413297711224218*^9}, {
   3.413463935244585*^9, 3.413463943882923*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["length & area", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.41243443913564*^9, 3.412434448687694*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "clength", ",", "carea", ",", "les", ",", "ars", ",", "length", ",", 
    "area"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"clength", "[", 
     RowBox[{"num_", ",", "step_", ",", "opts___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", "=", 
        RowBox[{
         SubscriptBox["\[PartialD]", "u"], 
         RowBox[{
          SubscriptBox["curve", 
           RowBox[{"num", ",", "step"}]], "[", "u", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"(", "c", ")"}], ".", 
           RowBox[{"(", "c", ")"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "opts"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"carea", "[", 
     RowBox[{"num_", ",", "step_", ",", "opts___"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", "=", 
        RowBox[{
         SubscriptBox["curve", 
          RowBox[{"num", ",", "step"}]], "[", "u", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{
             SubscriptBox["\[PartialD]", "u"], 
             RowBox[{"c", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "u"], 
             RowBox[{"c", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "opts"}], "]"}], "/", 
       "2"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ars", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}], ",", "grid", ",", "x", ",", "y", 
        ",", "tt", ",", "fddf"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"grid", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["x", "grid"], "]"}], "[", "t", "]"}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["sol", 
           RowBox[{"num", ",", "step"}]], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["y", "grid"], "]"}], "[", "t", "]"}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["sol", 
           RowBox[{"num", ",", "step"}]], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fddf", " ", "=", " ", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "n"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Abs", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"fddf", "[", "x", "]"}], " ", "y"}], " ", "-", 
           RowBox[{
            RowBox[{"fddf", "[", "y", "]"}], "x"}]}], "]"}], "/", "2"}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"les", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}], ",", "grid", ",", "x", ",", "y", 
        ",", "tt", ",", "fddf"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"grid", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["x", "grid"], "]"}], "[", "t", "]"}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["sol", 
           RowBox[{"num", ",", "step"}]], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["y", "grid"], "]"}], "[", "t", "]"}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["sol", 
           RowBox[{"num", ",", "step"}]], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fddf", " ", "=", " ", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "n"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Total", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"fddf", "[", "x", "]"}], "^", "2"}], " ", "+", 
          RowBox[{
           RowBox[{"fddf", "[", "y", "]"}], "^", "2"}]}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"length", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_", ",", "opts___"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xint", ",", "yint", ",", 
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xint", "=", 
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", 
               RowBox[{"i", "/", "n"}]}], ",", 
              RowBox[{
               RowBox[{
                SubscriptBox["x", "i"], "[", "t", "]"}], "/.", 
               RowBox[{
                SubscriptBox["sol", 
                 RowBox[{"num", ",", "step"}]], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", 
                  RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yint", "=", 
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"2", "\[Pi]", " ", 
               RowBox[{"i", "/", "n"}]}], ",", 
              RowBox[{
               RowBox[{
                SubscriptBox["y", "i"], "[", "t", "]"}], "/.", 
               RowBox[{
                SubscriptBox["sol", 
                 RowBox[{"num", ",", "step"}]], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", 
                  RowBox[{"i", "+", "n", "+", "2"}]}], "]"}], "]"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "u"], 
               RowBox[{"xint", "[", "u", "]"}]}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[PartialD]", "u"], 
               RowBox[{"yint", "[", "u", "]"}]}], ")"}], "^", "2"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}], ",", 
         "opts"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"area", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_", ",", "opts___"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xint", ",", "yint", ",", 
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xint", "=", 
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", 
                RowBox[{"i", "/", "n"}]}], ",", 
               RowBox[{
                RowBox[{
                 SubscriptBox["x", "i"], "[", "t", "]"}], "/.", 
                RowBox[{
                 SubscriptBox["sol", 
                  RowBox[{"num", ",", "step"}]], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yint", "=", 
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "\[Pi]", " ", 
                RowBox[{"i", "/", "n"}]}], ",", 
               RowBox[{
                RowBox[{
                 SubscriptBox["y", "i"], "[", "t", "]"}], "/.", 
                RowBox[{
                 SubscriptBox["sol", 
                  RowBox[{"num", ",", "step"}]], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"i", "+", "n", "+", "2"}]}], "]"}], "]"}]}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"yint", "[", "u", "]"}], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[PartialD]", "u"], 
              RowBox[{"xint", "[", "u", "]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"xint", "[", "u", "]"}], 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[PartialD]", "u"], 
              RowBox[{"yint", "[", "u", "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}], ",", 
          "opts"}], "]"}], "/", "2"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412506861190336*^9, 3.412506912251284*^9}, {
   3.412507032440417*^9, 3.412507035159968*^9}, {3.412512225047366*^9, 
   3.412512238765546*^9}, {3.412512310225926*^9, 3.41251231121384*^9}, {
   3.412512399376499*^9, 3.412512411892982*^9}, {3.412513684098659*^9, 
   3.412513729371557*^9}, {3.4125144773772*^9, 3.412514502160539*^9}, {
   3.412514563561554*^9, 3.412514581180789*^9}, {3.412601931655989*^9, 
   3.41260194925532*^9}, {3.412602146967347*^9, 3.412602177802495*^9}, {
   3.412602215800517*^9, 3.412602218944418*^9}, {3.412602335784302*^9, 
   3.412602399939227*^9}, {3.412602461068645*^9, 3.412602463334652*^9}, {
   3.412602516053609*^9, 3.412602520615407*^9}, {3.412626650278184*^9, 
   3.412626791193283*^9}, {3.41262683934789*^9, 3.412626870664575*^9}, 
   3.412626965816562*^9, {3.412627969631715*^9, 3.412627983333544*^9}, {
   3.412628469447529*^9, 3.412628479779243*^9}, {3.412665950232645*^9, 
   3.412665953896356*^9}, {3.412838336472742*^9, 3.41283836640501*^9}, {
   3.412917514646272*^9, 3.412917544570385*^9}, {3.412917587339213*^9, 
   3.41291759684138*^9}, {3.412917774759908*^9, 3.412917784765484*^9}, {
   3.412917850375039*^9, 3.4129178633972*^9}, {3.412917905018546*^9, 
   3.412917908291034*^9}, {3.412917965099172*^9, 3.412918013058833*^9}, {
   3.412918050555378*^9, 3.412918069285866*^9}, {3.412918125320061*^9, 
   3.412918149627807*^9}, {3.412918348175658*^9, 3.41291837315618*^9}, {
   3.412918446657676*^9, 3.412918463045699*^9}, {3.412966170500925*^9, 
   3.412966197938313*^9}, {3.413006180602939*^9, 3.413006199400817*^9}, {
   3.41302195569519*^9, 3.413021957362192*^9}, {3.413119191297021*^9, 
   3.413119213785133*^9}, {3.413187534125173*^9, 3.413187539036531*^9}, {
   3.413192520497499*^9, 3.413192525812383*^9}, {3.413193815815614*^9, 
   3.413193818500678*^9}, {3.41320314504452*^9, 3.413203171278222*^9}, {
   3.413283450015837*^9, 3.413283505415514*^9}, {3.413283910287074*^9, 
   3.413283917597776*^9}, {3.413284043730994*^9, 3.413284066694317*^9}, {
   3.413284117359672*^9, 3.413284123271581*^9}, {3.413284175715143*^9, 
   3.413284217831481*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["point distance", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.412434616382449*^9, 3.412434623710853*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "dist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", 
    RowBox[{"num_", ",", "step_", ",", "t_", ",", "i_", ",", "j_"}], "]"}], ":=",
    
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "i"], "[", "t", "]"}], "/.", 
          RowBox[{
           SubscriptBox["sol", 
            RowBox[{"num", ",", "step"}]], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "j"], "[", "t", "]"}], "/.", 
          RowBox[{
           SubscriptBox["sol", 
            RowBox[{"num", ",", "step"}]], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ")"}]}], ")"}], "^", 
      "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "i"], "[", "t", "]"}], "/.", 
          RowBox[{
           SubscriptBox["sol", 
            RowBox[{"num", ",", "step"}]], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"i", "+", 
              SubscriptBox["gpn", 
               RowBox[{"num", ",", "step"}]], "+", "2"}]}], "]"}], "]"}]}], 
         ")"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["y", "j"], "[", "t", "]"}], "/.", 
          RowBox[{
           SubscriptBox["sol", 
            RowBox[{"num", ",", "step"}]], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"j", "+", 
              SubscriptBox["gpn", 
               RowBox[{"num", ",", "step"}]], "+", "2"}]}], "]"}], "]"}]}], 
         ")"}]}], ")"}], "^", "2"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412426387256889*^9, 3.412426444016889*^9}, {
  3.412433342027387*^9, 3.412433343330721*^9}, {3.412433378274786*^9, 
  3.41243347530121*^9}, {3.412507598376338*^9, 3.412507635518581*^9}, {
  3.41258684160326*^9, 3.412586844543183*^9}, {3.41291850703956*^9, 
  3.412918534616828*^9}, {3.41291869607238*^9, 3.412918698351831*^9}, {
  3.412918744865549*^9, 3.412918789669701*^9}, {3.412918852997651*^9, 
  3.412918859322144*^9}, {3.413021958109285*^9, 3.413021959927779*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["fit", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.412603309486214*^9, 3.412603315318732*^9}, {
  3.412626430500581*^9, 3.412626436707382*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fit", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "dm", ",", "d", ",", "i", ",", "j", ",", "mdp", ",", "lmdp", 
        ",", "l", ",", "ll", ",", "umdp", ",", "xmdp", ",", "ymdp", ",", 
        "order", ",", "xexp", ",", "yexp", ",", "xfk", ",", "yfk", ",", 
        "xpara", ",", "ypara", ",", "yfitdat", ",", "xfitdat"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        SubscriptBox["gpn", 
         RowBox[{"num", ",", "step"}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dm", "=", 
        SubscriptBox["dmin", "num"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mdp", "=", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Reap", "[", "\[IndentingNewLine]", 
          RowBox[{"For", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ";", 
              RowBox[{"j", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"d", "=", 
              RowBox[{"dist", "[", 
               RowBox[{"num", ",", "step", ",", "t", ",", "i", ",", "j"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"d", "\[GreaterEqual]", " ", "dm"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{"d", ",", "i"}], "}"}], "]"}], ";", 
                 RowBox[{"j", "=", "i"}]}], "}"}], ",", "None", ",", 
               RowBox[{"Print", "[", "\"\<Error at mdp\>\"", "]"}]}], 
              "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        
       RowBox[{"lmdp", "=", 
        RowBox[{"Length", "[", "mdp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["l", "0"], "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["l", "i"], "=", 
          RowBox[{
           SubscriptBox["l", 
            RowBox[{"i", "-", "1"}]], "+", 
           RowBox[{"mdp", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "lmdp"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ll", "=", 
        SubscriptBox["l", "lmdp"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mdp", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"mdp", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"xmdp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{
              SubscriptBox["l", "i"], "/", "ll"}]}], ",", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", 
               RowBox[{"mdp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]], "[", 
              "t", "]"}], "/.", 
             RowBox[{
              SubscriptBox["sol", 
               RowBox[{"num", ",", "step"}]], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", 
                RowBox[{
                 RowBox[{"mdp", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "+", 
                 "1"}]}], "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "lmdp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ymdp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{
              SubscriptBox["l", "i"], "/", "ll"}]}], ",", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", 
               RowBox[{"mdp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]], "[", 
              "t", "]"}], "/.", 
             RowBox[{
              SubscriptBox["sol", 
               RowBox[{"num", ",", "step"}]], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", 
                RowBox[{"n", "+", 
                 RowBox[{"mdp", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "+", 
                 "2"}]}], "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "lmdp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"order", "=", 
        RowBox[{"16", "-", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{"t", "/", "8"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xexp", "[", "u_", "]"}], ":=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["xfk", "i"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}], "+", 
           RowBox[{
            SubscriptBox["xfk", 
             RowBox[{"order", "+", "i"}]], 
            RowBox[{"Sin", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yexp", "[", "u_", "]"}], ":=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["yfk", "i"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}], "+", 
           RowBox[{
            SubscriptBox["yfk", 
             RowBox[{"order", "+", "i"}]], 
            RowBox[{"Sin", "[", 
             RowBox[{"i", " ", "u"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xpara", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xfk", "i"], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"2", " ", "order"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ypara", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["yfk", "i"], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"2", " ", "order"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xfitdat", "=", 
        RowBox[{"FindFit", "[", 
         RowBox[{"xmdp", ",", 
          RowBox[{"xexp", "[", "u", "]"}], ",", "xpara", " ", ",", "u"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"yfitdat", "=", 
        RowBox[{"FindFit", "[", 
         RowBox[{"ymdp", ",", 
          RowBox[{"yexp", "[", "u", "]"}], ",", "ypara", " ", ",", "u"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["curve", 
          RowBox[{"num", ",", 
           RowBox[{"step", "+", "1"}]}]], "[", "u_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"xexp", "[", "u", "]"}], "/.", "xfitdat"}], ",", 
          RowBox[{
           RowBox[{"yexp", "[", "u", "]"}], "/.", "yfitdat"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["gpn", 
         RowBox[{"num", ",", 
          RowBox[{"step", "+", "1"}]}]], "=", "lmdp"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fip", "[", 
   RowBox[{"num_", ",", "step_", ",", "t_", ",", "order___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "[", 
     RowBox[{"num", ",", "step", ",", "t", ",", "order"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["curve", 
          RowBox[{"num", ",", 
           RowBox[{"step", "+", "1"}]}]], "[", "u", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["curve", 
            RowBox[{"num", ",", 
             RowBox[{"step", "+", "1"}]}]], "[", 
           RowBox[{"2", 
            RowBox[{"\[Pi]", "/", 
             SubscriptBox["gpn", 
              RowBox[{"num", ",", 
               RowBox[{"step", "+", "1"}]}]]}], "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            SubscriptBox["gpn", 
             RowBox[{"num", ",", 
              RowBox[{"step", "+", "1"}]}]]}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", ")"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412624980166757*^9, 3.412625142941959*^9}, {
   3.412625174889381*^9, 3.412625189089378*^9}, {3.412625267849526*^9, 
   3.412625274632317*^9}, 3.412625312179382*^9, {3.412625782227138*^9, 
   3.412625782795424*^9}, {3.412625817060315*^9, 3.41262581842682*^9}, {
   3.412625849308567*^9, 3.412625916556086*^9}, {3.412626058355382*^9, 
   3.412626224155487*^9}, {3.412626259572062*^9, 3.412626308219299*^9}, {
   3.412626595426507*^9, 3.412626624310228*^9}, {3.41262698972954*^9, 
   3.412626990296957*^9}, {3.412627024321729*^9, 3.412627026019994*^9}, 
   3.412627069433143*^9, {3.412628173821054*^9, 3.412628176425886*^9}, 
   3.412628244906507*^9, {3.412662430176602*^9, 3.412662464428232*^9}, {
   3.412664147242432*^9, 3.412664165609672*^9}, {3.412664907105945*^9, 
   3.412664934143717*^9}, {3.412664976901935*^9, 3.412664983449589*^9}, {
   3.412665440412535*^9, 3.41266545512145*^9}, 3.412666569495558*^9, 
   3.412668720853376*^9, 3.412671714975175*^9, {3.412671869453055*^9, 
   3.412671888226835*^9}, {3.412686479288552*^9, 3.41268648116558*^9}, {
   3.412696872063546*^9, 3.412696913426916*^9}, {3.412696958392958*^9, 
   3.412697140804914*^9}, {3.412697202594726*^9, 3.412697223115642*^9}, {
   3.412697271229752*^9, 3.412697378377005*^9}, {3.412935201713021*^9, 
   3.412935270016905*^9}, {3.412935462400068*^9, 3.412935463057812*^9}, {
   3.412967957578833*^9, 3.412967970369083*^9}, 3.412968048463639*^9, {
   3.413021960733077*^9, 3.413021961315908*^9}, {3.413120204437916*^9, 
   3.413120214092146*^9}, 3.413177739438619*^9, {3.413178106345674*^9, 
   3.413178115057492*^9}, 3.413181457885137*^9, {3.413182091396244*^9, 
   3.413182104154894*^9}, {3.413195484942204*^9, 3.41319548506723*^9}, {
   3.413195585496886*^9, 3.413195585612968*^9}, {3.413195913773322*^9, 
   3.413195947605885*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.413176857383069*^9, 3.413176869463429*^9}, {
   3.41317694107989*^9, 3.413177036668475*^9}, {3.413177302523635*^9, 
   3.413177307002368*^9}, {3.413177375251108*^9, 3.413177447356849*^9}, {
   3.413177484156643*^9, 3.413177512461128*^9}, 3.413177753874234*^9, {
   3.413178136848392*^9, 3.413178162853852*^9}, {3.413178464781584*^9, 
   3.41317850099709*^9}, {3.413178574886139*^9, 3.413178590727823*^9}, {
   3.413178650952804*^9, 3.413178770704477*^9}, {3.41317880494806*^9, 
   3.413178851273817*^9}, {3.413178896216458*^9, 3.413178898210358*^9}, {
   3.413178944919335*^9, 3.413178975516682*^9}, {3.413179019615107*^9, 
   3.413179187973501*^9}, {3.413179233804958*^9, 3.41317923404422*^9}, {
   3.413179343033907*^9, 3.41317934487338*^9}, {3.41317943464006*^9, 
   3.413179480838965*^9}, {3.413179535535258*^9, 3.413179551180993*^9}, 
   3.413179612721629*^9, {3.413179682788458*^9, 3.413179687126333*^9}, {
   3.413179741429707*^9, 3.413179780986746*^9}, {3.41317985291674*^9, 
   3.41317987430044*^9}, {3.413179925477123*^9, 3.413180057143573*^9}, {
   3.413180099218078*^9, 3.41318016107225*^9}, {3.413180521907129*^9, 
   3.413180523214936*^9}, {3.413180570476324*^9, 3.413180588182971*^9}, 
   3.413180627273624*^9, {3.413181432767763*^9, 3.413181452367981*^9}, 
   3.413181542103183*^9, 3.413182098891706*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["errorfunction", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.412626439643555*^9, 3.412626442963379*^9}, 
   3.412924330205943*^9, {3.413006454417912*^9, 3.413006471680893*^9}, {
   3.413138620677281*^9, 3.41313862171575*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"erf", ",", "erf2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"erf2", "[", 
     RowBox[{"num_", ",", "step_", ",", "t_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         SubscriptBox["gpn", 
          RowBox[{"num", ",", "step"}]]}], ",", "grid", ",", "x", ",", "y", 
        ",", "tt", ",", "fddf"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"grid", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["x", "grid"], "]"}], "[", "t", "]"}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["sol", 
           RowBox[{"num", ",", "step"}]], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["y", "grid"], "]"}], "[", "t", "]"}], "]"}], "/.", 
         RowBox[{
          SubscriptBox["sol", 
           RowBox[{"num", ",", "step"}]], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fddf", " ", "=", " ", 
        RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "n"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"1000", 
        RowBox[{"Abs", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"fddf", "[", "x", "]"}], " ", "y"}], " ", "-", 
             RowBox[{
              RowBox[{"fddf", "[", "y", "]"}], "x"}]}], "]"}], "/", "2"}], 
          "+", 
          RowBox[{"2", "\[Pi]", " ", "t"}], " ", "-", 
          RowBox[{"200", "\[Pi]"}]}], "\[IndentingNewLine]", "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"erf", "[", 
   RowBox[{"num_", ",", "step_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"1000", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"carea", "[", 
      RowBox[{"num", ",", "step"}], "]"}], "+", 
     RowBox[{"2", "\[Pi]", " ", 
      SubscriptBox["tf", 
       RowBox[{"num", ",", 
        RowBox[{"step", "-", "1"}]}]]}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ars", "[", 
        RowBox[{"num", ",", "step", ",", "t"}], "]"}], "+", 
       RowBox[{"2", "\[Pi]", " ", "t"}]}], ")"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.413006494067152*^9, 3.413006494464069*^9}, {
   3.413012653714446*^9, 3.413012657861234*^9}, 3.413123321407597*^9, {
   3.413283249400961*^9, 3.413283325586466*^9}, {3.413283383849194*^9, 
   3.413283384678355*^9}, {3.413284264246719*^9, 3.413284272477896*^9}, {
   3.413285945846751*^9, 3.413285957452043*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["process equation", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.413137305760394*^9, 3.413137311168211*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "staf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"staf", "[", 
    RowBox[{"num_", ",", "step_", ",", 
     RowBox[{"n_:", "150"}], ",", 
     RowBox[{"t0_:", "0"}], ",", "opts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "grdpts", ",", "ugrid", ",", "X", ",", "Y", ",", "xu", ",", "xuu", ",", 
       "yu", ",", "yuu", ",", "v", ",", "xeqns", ",", "yeqns", ",", "xic", 
       ",", "yic"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]",
      
     RowBox[{
      RowBox[{"grdpts", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ugrid", "=", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "n"}], " ", "grdpts"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"X", "[", "t_", "]"}], "=", 
       RowBox[{"Through", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          SubscriptBox["x", "grdpts"], "]"}], "[", "t", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Y", "[", "t_", "]"}], "=", 
       RowBox[{"Through", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          SubscriptBox["y", "grdpts"], "]"}], "[", "t", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xu", "=", 
       RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
        RowBox[{
         RowBox[{"Derivative", "[", "1", "]"}], ",", "ugrid", ",", 
         RowBox[{"X", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"yu", "=", 
       RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
        RowBox[{
         RowBox[{"Derivative", "[", "1", "]"}], ",", "ugrid", ",", 
         RowBox[{"Y", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"xuu", "=", 
       RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
        RowBox[{
         RowBox[{"Derivative", "[", "2", "]"}], ",", "ugrid", ",", 
         RowBox[{"X", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"yuu", "=", 
       RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
        RowBox[{
         RowBox[{"Derivative", "[", "2", "]"}], ",", "ugrid", ",", 
         RowBox[{"Y", "[", "t", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"v", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xu", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"yu", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ")"}], "^", "2"}]}], "]"}], ",",
          
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xeqns", " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], 
          RowBox[{"X", "[", "t", "]"}]}], " ", "\[Equal]", 
         RowBox[{
          RowBox[{"v", "^", 
           RowBox[{"(", 
            RowBox[{"-", "2"}], ")"}]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"v", "^", 
               RowBox[{"(", 
                RowBox[{"-", "2"}], ")"}]}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xu", " ", "xuu"}], " ", "+", 
               RowBox[{"yu", " ", "yuu"}]}], ")"}], "xu"}], "+", "xuu"}], 
           ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"yeqns", " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], 
          RowBox[{"Y", "[", "t", "]"}]}], " ", "\[Equal]", 
         RowBox[{
          RowBox[{"v", "^", 
           RowBox[{"(", 
            RowBox[{"-", "2"}], ")"}]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"v", "^", 
               RowBox[{"(", 
                RowBox[{"-", "2"}], ")"}]}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xu", " ", "xuu"}], " ", "+", 
               RowBox[{"yu", " ", "yuu"}]}], ")"}], "yu"}], "+", "yuu"}], 
           ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xic", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", "t0", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            SubscriptBox["curve", 
             RowBox[{"num", ",", "step"}]], "[", "u", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"u", "\[Rule]", "ugrid"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yic", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Y", "[", "t0", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            SubscriptBox["curve", 
             RowBox[{"num", ",", "step"}]], "[", "u", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
         RowBox[{"u", "\[Rule]", "ugrid"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"First", "[", "\[IndentingNewLine]", 
       RowBox[{"NDSolve`ProcessEquations", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"xeqns", ",", "yeqns", ",", "xic", ",", "yic"}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            SubscriptBox["x", "grdpts"], "]"}], ",", 
           RowBox[{"Thread", "[", 
            SubscriptBox["y", "grdpts"], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "t", ",", "opts"}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.413137314603698*^9, 3.41313731483595*^9}, {
   3.41320512903613*^9, 3.413205138295018*^9}, {3.41320541404126*^9, 
   3.413205414518465*^9}, 3.413205632022391*^9, {3.413205699843004*^9, 
   3.413205747512619*^9}, {3.413206055004741*^9, 3.413206055350966*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["iteration and solution processing", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.413137335562059*^9, 3.413137352312842*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "itf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"itf", "[", 
    RowBox[{"num_", ",", "step_", ",", "n_", ",", "t1_", ",", "opts___"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state", ",", "t", ",", "t2", ",", "a", ",", "d"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["gpn", 
        RowBox[{"num", ",", "step"}]], "=", "n"}], ";", "\[IndentingNewLine]",
       
      RowBox[{"state", "=", 
       RowBox[{"staf", "[", 
        RowBox[{"num", ",", "step", ",", "n", ",", "t1", ",", "opts"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t2", "=", 
       RowBox[{"Catch", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "t1"}], ",", 
           RowBox[{"t", "\[LessEqual]", "100"}], "  ", ",", 
           RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t", "\[Equal]", "100"}], ",", 
              RowBox[{"t", "=", 
               RowBox[{"99", "+", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ars", "[", 
                   RowBox[{"num", ",", "step", ",", "99"}], "]"}], "/", "2"}],
                  "/", "\[Pi]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"NDSolve`Iterate", "[", 
             RowBox[{"state", ",", " ", "t"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             SubscriptBox["sol", 
              RowBox[{"num", ",", "step"}]], " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{"NDSolve`ProcessSolutions", "[", "state", "]"}], 
              "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"step", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                SubscriptBox["dmin", "num"], "=", 
                RowBox[{"Min", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"dist", "[", 
                    RowBox[{"num", ",", "1", ",", "0", ",", "i", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t", ">", "99"}], ",", 
              RowBox[{
               RowBox[{"Throw", "[", "t", "]"}], ";", 
               RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"d", "=", 
             RowBox[{"erf", "[", 
              RowBox[{"num", ",", "step", ",", "t"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"d", "\[GreaterEqual]", " ", "1"}], ",", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Fit at t = \>\"", ",", "t", ",", "\"\<, erf = \>\"", ",",
                  " ", "d"}], "]"}], ";", 
               RowBox[{"Throw", "[", "t", "]"}], ";"}], ",", "None", ",", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Error at exit function, error = \>\"", ",", "d", ",", 
                 "\"\<, t = \>\"", ",", "t"}], "]"}], ";", 
               RowBox[{"Throw", "[", "t", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["tf", 
        RowBox[{"num", ",", "step"}]], "=", "t2"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.413137368819165*^9, 3.413137375226867*^9}, {
   3.413137454238571*^9, 3.413137454482451*^9}, {3.413140860290099*^9, 
   3.413140870151787*^9}, {3.41317713625008*^9, 3.413177204234616*^9}, {
   3.413189821428384*^9, 3.413189822153546*^9}, {3.413206406033141*^9, 
   3.413206416667656*^9}, 3.41328583152111*^9, {3.413298010858786*^9, 
   3.413298012150309*^9}, {3.413349668889708*^9, 3.413349678017324*^9}, {
   3.413353527348612*^9, 3.413353556627041*^9}, {3.413353590730922*^9, 
   3.413353603410553*^9}, {3.413353740636574*^9, 3.413353745857162*^9}, {
   3.413353964136979*^9, 3.413353964638596*^9}, {3.413354055472891*^9, 
   3.413354063541675*^9}, {3.413354694168558*^9, 3.413354697542597*^9}, {
   3.413355436613616*^9, 3.413355443756836*^9}, {3.413355698116947*^9, 
   3.413355708068124*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["evolution", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.41313738832155*^9, 3.413137393553429*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "evo", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evo", "[", 
   RowBox[{"num_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"step", ",", 
      RowBox[{"t", "=", "0"}], ",", 
      RowBox[{"grid", "=", "150"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"step", "=", "1"}], ",", 
       RowBox[{"t", "<", "100"}], ",", 
       RowBox[{"step", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", "=", 
         RowBox[{"itf", "[", 
          RowBox[{"num", ",", "step", ",", "grid", ",", "t", ",", "opts"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", ">", "99"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"grid", "=", 
         RowBox[{"fit", "[", 
          RowBox[{"num", ",", "step", ",", "t"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["steps", "num"], "=", "step"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.413137463317048*^9, 3.413137468141867*^9}, {
   3.41314089273005*^9, 3.413140901159806*^9}, {3.4131870302274*^9, 
   3.413187032135197*^9}, {3.413297519201748*^9, 3.41329752643245*^9}, {
   3.413348077973418*^9, 3.413348126107103*^9}, {3.413348974551714*^9, 
   3.413349004094366*^9}, {3.413349062964115*^9, 3.413349064955973*^9}, 
   3.41334928943049*^9, {3.413349370870698*^9, 3.413349371011698*^9}, {
   3.413349483853058*^9, 3.41334949249388*^9}, {3.413349532629395*^9, 
   3.413349533013978*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["invariant error plot", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.413139662547315*^9, 3.413139666818869*^9}, 
   3.413141302398918*^9, {3.413141358844129*^9, 3.413141363124513*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "invar", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invar", "[", 
   RowBox[{
   "num_", ",", "step_", ",", "n_", ",", "t1_", ",", "t2_", ",", "opts___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "t", ",", "state", ",", "fsol", ",", "vv", ",", "vars", ",", "grid", ",",
       "XX", ",", "YY", ",", "xu", ",", "yu", ",", "invariant"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"staf", "[", 
       RowBox[{"num", ",", "step", ",", "n", ",", "t1", ",", "opts"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NDSolve`Iterate", "[", 
      RowBox[{"state", ",", "t2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fsol", "=", 
      RowBox[{"{", 
       RowBox[{"NDSolve`ProcessSolutions", "[", "state", "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vv", "=", 
      RowBox[{"state", "@", "\"\<DependentVariables\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vars", "=", 
      RowBox[{"Through", "[", 
       RowBox[{"vv", "[", "t", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"grid", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"XX", "[", "t_", "]"}], "=", 
      RowBox[{"Through", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         SubscriptBox["x", "grid"], "]"}], "[", "t", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"YY", "[", "t_", "]"}], "=", 
      RowBox[{"Through", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         SubscriptBox["y", "grid"], "]"}], "[", "t", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xu", "=", 
      RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
       RowBox[{
        RowBox[{"Derivative", "[", "1", "]"}], ",", "grid", ",", 
        RowBox[{"XX", "[", "t", "]"}], ",", 
        RowBox[{"DifferenceOrder", "\[Rule]", "6"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yu", "=", 
      RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
       RowBox[{
        RowBox[{"Derivative", "[", "1", "]"}], ",", "grid", ",", 
        RowBox[{"YY", "[", "t", "]"}], ",", 
        RowBox[{"DifferenceOrder", "\[Rule]", "6"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invariant", "=", 
      RowBox[{"1000", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"YY", "[", "t", "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"xu", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"XX", "[", "t", "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"yu", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "/", "2"}], 
         "+", 
         RowBox[{"2", "\[Pi]", " ", "t"}], "-", 
         RowBox[{"200", "\[Pi]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"InvariantErrorPlot", "[", 
      RowBox[{"invariant", ",", "vars", ",", "t", ",", "fsol"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.413140094490965*^9, 3.4131401030601*^9}, {
   3.413140134547824*^9, 3.413140145731675*^9}, {3.41314052943666*^9, 
   3.413140531521503*^9}, 3.413282093755335*^9, {3.413282154708087*^9, 
   3.413282158368325*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["total functions: length, area, iso", "Subsubsection",
 InitializationCell->True,
 CellChangeTimes->{{3.413465211927064*^9, 3.413465237919867*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"lt", ",", "at", ",", "lla", ",", "llafit", ",", "l"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lt", "[", 
     RowBox[{"num_", ",", "t_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          SubscriptBox["steps", "num"]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["tf", 
             RowBox[{"num", ",", 
              RowBox[{"i", "-", "1"}]}]], "\[LessEqual]", " ", "t", " ", 
            "\[LessEqual]", " ", 
            SubscriptBox["tf", 
             RowBox[{"num", ",", "i"}]]}], ",", 
           RowBox[{"Break", "[", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"les", "[", 
        RowBox[{"num", ",", "i", ",", "t"}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"at", "[", 
     RowBox[{"num_", ",", "t_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          SubscriptBox["steps", "num"]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["tf", 
             RowBox[{"num", ",", 
              RowBox[{"i", "-", "1"}]}]], "\[LessEqual]", " ", "t", " ", 
            "\[LessEqual]", " ", 
            SubscriptBox["tf", 
             RowBox[{"num", ",", "i"}]]}], ",", 
           RowBox[{"Break", "[", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ars", "[", 
        RowBox[{"num", ",", "i", ",", "t"}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"lla", "[", "num_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"lt", "[", 
             RowBox[{"num", ",", "t"}], "]"}], "^", "2"}], "/", 
           RowBox[{"at", "[", 
            RowBox[{"num", ",", "t"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "99"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", 
        RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"llafit", "[", "num_", "]"}], ":=", 
    RowBox[{"Fit", "[", 
     RowBox[{
      RowBox[{"lla", "[", "num", "]"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"t", "^", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "20"}], "]"}]}], "]"}], ",", "t"}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["l", "num_"], "[", "t_", "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["iso", "num"], "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"200", "\[Pi]"}], "-", 
      RowBox[{"2", "\[Pi]", " ", "t"}]}], ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.413454989026618*^9, 3.413455094673855*^9}, {
   3.413455156702978*^9, 3.413455214454206*^9}, {3.413455818101075*^9, 
   3.413455865285696*^9}, {3.413455899499065*^9, 3.413455902677074*^9}, 
   3.41345594293372*^9, {3.413455976022322*^9, 3.413455980086055*^9}, {
   3.413458367760642*^9, 3.413458430171577*^9}, {3.413460883205418*^9, 
   3.413460892146218*^9}, {3.413460922600834*^9, 3.413461016389862*^9}, {
   3.413461046638525*^9, 3.413461081817484*^9}, {3.41346112044266*^9, 
   3.413461158076197*^9}, {3.413461193542829*^9, 3.413461196358422*^9}, {
   3.413461251476794*^9, 3.41346133860578*^9}, {3.413461410630204*^9, 
   3.413461427155781*^9}, 3.413461483431604*^9, {3.413461909017636*^9, 
   3.413461961747858*^9}, {3.413462175366387*^9, 3.413462178545568*^9}, {
   3.413462266106141*^9, 3.413462269971359*^9}, {3.413462355007472*^9, 
   3.413462356919909*^9}, {3.413462394435366*^9, 3.413462396548587*^9}, {
   3.413462564825629*^9, 3.413462565194991*^9}, {3.413462616030377*^9, 
   3.413462639861266*^9}, {3.413462965289931*^9, 3.413462975787288*^9}, {
   3.413463128805041*^9, 3.41346313601892*^9}, {3.413463328328682*^9, 
   3.413463328438261*^9}, {3.413463360970543*^9, 3.413463361110504*^9}, {
   3.413463583868612*^9, 3.413463584538748*^9}, {3.413465125162132*^9, 
   3.413465140895448*^9}, {3.413465698310328*^9, 3.413465704514472*^9}, {
   3.413465762188711*^9, 3.413465765415123*^9}}]
}, Open  ]],

Cell["", "Subsubsection",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["evolution", "Subsection",
 CellChangeTimes->{{3.412411622384135*^9, 3.412411640505307*^9}, {
  3.412592468854549*^9, 3.412592470653406*^9}}],

Cell[CellGroupData[{

Cell["specific curves", "Subsubsection",
 CellChangeTimes->{{3.410245441283543*^9, 3.410245475033231*^9}, 
   3.410245677237995*^9, {3.410676300239225*^9, 3.410676302415225*^9}, {
   3.411060836901735*^9, 3.411060840061742*^9}, {3.411061007391761*^9, 
   3.411061008279843*^9}, {3.411061075904665*^9, 3.41106107669667*^9}, {
   3.411063936852494*^9, 3.411063938756834*^9}, {3.411661360191956*^9, 
   3.411661362743864*^9}, {3.412069549442858*^9, 3.412069550634895*^9}, {
   3.412583178361078*^9, 3.412583181072379*^9}, {3.41258324863254*^9, 
   3.41258324996032*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"31", ",", "1", ",", "1", ",", 
    RowBox[{"4", "/", "10"}], ",", 
    RowBox[{"9", "/", "10"}], ",", 
    RowBox[{"5", "/", "10"}], ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"32", ",", "1", ",", "1", ",", 
    RowBox[{"4", "/", "10"}], ",", 
    RowBox[{"9", "/", "10"}], ",", "0", ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"33", ",", "1", ",", "1", ",", 
    RowBox[{"4", "/", "10"}], ",", 
    RowBox[{"8", "/", "10"}], ",", 
    RowBox[{"3", "/", "10"}], ",", 
    RowBox[{"4", "/", "10"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"34", ",", "1", ",", "1", ",", 
    RowBox[{"4", "/", "10"}], ",", 
    RowBox[{"8", "/", "10"}], ",", 
    RowBox[{"3", "/", "10"}], ",", 
    RowBox[{
     RowBox[{"-", "4"}], "/", "10"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"35", ",", "1", ",", "1", ",", 
    RowBox[{"7", "/", "10"}], ",", 
    RowBox[{"99", "/", "100"}], ",", "0", ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"36", ",", "1", ",", 
    RowBox[{"15", "/", "10"}], ",", 
    RowBox[{"-", "2"}], ",", "0", ",", "0", ",", 
    RowBox[{
     RowBox[{"-", "6"}], "/", "10"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"37", ",", "1", ",", "1", ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", 
    RowBox[{
     RowBox[{"-", "3"}], "/", "5"}], ",", 
    RowBox[{"1", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"38", ",", "5", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"39", ",", "1", ",", "1", ",", 
    RowBox[{"1", "/", "2"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", "2", ",", 
    RowBox[{"1", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"40", ",", "2", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{
     RowBox[{"-", "3"}], "/", "4"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"41", ",", "1", ",", "1", ",", 
    RowBox[{
     RowBox[{"-", "25"}], "/", "10"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", 
    RowBox[{"1", "/", "5"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{
   "42", ",", " ", "1", ",", " ", "1", ",", ".8", ",", "0", " ", ",", "0", 
    ",", 
    RowBox[{"1", "/", "7"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sp", "[", 
   RowBox[{"43", ",", " ", 
    RowBox[{"165", "/", "100"}], ",", " ", ".5", ",", "1", ",", "0", " ", ",",
     "0", ",", 
    RowBox[{
     RowBox[{"-", "6"}], "/", "10"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.410246165299508*^9, 3.410246203138352*^9}, {
   3.410676209468894*^9, 3.410676209974107*^9}, {3.412069484857519*^9, 
   3.412069501142572*^9}, 3.412580510485746*^9, {3.412583300269643*^9, 
   3.412583303845653*^9}, {3.412583478569598*^9, 3.412583520696222*^9}, {
   3.412583642527065*^9, 3.412583730830786*^9}, {3.412583882878316*^9, 
   3.41258390037995*^9}, {3.413184234057834*^9, 3.413184237953272*^9}, {
   3.41318428636474*^9, 3.413184301953742*^9}, 3.413184461355039*^9, 
   3.413184817908163*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["random curves", "Subsubsection",
 CellChangeTimes->{{3.412582789597501*^9, 3.412582816140191*^9}, 
   3.412583278671901*^9, {3.412685338319972*^9, 3.412685339975862*^9}, {
   3.412874496331982*^9, 3.412874497514432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"rp", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.412605063062723*^9, 3.412605063218825*^9}, {
  3.413123623116775*^9, 3.413123625792871*^9}, {3.413285751581305*^9, 
  3.413285764013045*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
//+R/wfvZZXf
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-12.422797513393405`, 
   20.725747265544264`}, {-18.184903322824084`, 17.338345860571486`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.413193174161386*^9, 3.413204064150795*^9, 3.413205930303066*^9, 
   3.413206110061973*^9, 3.413267899270338*^9, 3.41327710674159*^9, 
   3.413285737998567*^9, 3.41328576814861*^9, 3.413297239527922*^9, 
   3.413347594346596*^9, {3.413353766076276*^9, 3.413353778473577*^9}, {
   3.413356006526908*^9, 3.413356041446952*^9}, 3.413381953701064*^9, 
   3.413450697723389*^9, 3.413450961741798*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/wP7pA2J
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-15.191074077428912`, 
   19.265469176847475`}, {-7.496006386589217, 16.399235618475615`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.413193174161386*^9, 3.413204064150795*^9, 3.413205930303066*^9, 
   3.413206110061973*^9, 3.413267899270338*^9, 3.41327710674159*^9, 
   3.413285737998567*^9, 3.41328576814861*^9, 3.413297239527922*^9, 
   3.413347594346596*^9, {3.413353766076276*^9, 3.413353778473577*^9}, {
   3.413356006526908*^9, 3.413356041446952*^9}, 3.413381953701064*^9, 
   3.413450697723389*^9, 3.413450962290192*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1zmpfIIwS8azdcPmRZx56tO4COGaCy6yghzLeLWP17GLxHrKd9yLRqnLeOK4
zpoY4bq9gnqmW1fw5+1uQ++J/kgtHhQcPfcP73077fuL6Cf8hN+Hayyr+IZB
lOxlwu3J1VdGHq7iyfe2rfwj+u+0qeXuPXVr+KSWk/Uq0a+5GXI3ZC6u42xq
X2fPEO6ZcggB0Q0890z3+/oCYj2/ndlZrMUE+S16j28Q/T61pHu+8joTSH6R
K24k5iFP42Xj+yYmOF83Mi1N2Njx8xMzH2bgtrOIu0/Mk8bY7qLpamYYWAqf
qyfmLfTWTld/KRZgXquyXyHmceCQxuieYhZIMr9pjIh5LdyvIpLBxAaM218L
ffMZ0Ps7OOzKYTZIXlJYuPyCAcLRMtZb0tng9PN3MueIfJC7vdPnmAk7RHF+
FDcm8mPUYLrwRCgHbN286piQSdTnla3A8RYOcD2rHGmdQdSXoffYQIkT0rha
rwoR+XQ2Sqkv+zMniB9bf3eZyDOToc5t2szc0G98RK6fyL+4M6cy9v/HDa4/
wjHXBwygNeGGe1O54UB9h+AkkZdg531xYjsPzIk5v2m/wwBy+VhQiw8vXFSe
uGUXw4BGY5Futkpe0BPjL88l8tk95IiHhAgfOP9KiJqJIu6nvffDQD4fsG1L
rzgbwYAEcup7/qFNUM/VdXUtiAGfnVfDD+rww2PV5X6BQAYsCXDnnA/ih0ct
Wbg0sT+Y1w+4H5YSgLfqSo1Sfgy4oLWXv0lZENqVhqaKLxDzqjE/p20tBJtX
qg3unCDOP3Yt+T8/IZjZ1NhrbUvk1fUD2xyThcB221C14DEGbD3sxrDvF4Jv
f3xtPK2IefrwTS2XeA+340+m/zJlgJ/LvmcJxHvxg8dvGq/rEfOMaz/7li4C
zFO0+FYGkd8tP6VWK0TgzrfWC4p0op7BsdpUblFQrE8KzqUS89FRfrI9ThSa
zMqqnRUYUFqqWHvhkRjUa40ZxHIxQCwmIAIvFYOJj+b83sT+zSL0Yx9Tnxi0
5BX9smRhQMrIZdyKLA5bPw7cWf2nA6XHPX7uyxKH4a8CXctTOtA3c7Tn6HMJ
+Gw4+je9WQcM7zSdnn8mBa8YvpzP7unAnuydl1brpOCdRK+rTaIOdNt3ac38
lgI//fGrazE6sG/iecZTujQU/BtJo4XrgI+86D/qJ2kQCr/ExfDSgYYCzrtV
ZTLAc/92eo65DjQWF0ZmDcjAreyTC437dSBkqGvsMqssVNAObczu0gEuR63+
tl2y0JWDdGUNdcDc9oNZSZUsPDTaYcOrqgNFYwHG3NVyEFuzf+jEGh0kZcvc
S4flQFBHfBfrEh08/oi2nuSQB0MOe6+0WTrYF5L2n98tD38bjliWj9Dh1eln
3hnl8qB97pR1RiMdpKYkCyILiPdKoxdsv4jny52b5A3j6hVg2PPQWTfieTVo
OfntYocCbH2hoaq9nQ6PRa+vW48pwLihud+ELh3k02S4FtlJ8Hn7tqGD6nTA
v9g01xqT4KiP1pVCATokXXRO/JRPAtXnTPv1O2nAduoVOTuCDAIWn16MudNg
fMc765E7ZHBuSG+pdaaBlO3OHfLpZEiwNrfMtKcBySzH+GIxGdTOl3jv+Y8G
WpUrhRnTZFD6N6RowKDBFLJfNLdRBIkdf4S6/mjDZ8H+jSdySiCYnHQ6bFkL
dr6SezmiRrx3fsSPfR3Xgq0Be+nKW5RAZn3HHd4uLfhv98fcCFMlKEt1EnIr
1QLzN9U24z5KkP7mxuDHYC3ofdeOK39Tgn38NiN3ubUg7HTIsfM+yjCvbOzZ
I6gJJa4vXZ9fV4YnvaIu/MyaMFw6R+2PUgbB+j1v9WY0oKgsqYCRqgwhHv1p
Fxs1wGBcu8urWhnkJ4ZKbsVrQKP2Mx4XcRV441P73UNQAzy+ir5YfqECrnsf
c57jpoJ7Np/1zEcVaEp7lO2wSIGvIh5rPWUqUHzzwsahIQqYwqU9Ka0qcP0C
v758GQXEOM9febyqAj3Zs66X/SiQ1SVyGN+nCov5xyXEh9XhNNNDmVPtqpBK
q9s5XKIG4X+MhEQHVKFr59Xqnc/VoOQ37X3xuCqESgvxpNxXg6Qhu9Wpf6rw
1wHUdl9Wg6xMKd0fcmpgn/zxrJeaGtxl63n21kENqsXH3tsmqILDcz338E41
GM7VYppxUoG9T5mL3AbU4I5XhISVpQrEcua82TumBmSmJ90fdqhAjbhi/OCC
GvxHFSq9Jq8Co+JuhblC6nD026EKtp/KcIvJhe61m3iv3pxqqWimDCkysSU9
meqQcL1/N4+OElxLDPFIfK4OEol930MVlEB0Qeqs8Wt12CPdpcIsoARxLxLV
fIvVYaXw/NWNCUUIW9QPv9ykDpxNVedEsxTBYK5x4s6qOjxp8HqZJ60IOetH
Jh33UyDMy91+lZ0Mm1qXxSoPUkCq+Xaz4jwJ1NSqwmUtKFD9PbrI/BcJ9CxK
6PnHKXDb4oDoy3ISKCZdO2rnRiFy6/qW5CAS1Hix7+2PosDDdxQT6ooCHOm+
eyUzhgKvQm2OxxJzZMUw/+yQQIHhW1cfLv4k/NYh7sMDCmi5sEPLRwWwf99S
OplNga6axs/l3gow45s74FdOgWnjExuTvzbDt4wR9UeVFLDastZpUrEZ/Gmy
xz/WUIBa9m5fxtPNUBu7w/XrNwossefKBJ/eDHt/S6wGdVDg44jj47d98nDn
0R0jy24KcAsXzB0FeejIErSQ7SOOd9pw4UqTB6XbFmOxRJ99cxsfD3OQh5h/
y+GrfyhQvCKvv9YjB97JFuKBs4RFSQfmS+XgftZrx/m/FKhISmReeiwHu9lO
aFUuUyA29+0tOQc5MJv3MhpjocKW2oiK8V5ZsHp+SmmHCBWU+Zq9Hg7KgMz7
5mu7xagwlWNh+IDIzW9yGglGElQ4oXo8ITNVBnS93aa5ZKgg68bGGLGVATMn
FVU+MhXMZZmXBVqlwTwuTj1fkQpjZ5I3/N9Kg9u5W60mylRo024SXoqXhu87
diqYqlFB+FPTfclD0nB37xmjck0q+Jl25LLVSsHdhs/7mLWpED+clTqYIwUD
dwbHGTQqvA+u5W+MkIJguZ/jl3Wo0CL0NebHbinYlBS06waDCpZ5AZ+mlaTg
w0asRvAWKlAV1GMk2aTgPwvRNHs9Klx+Uex+p1wSBrWKVA30qZDFU3F79Ikk
zG+l63FvpQKLDXuE2Q1J4Nn18ksd4ad5US4lJyUheeFq341tVHhspK5njAjP
DvtRDajQmHKD6dtmSahas4ivIbzMwdTgviEBbBQNtWOGxP0+78qX7pWAtLVJ
w27Cq4sy2T9KJcArWa7OajsV1npiyp8+lgDBCcsWnPBV5WaeoEAJeA2MI/JG
VEh7bhl5zl4CjNgvHLpImOnTvr2OxhLA01NZ+p5wxs5PB93lJeB+C8fTKcKC
yCczdF0c0Dr/P2ljKuRPKtnk9YhDsmJtpQFhE0ldt8FScVgZ0WExJ3z10vCY
eqo4xE1bvLQinNO4tzMoSBwe8prU/+/zwpv6e4ccxOGUDfXodsKjOY66x5E4
zJ81sZAj/NzC9EWPgjj89WwqmCG+v5rJ4IMnszhMuWnHFBBeaD5sIz4gBl1b
yr55EebsvXHvS7kY6ODrVxUJ93reCrj9VAyGdS4kVBL3L+vKLOgQKgb7RHNF
bQk3e+2z3uEsBmHnbJh/EfUzdrpnydgjBmp92kdPEvbzWRTUVRWDHbOrkg1E
/auf7ErcwyUG4S/+/Igk1svVT3ftfq0oWCWttTYT6xl48PWf9ueiAD0NRkKE
PyvVFVOiRUGp0MbMhegPLqXMlX+HRGHH06CZAF0qXBzr8fKniwJj0Jolkuin
kKDcLj4RUTDuLHK+QvTfAqdI+Ik2EbA8ytjkSafCjexVNqVCEUit0S53IPr1
hLX3haVHIrByd+2ItBYVat+MCtc5i0DMbbGtIxpEPWuCDn/ZLwIezZj6MyoV
2Db3hrdqisDeyQVjPnUqbD7Q1SuxIAxRG0bOL1Sp4DOrwGXeIQxsonypJipU
YHRcoyWUCkOauNXhQ8S8sV/3jdwVIQyffK42DMpS4XStUsxhKWEoOXvljSYx
r7eHbo8trgmBlsL71+5SRD9milvkDQhBRWDfplpi3k/XTJtjeULA0XDKlYWf
CtHb9gjyIyGom9R1nOelwnE/niklZSF4WNcR3k3si19je3r28wgBk1nskWh2
KtQYZayUtAiCf+uKhdsqkT/nzGUOuQrCG/ft3ZwrFMitXEpoOyQIBqdGnj4g
9lGNz12y7rqCcP1h4HQKkV8xNgtOZUyCYBwV1EAepYBxbfFJdZoApJxxjjhH
5N8+z7l9Uqv84Jx/OS5zgMjrIL69yjX8cLqfkrnWRQE1fPxK/El+uH4jn67V
SORrfevpwoRNoMPgbdpM5G93y+LTKIdN8PdeQg9HHQWYyXJ9PhqbAA27mb6v
oIB4sd/Wp1V8oBym3Jr4kQKZL71GTVd5Qb7dUds2mTj+oHB2ozsPhPlUiFrf
o8Auq3yfrfo8kKa1/HNnIpHP5gdxnJkHEp0rxFaI/ebnNr972ve4oVg1ftPP
KxRgVXh/LPEzFzyYq86zsaZAaXei+GkyJ1w1iQ9K+I8CHmpsZXVTHFBbtpZc
ZkbsBwq+26yLOCBD88f31R0UUMW+nqq24gDJkYR/I5oUCP70g6QayQ4H/eS9
7rNS4OqBt3o1i6wgYVX2UGZdHWwV006qVbHC3fzQmMQldaiiqnhn32GFYrE0
5tO/1eEA+a0ciw4rfGj+Knm1TR2WXoumqnqwQOH1f+dTs9ShNmhmj9IkEwy+
S7vFgalDr9CqaNnqPzxVudAld6s6vHLQD+DK/of3eLmk7dZRh6iM9PQbh//h
S0FiR04rq8NJfa0EruwVvNoluEuXVx3m0g//cbJaxjVUZkXNW9WAt7KDSe/T
Ai6R4Em+7agGutOzS7JPZ/Cot3UPte3UgLtcx/SQ5Qye5ylWXmelBv+aC+n5
rDM4x6cJ06ndanB9zp13xmkaD1HSDO9WJZ6jQm3TeC2n8Pwip1oP4vnpZPHN
jhDvMXzAoQV/6aoKe9+OjKZP9+KDp7pWc06rgvlgU7FYfQ/uH+yblnJcFba2
OgzJ5HTjYW6WppdNVeGdZMRGz6lOvDne0LNXXRX8bxm+V+9qw19N/fIoGVGB
VLfSKJ22Onwyzu/ToIMKjF97IbEjJQ/jBAbXtV3KMJup/YXycACbejD8zg/I
QKYq6FX6rmCfor6++u+sAmhGbcKS1tjQML/BWgSTLMRE2RzVCd6EenmDXh/N
lCByjzWAh1sE7TXjJBUOiIDv+irvNjYJVOMzF7ZzkyB4XP63likngywosr0S
O7ghWevXAf9IefT4veTJTyrcEHrQ0ak/SR5dv98XYcfHDQrKA+VG6fLIY/L0
95c/uCAhwoXWVSiP4qN7TwR7cMGCjcv3/Al5pGWt0fkzhROyBJ9tf2q2GXHN
xxTYrbLDEHJ32M2igLZkDAv7DLCDryXt7SCnAvoWKOGaWMMOxc/+yAZsUkDJ
l7qUOu6wQyObFumJpAJiM7Y9cl+THeQ6kr1eaCmg66aiJ7oc2CBHw+BW8zEF
FG9cE5RfzQJXo5+26OcpIGBNTaPmsUD9x6qolNcKaNM035n8OBZw9HD+ufJB
AR0JfMNfeYwFzKLrlDLKFJCW1eiC/iQzbJi7/85pU0De+QlcxsLM4H7t5UOf
DQXEtZKyb0fVOi5ptd9/zYyEcj+8vNYUt46ffa3zK+o/EgpVuiTiabuOa3xS
NBSyJqFX5zIHuqbX8OZ+mydc9iSUqrFJ2Ul2DZ8zXCx5coGEXjAcxy18/uEi
Zyrf+cWTUMiuSuZwvSX833TCUNJ3EtJ7yiUTzbGEG9xJPLrcREJRd+14M9oW
8S+Yg8SRNhKSjq36yey7iHtMXTj7r4uE7CcerAYRc3BMpGLs7xgJLfIVyT4y
nsfXf3Kvp7KQ0fb10G8vBObxg/9Ybe6yk5GZ7Or8976/eBYprSSMi4ya1mf5
9of8xS083mUc4iejP8Ln1IW+zOFJEvOXYqXIiOuYt53A0Vmc5Qt3a5EWGcXL
5tiZUGbx0E7MfAf9f7+XVTkTtTqDx/hyJuMMMpJgyK0dfjKDJ8xffZK1lYxu
HJho+TIxjWtUh7PI7ySjQsYoxwDXH/ysCbvWS0sy+uUkXlH2cgrvag4yB2sy
qvncHF57ZAov+ivLX2tDRrS2zq82mb/xabV4+2pbMrqWYUN22TWJx2dVT591
JKPmlxdDfKLG8OeOt2x2XyKjA9sOlRZqjOGVqx/EmC8T53MeZ+h8H8Vfdl6f
e+tFRvt2ukUUiY7iO7ZLMm/4ktGK7VD99vRhfD1ozyZKIBndNLzfvHnPMK5h
vX7xcRAZFYfx+eqPD+EG7Sud3DfI6Fxijy47YwgXTL1bXBlCRnGDLF/lqwfx
ZqW9JxpvktGr3MDlXPdB/IH+m5drkWS0LhU85S48iAdYB/9VuEXU5z++Dwn2
A7iDwqrZgWgyMrzBXbPANoCLJpCOW8WQUcDZy6T45/14wOjTw5axZDRhoip/
brkPZ/7u+Fc3now+P7i3lJXWh3fhyclSCWQ0/6Lgpsy+PvxnhrLSX8Lf7SuP
Wmj34u++/GiMvkNGbvdvdoUG9eDaQwFzB5LIKOojT5hyQzfuuHjpD8tdMtpm
7frrtWcX/nJx+YLlPTISi7o49KiiE5+aSZz5/b/fhw/7pi6Jd+IpJjf3Bt0n
I4z/Nr38XAfulBl2kfMBGR3csuPTSnE7fjTqgFs44cAHeQfTBdvx+p0v9VYJ
fxc7wV3g9BN/JZ/QePYh0W85lkxYwQ/8fOyEQT3hA8Kru7bw/8C99ldcUkkm
I75LyiP3HdtwhrO+ty9hr8mVOfeCVjwlyHMXTvim86r3K4FWXKvjfc8aYXv6
opejSwsee9XKhJFCRnnd6/NhJc14+P53lxwIH15z/ich1ozH083PBRN+wfQx
VOp8E96zPV89hfBWyRcxUZWNOLy5/CaPMF1BU8RNvhFP23KY9R3hHQ+MuYt8
G3DHDj7ZN4THj3DX/k3/jqubX1/NItxwzkPbwuYbfmfkfkYC4T+1+ptj+L7i
p6tsRL0JX/yyfiGnvA6Pm2w0Mye8yHdiNu1KLf7BhmYmT/igZO9FX/oXfE7q
lfAQcT+egwsvqePVuLxneno64dt3ps6XPK3CnQbd/x0hzGPZeVrDvhI3PBAp
x0JYWT8O+UlV4J9Ww7gziHqmHY1/k9ZajhvVs8N2wjaLHPaZCWX4JS3YUU+s
x1L2m+ch8qW4JxMl9zuxnkZ/Cvcf4S3FB93dUuoInymdMFNfKsFlwxNuVxPe
UwH+DY0l+HRlvAtO+GQmX5xiWAl+L8+K+SXhsLa6a10TxbhJ5u/GaMJWihV2
DwqK8Kwlv979hKVn6/39sorwxauXY3YTdmHUMR1NLMLdf1ka7iBs5/1ki+T5
ItzCqypm6/+O7wk3e6RQhLuWeMqqEl5nLd9SGFGId6SPNbESznG3TUz1KsRF
A0xObhD9SX353TrsVCG+90TIxArhUt6dHBaGhbir/vt/M4S3l8uLTU8V4O2R
/Sx9hK++c0j42VmAr9S6BXUSXlo4f7mspgAfIHUttxG2TJg4eSe9AOeWujD6
lfBooM35wNgC/EBJvN0Xwi6/IrvP+hfgx4MefqsgXM1147XluQLc8FSkMRB2
/3//X/F/8Sqt5A==
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-13.621739844202494`, 
   17.39990325970782}, {-19.754202696266006`, 9.306060889876164}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.413193174161386*^9, 3.413204064150795*^9, 3.413205930303066*^9, 
   3.413206110061973*^9, 3.413267899270338*^9, 3.41327710674159*^9, 
   3.413285737998567*^9, 3.41328576814861*^9, 3.413297239527922*^9, 
   3.413347594346596*^9, {3.413353766076276*^9, 3.413353778473577*^9}, {
   3.413356006526908*^9, 3.413356041446952*^9}, 3.413381953701064*^9, 
   3.413450697723389*^9, 3.413450962786734*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd23c81d//AHCb7L3vcIedeY1LuaeSjAYlilRKFEIlo2hQkZSZSmQkkayy
It4vJfpIMqJC9iqFZK9+7++/v788no973+97zuu8Xq9zzh+UjvnuPcHBxsbW
zMnG9r+/wwOX98itVrP+bBgebShnopr1jHuh2m9YEbZ30p1LmQiT+XAr/tg7
lqo1u3r3CyZ6vjQelP7xA0t3dqQzNZ+JSoRdVG46f2Zp56p80stkIspiw5uS
5Q4Wl5T4JuU0JvIM3vcjN/kLSyAtuZ07hYkKjlbb/OrpYgmLzb+8eZeJ3jw4
ue9AaT/rHD0p7UkEE7Hp/FjljBxgiRLL362EM9GTmKe5Is6DLHH96ktmV5hI
YafnNXOOYdbdrdcGbgYx0ZfPA2Li+8dYh5XS1pgnmWg4VPx2lsAkq3fE8LOg
ORM1z1zawjY8yVJx6qLqs5hoS/fmqaLXU6ybELdmYYLP15BNNqJ8mhWGGhKM
dJgoaWyvY6vXDMs0NcDATIGJ3qZd84buOVbiY0ejP7+N0eqdtwUinausR6UT
CQE3jNHziYzATbZrLMJ9l5GuS8ao7kPYn6jGNVbTF+SjGWiMpoK2XY3C1ll3
ZfPv3/MwRpuUDu+8up8NvZBivxi3wxiRZht+PN7GgVwLsk9s5DJGcgvl3ltU
edCUcAd7r58Ruu4Ve7/VnQeVub4YpXoYoSkRnSmPJzzI28l71MnFCAnEyRc+
ofAi5LBalWJlhDzCizydCXwoxK3d65ySERKzrI84LMGPbHzvRkc1GyKm6rS1
1j8hFFAzx2VHMkQq5l/VcpjCaH87G2e1pCGK/7yHTPAXRtRD1+tI/IZI8FmP
7MK4MHII9+BqnDVATmZsD461iSBGY9b9kv8MkFRYo9uPVlHkwh0is3LGAHnf
Ht4QlCaOhjrqH0lWM1Doo7sJtyjS6HrWh+E72/SRcq7Eq61eiijxZUToy506
CDEvyBhfU0TTbj8LV1k66OTo9ynpVEVUkx44bKmvg25PpdyObVZEsXOCaT/l
dJBT5RUOPx0CCr59rOxZszbyDgmoqpsioDd8tdEF3Nqo611D2aIzCZF/VxCW
gjeiPXwJlKEzJDSx2/ZVtOtGpPyn3PdlBAl9HUo1VbfaiJaFo625X5JQ4q8v
9uGyG5GN5OU8Ay4yCtqZ7F5Uronexm5WkHYkI99XB0kbFjWQbH3Haf8ZMrJl
Xd7JvKqO4lXrz0qukNFidKlmpZc6CqP0Tz3lVEKrm2KfbndQR9bgaZgrqYQm
Zx8lhmioo5Z9vQxJQyW0k7PczqtTDd1dYm67EaCEHo20Fe/TUkM+j0h1xb+V
0FnFnj2XRlVQx7bS/pJZJSRu8WX9aJsK4i53gWcrSkjTaqPInhoVpJJlX+Gz
gYK+Smge3pWkgo5sm1JwpFHQtOLVmTYLFeS9q/NGtiMFvR8138L5TBlpnW44
pFFCQf6P93QuBdGRXKW96cwrCnJJ3m9X6UZH219qK+diFBQhuFUl0paO3gq9
kB9rpKD202mdNqp0xN1i7fy4n4Is9iV/P/uVhhi9dTcVN1BRjTr5i6kpDTG9
vrwaEqKiS64lxBYVGrqdW/ArWZyKXvbyXTgjSUOrJ1sOfVOgolQp1f3dv6no
sLxBaNJGKhL+8GHeOgN/znxfn/huKoq7lrsvkZ+KvNwv1XbZUVGiStLv+QUK
ng+ba+L3U9Gq76Ke+wgFCY+KiLcfoiJH/vhMT6CgLlKi/11PKvrambuFP5CC
npfyhfSepqJDJH+3VjcK+p5XUSZzhopOC0bNZe2loH2hzz87BeLjV3y09YwW
BakMZlFo4VT07Oh0VuqoEjqjWac3dZ2KlupIjg2fldBjkVP3nkVSkZgfn+Ha
GyX0VO7ymZnbVOTCVDtwO00J3ZpRXai/R0XhhT83mx1UQmXoo7FUMhVlUyPc
3+9QQtb5/xb3pVDRI+upgMN4HvDsLxZ8nE5F6+cGNAoklFDhq4takTlUFLUn
8XdXMxntptCL9j7Dx2vcIiRRQ0Z17DV+ws+pyKNQ9LhDPhm9ddj138FCKpJb
doxav0VGIXd6fX4UUdFesY02xy+SUcznRB/PF1Sk0/uY2O5JRvHvJB+gUiqK
7+zuarciIz2Ja213y6joRbz5CzcmGRW8Ox7eU05FpWWPgtnUyKjrs7anWSUe
vyqb0gN8ZCTe8LHwYBUVKUjZ6ahPk5D6AVa0+2sqakPSsRWfSIjGd1Z9fw0V
WQY9/yIVQ0JhqX9WDTEq+rPPPWXYh4QEPtRG8AMVTW5ZL3m/m4Q4uJPaP+H+
19Ur8kaLhJaCt/24UUtFKdG+D1uESShDprZV+w0V2a5LWsxOElFgjEpSI+4b
53TXNT8RUb1TMcvxLRWBGv3FhUIiCqqp/NKBe/3FbtvvMUTk3VzrYVFHRfk7
BRrs/Yhor5/7Ug7uDr1yrgFbImIe9kxaw90ylb9wVZeIYlWLLc3f4fHOsb5j
JE5EH4yQfCjuMLfxMva/BHTho5lUDm5R+8Ej/e0ExM09v+0d7jbRxMD2EgLq
bm8p+oz7Ss/BX113CUh1wyH3Ttzh3bHP5wMISHyXhW8jbved97KVDxBQEOlo
Z9H/nq9qeu/JJCD5zofZN3FbG8Szv5UnIIdkoQl73Nl+1iztVUW0032iQBy3
yupBv8LviiiA/fbaG3z8V4+rhG/DFFH9qtfgCdzx+xTcJ9IVkUIB9dQKHg+R
qnTep2GKCGmcSQ3HLTxOcwhwU0SbzfVvrePxPJQpgw5aKCK1UE8zb9yi2yZe
7lFVRAd4mW+b8PXoeS+ZfpBfEf18NUgn4779Q+BvwC8FpM5+uSwNX9/6yj0R
E0UKaNIgY+0Dvv7kvgdPtiYoIElYs5+oxtc/8fnw8/MK6Oglg5OceL6UmFtc
rjRRQGr8O81W8fySxQbKXQgKaHOYxMHxV/j83vl8kGBTQMtWyfHJeD5OdTzZ
XPFOHu2npDUdxfN1kuticHaOPLrQ1XdVHs9n59/3rJ/ekkc+AwJJJ/F8d41W
9Oi3k0dLI+yzfni9rPlxPdbqk0PX7X/kT+P15P/G1flBnRyKta4bPZFLRc1k
VoPEMznk3sjNo5tNRccOsK4anZdD9ZdG7W3SqKjoycqssaAcCpT+fSQolYr0
x2cx0ows2hX2ZtfDh1TECpNolvoqizoK4rnf4vWf1ph+UTtLFlH6hfY/jKEi
2jZ6gsxmWWQ5rjIShPcL/kKfyQCqLDrM/at25y0quhyaqjiyQRaFzBDvf7lB
Reop4a9+d8qgiqU5k4uhVJS5RPYuOCODPp8+9ZbnFBUlGHa4DeRKo8yQ0tI9
7lRkmA0OKnHSyEQu91vMcSoi6GmYXAySRrfsmmbmXPD5uNSn7NwhjXK/3ZF0
3ktFn04ZbEsckUI1mS8LkphUpMzPf+8ZTQq96R+fP2hIRYIuu2feC0qhRwfN
vKT0qchnVtppdlYS2W7LkDuvSUWqB7Wlzr6TRBxfGpy+EalI6UpLBq+HJFJ8
ECFtzkFFXQNvze48l0ARQb7NW9Yp6JvKsyPXEiTQ9JP2WKNlCvr4nvNN5AUJ
ZOLAd0dghoIaLgevV1lKoLXLz747DlDQk0hX08YRcfTzptaLuzUUdFlNEPOn
iKMcii2flT8F7Rx7+DzgiShS1V5O9veloLaZPW3Cd0SRxVQk9aEn/n7h2xUv
AkTRttCcwG9HKahI78BZgqUo6qRc+ELYhY/Hhp6w2CmCOB7ITXXh++X+y3mR
D04KIzZW3/32ViUkFqJix3oogAz8NY6MNSmhwWA7sZUzAkhe+offUoMSkuFM
vF5vKYCGfW82yNbg+zHhztyteX5kdDQ0wOKZEhLoJ/c27eVHn7Dfgb5hSqhE
t3SZW3gDqj+8uzZcTwmd8jx9d+cdHmToNq769y4ZkdDW//rz2dGmwke0nXFk
pPHdPIwSyY62sVrFc6LJKAw/OXgeY0cn7NZ5ToWT0fsvQ5UCMuyI3KwiKHaG
jNR+GSzFXWFDmpcatHl3kdHPwKcnSLnrrLbxbztmecnoTcLPzB/rS6wnDpVi
/3GSUScYVQaWLLGKW4Sstv/Dz0su7Dv5PZdYfvHsL95PktDTpULOTR2LLNio
/d6imYS2FGf2fchbYP3ss3xpgPd1RVJgl+/BOZbM7tyqy3IktM2EsetC6TTr
Ul/4hxkxEtplzuE75jbNco+LPePPT0Ia+esreyWnWYy3yr2PV4ioY//iJqvR
Sdb3pfiy0l4iEq7msndy/cWSULhIqnhKRCLOU6pHHMZYQn+SPxMziOiWi4t9
X8koy1sm7vTdZCKyvZV00lFilPWoMDruxW0icg2s3KfVMszKbsm5UOBPRBUr
yr1+VoMs0+iWQ5XbiYgrXMqM6d/FKuJ936SMiMgkce8Il8431rkUkkiWCRFd
Mf7nVznxhfXjizWzVZuIMt2u7xg81sHKdy/YuyBPRAe8MFuSbQvr+6RPxIQU
Ea0mqFSflG5mNW12GJgWJaLpRNWq49EfWJ8DypS1efHfjxwM/xBYz7L1kWy9
MIvvA3HhxNf3K1jNgmICS/h59eWf8vtSYS9ZT88GZUVOEND49seyxM7nrJqr
xwR6BgnI303tfuRULGvG02CjfRsBFRJ+3PyjXIRR/HpTovF9hs91vEvschPm
yccMP1RMQElpTwMjB5qxPGmHQtMCAiLkfisTz2zBRpWXO1VyCIhDP/74OFc7
NiXww6I8hYDOxh464PfhCyZId0TsyQTk1ZnaZ7b2FXtefdLf6R4BCX+BIqJ2
F9acdeOqSTwB7diTKyyW0IP1cLi3F0USEP/ZD+Se/H7snODjHf43CChFT/Eg
144BbGzQ+ZvFNQJq2zo0q98/gL1tPbZF7goBeX9qS8sRH8JkFcSE5C4R0Pr5
AtvfeUNYwK+VfpUQAgpo9Mkx3j6MWb7YcvNsEAE1ZQheGwwcwdaXGm0L8H2z
6c16OhIbxXa3/OZZ8ieg9MO897KejWLXKUcoVWcIKLfc0iD0+xgmreNt9seL
gHpij0l6bfuJNT2mP3nsSUB2fJLdf3p+YrMexpVupwiIcmGwMCRgAsM2GjeK
exCQ6AD9dmruLywvbKj43wkC0kXqsvrbfmMV6ITSihsB9Z/1L/vQ8xvTy7rh
QzhOQDU/N6pxi05h/4l+NDQ/ht8/AgeCn+ROYVq/jA4FuxKQ1W/DicdK01i9
7Pn210cJiJGdsHbeZxprfjEdK4z7u9e3VsuqaWzr7o5InyME5Nl3fbsi3x9M
x0CwsOcw7sA6g2n7P1hG9uaFA7i/ss5crsv4g+lLt9oPuRCQb5rCv/uTfzBx
79+VF3GPUTbEnTadwSK3BytScIfsNhbbGjmDKRgqeHceIiBT/+PO0h0zmPEG
k5T7uHViOW1+Kv3FiFxrj07ifq+2r6ra5y+WrLrT3QI3xcQuIrbqL7Ya2DKk
i7tDpu7mMb5ZLN1wlk8D936PTan6+2exT9pD9f/7fExENoUzcxbbuhwl/L/n
HxpcP9o2OYvVbHrY4oHb0Oh6XZrpHHb17/W1JNwaxVMZXpFzWFbp5evtuFfC
z7cZdMxhViuXDxDw8cv0PdZeV5rHBo9vcffHnbJnLL7OZx5bWd3y6CvuPW13
OiKr5rEbWx8I2OPx6XnpmfxaeAHrNb3f0Is7++aWK79dF7BXNVavg/D4hr/z
3a9QuoB9TnVvV8Lj3zduMr6dbxE7KuUw/w33BaNOntPOi9g3Iy3hDHz9TH08
LscWLGJPI1wwZ3y9f9l0l32wX8I4hner7cHzwebstNjQ0yVMQfmwmh2eLwt8
nv/mlpewrYmZN6/g+VQiymoUyljGZHuWyvNPEpCIOclcfHYZIyuVyP7A869f
MPCm2I4VjH0U8Ud5ExDn+Kuif79WMAvPD+5TpwmofVlKZ5K1ihV1qt0+5ktA
UXs7SjvjV7GKodgPZ84S0MRTR7G7xmvYbtaKgG4wfu58roPVhq9jUWKaZewX
8XrzMFa52LmOxbvx2vTh9fW4vVtqo9o/7PMshgFej7rTTU3Bzf+w0yyIl7tJ
QHlQ++lANBtsMmqw232LgLr+qCjeLWWDF672/DG3CWhJ+dd8Uy8b7Im3/qmP
94OPS67s2rrsEFI2NsqL95O0zIeEyg52yMw8w/Ua70fDKw083QRO+MlFkcnA
+9WyckN5vQUnuH6sEI4tJyB7SdXa576coGLWSLxVTUBTeS8fetRyAseXx5//
/Ifni4tGdZIbFxBnT3m4DhPQovvJG8253LD0STTk7RgBPXNt3/ywlRuyJMx7
NfH+WfaUUu66xA3yOmkLkjMEVP37yMduSx4QSQk7ZchGRKZzwaXhYzzwQqeG
J5WAn/uX56JSqXzQ7Fn4bMSZiHwP8JdNJvFDXdWC3+gRIuK8f0H9dzU/7Crt
ivlxnIhSh/MPjgzzQ1veyMZ5LyKaZ3iKvNUTAF41OqKFENGmojQhg2YBiDbX
ns5PIaL0m8K0f5xC4JnDydj6Hd9fbKRF871E4PpCsfBcPxHlc7f/844RgVup
bNQnw0SkOCuUqfZSBL7WMo+tThDRHf+sYw+WRaCvTkIhfJmIameSvz4zF4UN
FasmLdL4fstxiW9juyiw+3z6bS5PQjOxR/4tDovCNTfp4BICCZna9hrUzYtC
TUDwpXAaCZ3L/vn4gLwYcGWU837XJaEIE03Xi65icEvvL9shGxKSj4oQqpgS
g+Xaeg5v/F4WnPpv8xV2cci0+Ontb4ffyyqobZYS4mCdcanntCMJPdvqGtBt
KA484rZf1o+R0Pqo/R++S+JgmXu08eMJfL+fMb/SGSMO771v/Ug4SUJW6zby
TzLEgfOrvxA3fg+8tri9Yfs7cYh+Mx0fEERCWR9Tzt8TlADndLc7yxdIyGE2
osmXKAF5jp8C/UNJiC9pZtBKRwJE7DectwojIYt3Ms857SUgLOx+1blbJPSK
N8A69qEE3Nh89r/M2ySUk9ZvGJwvAe0+Xdfr8fPKCy6Bx26YBPw+4eE5kYDf
S4+tuWwbkoB3enFh2Q9J6NtoD5GqIQmDMqkOqakkVHjg8tscM0mI7Pngcj2N
hG6I9Vnp7ZWE/KueTNXH+L13efKKXbAktGQ0Ph3MIqGPQ0/8x6IlIWqLdujt
bBLK3kZvuZouCYoOXHEvc0low5doi7oGSUA5oae08kjIs2DiiXe3JCweEv5+
/zkJ6f9Ym5Obwt/fW/OfaSEJnbVfnAmXlgJagfj3c0UkVHM6YwSpS0GU1BiW
XExCMbtC7TnNpEBitlG15CUJXbo4rv/ghBSEPthplV1CQvmihya8g6Wg24vh
c6OUhKqD3z+3uC0FIR/b3ezLSMh7cvqhcoYUyM/dWBYpx9e3qaxHsFQKXt4u
Xa3AfW+vbMLSeylwdGw33lNBQgt22kO/eqRgw39HQ9pwj41p/xmdloKElxOJ
W1+R0DEtj4ExLmk4NyJim4a78Dfz65SsNDR/Crw4jnvGhrq8rikNRzW/DxMq
8fy4+NJLaos0nM/a4MTC/fTEHTv9/dIwF/QlZyfu5QOeLQdOSYOthl7adtzp
hcJCN0KloUJFRkAdt1bwXs2qOGng80uqXMLf76aksG/xiTT83dF+sQT3lJRz
9uZKaSAPchGccMt5idrcapYGU+FA75/4+N0vb3MfGJQGhfEo4xO4hR9x401c
Gn5GlO9pxOffme6b+FRABtDLqCtyuItj0//IkGVge0zug714/F5tf30wjiED
LftaT53H4xvC8/OPhJUM3Pj3BbuKxz9MeV9fmosMTAvmewbi62OQpbTD4KwM
XFV1Yjq8wOuh/tLuzzdkIGeMc4WAr2dxRZx86EMZ+Hjl56VmfP3l1C61aBfJ
APOaZ6JHAQnxDx27+6tOBqZUTV/sxfOnKdW3/9qkDAibfDuYhedXuXlR0VFO
WYgWym/9/pSEmBUytB2yskAYnDjDi+fnk3cSkYytspAWmmWykEFCPNuOvTF1
lAWFWG3JZjy/DW5Z6u/2loX3jM+mOng9ePsn29xNkgXSjX0aVfdJaN9zxqbG
PFnQ3nfWRzMJr0/p2jn+Wlmw3bSgXxuL10Oj/P6iCVnwTM5+XHDtf+sh9+rO
Fjk4PmTxPe0qCUEJeUvpfjlYML0cFHyJhNJSXHnGTslBa6szaySQhCyfdVd5
x8uB8r9O3oen8N8zfv2Xc1gOXgsct/iA95Nq9R0REYtysOrqXjvoSkLvz74y
lRGSB7nGfz31B0nIRPRbgLOhPKTJ2NYdsSQhjzfzJhduykON7LF/77aR0Fun
uG7XR/Jgr2LvLM4iofkg3yCHl/KwXqc0ccgA72cG78Q8vsuD/Cf23FIyCT0f
MniiqqcAe6b11A7MEJG3T/LHbb0KIH2q447oLyIKMnNx4p1VAOPq0/+ej+Cf
i/QFf9ugCO8vvguL+0pED6e7P+UaKMJNtpxs7moianmcfmzttiKcmLpUffkK
EUnW3asM30KAjoYtnp5BRNTvFyZleoAAXH67kZEfES3bexzn8CWA/cjoQgC+
H/k0JajUphAg229b7K1N+H2m5ZMP+xIBes1KJWamCSj2ouV6SgkRGKoUF4VR
/HysY0E62EyE8DvmBaRuAjq0GG6jNk4EYpP6ZEUdAd2XK5bgUSQBLa35qXoS
fl4q4zz98hoJnHwTvWd0CejJXi6ZeU0ytKWaR7vtVETO0kIL8vxK8OTiicKq
TYoo3eHiJUtZJWjepN/1U1MR8Qsd+XJFWQnau+e5WgUVUYjFcV7xbUrg56C4
VtmogDLfvLlXFqIETqL3ry2ZKaCDPCvuG2aU4H6Q+kA3nzwqpPeotAxTQPSP
5a1Ls3LotmzUVZFZCuioPU5b6pNDzZQc8kFOKuyhKPAGl8mhWv8weQEKFVZf
zf5OcZVDEw2Dh38cocJRl52FF4tkUYDLkws3v1OhR8q4qk5HBv2zCowm9tPg
isZIXkWNBPr1sZAiw6YChrzdXk2ZEkiXqDF7WlQF+ExnTGtvSKDyygTpD2QV
+PsvJHD3bgmUiOmJ3d+iAq5SmS7L3eIo/Myq+sVwFXCKWVIp/iOGZhIHxxz5
VOHta96kQF5R5E5Z2z4rpQYb+g9Ot73nRUl2R4uSNmlAup5Iq7F2L6tW0oCw
/Zc2kMt05jOru1nW/vvdD69pw6dph5JEm28sg8BT0kxeHfBLEr5McP/MipPZ
eMRcVgdESI4j+zTfsXKvfD5uZKID8nIqLy0N3mD8N5TOhYXqgHnIyie0bxwD
HwPqdnZd+BL68sWXsX9Y+813X7WWdaGF7fjkJ8QGXoY2V/3Y9SBio7vD09ts
sDJpP5jHpwdHN96P01Jhh6tKlgkiMnrQOHdhNOEgB2yvrpW6qa8H87WpL92q
uMBc791bIy89SJ75JBPhtwES7vzhInTowYDHeLBC1QZ4uTd8T3C3Htxx0vS7
x80PWhuTQj8O6MGX1vkq82R++NQiYO0yqQdSMUaHvN4IwOf420JyvPrAS90a
90hIGPT2+SbNGurDybt1FcUWYtB0qdjnS4w+3o/75ZVPi0HkltxH1+/qQ0hD
nu6NBDF48yRAVfWhPmjf6anj6xeDMyDIaZ2tDxHKUzfFg8ShVxz9WK/SB3Ny
wLxYlgT08q3vJo7og1hAd43mfxKg7Go8u+GnPhyVLQ/TmZSAbiWvvvFJfUhp
HHKaMZIE4S095lcWcT97+NepURLqjhZflBBgwB02Q9VHP6Ug76ioffVGBghz
aXkbCkuDSW1hTocuA4yrIneV6kpD1sNdqN+AAd6xIS7uQdKQUxm//GEzA7JM
tZfjuGRA0SJ1cmUnA77ZRfg4q8gAmf9vfpYtA74qtZzjt5aBU0avDVn2DAi8
97lYNkYGvifmnbJyZsCKESNxRkYWDDUzqotOMmDQWkZ5hCkLm5hROqNeDOCJ
ub7vtTPuzbeWBH0ZIDejJCSbJguZ4lQHrfMMeLRLZ/gqTQ6I+2de1VxhgMdL
swRedbxv5qre4b/LgM0DdlfELOVho05Lo+o9Bii80aRxuMvDK2puNPMBA6xG
95rfy5CHqYKmIL1UBkj3fB+4I6MAq5fOjV7JYoBkxKdLTQwFOMaXwNLLZsCQ
bdKWaTsFuNli3NbxlAFaofS5H7cUIJTEuPL3GQPue5+0zlpXAPOPTzdEFjHA
ctdOazEFRTjzds24sZgBOucapo4bKcK7oe+H1l8wQG/QavqVryI8rW933VTK
APTZUav6liLs27ymZ1HGgIcb+L8+eaoIV8q+ft1SzoCdbgwjlT5FqNYXuSb8
igHyM5Wt2LIi0C1PXejD3bqJI3OzNAF2/z6nklnJgHuReg/TdfG+PL0U7lDF
gE2GJUXjOwkw/mA4chU3W5J2p9RJAnCOmWonvmYAV2X0P5VwAvyqVPYjVDPg
uOVfMukRAZKlJszv4+7f2ai1UkGAuh2T2Vw1DDjLX0F43U6ATuXSmGO4VZsy
Bl0nCRCNhheLcX8tzTv7i48IFGHUM4O7ItH4rTOVCHPK+fp0jAFHC3/8V7iZ
CP1ndZYscSfdfRQy7kgE8UNTyodx/57yb+U+SwR3Np1yN9yce97X8EYTwe7Y
waxDuOOXdU0nnxDh8IO/49txG0Lk5lcYEeQ4ci6TcffX9r8++Y0IUae3HP+F
//5u81tFqzP4PmP7/E4ubr5QadHzgiS4NT2/6ojb6eiu9lY6CYYT7XIX8Ply
+RrN4PstTBYJx0TirgyXPWF8gASR4o9z+XHfTPejbT1DAg3h7NlQPH6cr1dU
daJIUPas1WsQjy/rTrEXx2MS5DRxCBjjLnN5N1JRRYKuo8zmS/j6iDc9id33
mQQpN+4Xl+HrV5+5eqLtFwlMXrkX91UwYH/6b9MaYTLs/auwyIWv/xtLn8/t
8mSYVd9qzI7nh/nFxwHdymR4QnSImCxhgFvUyEcwI8Mo316LFDy/roDMpUfW
ZEjZklx0CM+/u/8stXwcyJDAFUcUxvPTYL/2jaHTZJCI+L6yLZ8BKe9dfMIu
kCFn7u7Y0zw8H7kJ3aIRZBgP3KK1nIvH83A3czWNDN2cOm9P4fVgqMKhevA5
GRzc9glF4PWyvZYv4UkFGdiG1Z/FZzIgtzvvm2ArGbJ3/O3wf8QAs/nMFyrf
yXD4yYljNin4fN5rcer9IMNZz5hNoskM6FV34pViV4KBvj1f3PD6vaATGSWp
owT/AsXSmLfw/rD2WCjPVAnirZ1jwyLx8be959LdoQTEP3s/vbrOgGUNmq3A
YSVgDWwx+XsZn6/qx1NLUUrwPaBoIu4cA+z6u5MFkpRA2iHMb5cfA0KDo7YL
ZSiB5RM/2wVvBnBvMxbqK1MC1W0nNKXdGVA1l5TwekAJLh34l3fFEV9v+dM1
1r+U4KBsxJHCfXg9xe45835eCbybtt1s2sOA2bj1oHgBCpT3rtm27WBAD1ur
syuDAl9P/DUWNGJA4vMRMW8zCvSmkGiFegzYMLbq7m5JAf1bRwqQFgMWviuv
qh2igBHhcYU2HY/ftInp7zAKJKbxHjITZ8DF7bvtzkdTgGREmHcQwvOz/gH9
910KXCv5c+IwH15f7F/kn+dQgEty2yhzXR9q12tfe3ykwJnzQXa0H/oQ66rt
1SVBhX0TX+qa8f2k8GecMFORCh8MuXtmS/Vh9WTUwUgafu7QyFvkL9IHNtlL
64sMKhi1jHvzZunDdKwmg7qfCpxnnp3feksfvNKYb3ldqFCxGSZ+XNMHynbS
xu9uVJivca69ekkfFL3E8538qTAu9b4q7Iw+pC/k0DLiqVBc4b/zg4M+GKq3
2golU+FF3THFhT36QFwsifPMoILw96ViCSt9cIqN8lsspIL09nI3kqk+PCz8
c/lYExUEWY/9woj6MF9kRw3koIEPs20pfFAPGCHh3ot8NIgxSxt/06UHenlS
dl4iNDDj543+26YH99n2iCkr0uDLWR899bd68Ci57fw0gwbC+/a3T2bqAcdl
UsY/ExrY54SZVifrQZa5QAnbFhqYHCP2h8brQUH07YqvO2lA5Uimd17VgwBU
5jhwnAYW/BsfDh/RA//Cjq4rp2iwYbdJn4WjHlTKed0T96XBCc/nfx7u1gOh
hNAxwQs0OEx98JG4WQ9yTa6KHY6hAaWlKOSmnB6kp5zeGlKOf//sFl6uFl2o
3dh7Z6aKBnvfWLw2a9CF8ZRnF1yABuHFmIBvjS4sR/c7iP1Hg6AtKTVFz3Vh
0/kHejPfaOCcTj5YGakLd+MORQn30mDSyqj+8WVdsKQtfyIN0oBbeevB8ABd
yFzk3aX0kwZt2x4b0910IVhATSNjiQYhL3Z2zJnpQt4jBWH3NRpIqVM84w10
oUDhrQ6ZnQ6jZZOldE1dqHcUPeLPR4eULr/XOnK6kO3lE5EqTYcyZdeYrhkd
+KTr672qQ4ezfM+6bmfpwGOrFBt5Bh28Tx0vfpSsAzfs7GS0jOgQtLrV92ms
DogXCWQYbabDWmblZHqIDgSl8Lxqt6SDTOMdqqG9DhAkfIwybehQ2yzuxGet
A9YVbavuu+mQ0FIo1c7SASfT61Ht++jQdJbmvVdDB6Js6HPMw3TAKOLvl9l1
II6jcbLqKB26slgvlKe0IYjDMJpxnA5DJ5PI1l3a8JnXc2DDSTpYO0RcO1mE
f36UjizO0PG+7N3He0gbMjS0zETD8PnvVq+fLdKCqKxDeRrX6GD+V+lu1AMt
mJ55v7jpBh0s48i2EmFasHI6/OyWKDp8xDgPr+/Vgmv5ekntcXSo5ojMRrMb
Ydih8VVaAh0emYVknuvZCCIJ2SbH7tJBdomo/7BuI3QYqiY03qdD4/N9Y+8T
N8KDIIeD6ml0+MUe6ZPF2Ajb6ibJeel0yK5oGbyquBGkt26ro2TSQTKr8+5+
ro3QsC3/+3wWHTweq9zub9cEd25BOcYzOjzOv5IQdVYTNMenL57Oo4NhtlML
yUkTbM1nmY+e0+GC1cO551s0wdVGm3e0AH+eM/tjoagmoOkHT0Rf0mHWb+my
S4EGLITeTOcpoYOPuGNT+V0NME07GDCLe2tJZo5AqAbM770wU15GBz/m+6F0
Gw1IPFNecbucDnmHuvMG9TRg+Vn+A+cKOpw7sauTKK8BnzZET/S9osOVqBVq
xLg6HO60C0mqxOMR8b3w5Sd1qA6+5bG9Co9/8knf7jJ1SIycj45+TYdXxr0H
CdfVQS7+9yitmg45+978MvJWh50KQ12luO/QtoTv3qcOlSZqLbU1dDghtHTT
T0kdPusR/2zC6EAz8nAN4VOHwK6DE0W4199+5b8+pQZPijKaCUAH59msV1Gd
akB7WPosHHdwO0/G7Wo1OJ6yJ2YQd8tVxdnbWWpw5CY12qSWDgZXR0du3VKD
K1hv0S3cmRw7ciPOqkFAl4pQJ+5EA/YzVw+qgYTnoyK5N3QweVDhG4zUgJHT
9cwB99Y90198VdTgsdZpgdu4j/vx97gJq4Fkfu/Aa9zPj+0oODCnCtJphZtH
cXvpvrti06MKGhwHtDa8pcPM6KXrm9+qwqDAjrd03IRxm0mtZ6rA3z8osAl3
tF3fL1KcKjAOJRnZ4K5cNveoClaFcQUNtv24DYwvfnU4pgpfpcTOHsT9juve
yRlrVai/XvTgAG7OtRjWHX1VuFZxKnwvbsEZ1nV1RVVQ/5poiv8iPAg95trA
pQpOFVebDf83nqTEFbffKhCbGWiphNtEzf4iZ6cKFFNKS3lwk/L+8T6uUYEH
7b6UMXw+TuUd77c9VYFOjc/Jb3CnZM8Oj8SowH1rbo0HuGfUncJvBqlAap1i
n+f/Pp8YbNRyVQH3M+pvjXDzUq0HO6xUIM6YMfQPj/fxzWrTl/RUwLzPwOYt
bregBXl1BRXo6yDzhuEuvbbh5hdOFWjn7qFswr1TNe5oxC9lEPqhmpuJr+/u
2zLDk9XK8EBgr8Ye3Cv877uzs5VBeCh40wKeL24jtp9dY5Qh0z/QxAS3Lb3G
ZeCoMoTlRJp14PnGGtdiZlspw32qCJs3bpCLfeajpwwlHqd/ROP5CR0pg/xc
yoC2WSSm4vl981/VU/+ndDhpu/GtDG6384n6TrF0cCkn8t/B68Ge1ynIPBiP
w/vTgr54vYT9M6xSwfti4VKdFBdeX6rnBTg3TtHApuSE8VG8/j4RmIxNX2nA
02/UWFFKB60MIyO7WhocGJw4cQSv1zn3FdPbCTS4mxf7OLyYDsmrVxdtjWlw
sIbqXldEhy91W8/EK9HgspXlBDvuUqZMYxc/DdCRuhPn8P7AG9yVduU7Feo/
79fXxftJg7DcaVo4fg4431ZGxvvPjONw+PgnCozNNMwbPqbD8siankwlBZ7d
T823xvvVxFFBt91ZFLC5OJrhifez3/Sz1Z1BFPhvmCfmdgodXtKfu+ylUCBE
GotzT8T7w3yHuVCgEqDb/yjJeD/2NnVc26FKhuTDy4d9rtKhSPtITKUEGTib
StbRFbyfeem/OLNOgkOM5asDoXS87qGn+DkJNr1wZYnicdS6Rqfs4yeB11P7
WDVfvH/MmluxGgmQn+Fk4OtEh4JujtRvLgoQXeKzbe0AHQ4XCGvU4/fCsjA3
5ShHvJ/xfNf6LKAAWt07Q9Pt6dAnTNm2v1Ie/s3Z/cDw/UnYQEt3WlYe6rlA
5+NWOuhpX+d/3iML3DZ6CUbqeP+MCB0zuiwNU85npZ+q4v2pzz04xUkaUhQ1
Pkqp0EG7YKVf2VAaBPhXvk1T6XCo/kFy/m8p/FzoeieVQIdLS20h1w9LAcP6
v7VWUTqcH2k9d26HJPiyP1d6Ok8DhlZxRouhOBy1HTaXn6PBzbDgFiM5cRjz
LHoR/ZcG508LTNeuiMHuK6xTvtM02KrHUmLVisHx1gGCJn4+KDtzWqJ3lxgE
ynx1vPqdBlzNkZSXp0Uh8pz0hfFuGhiXFKOde0Vhx39szbu7aHCVazKNz0gU
Bgj/OOS+0MBo3z2VCTZRsH144OTjFhqEfnD4XqApAivgbXDnLQ0u2JWa3I8R
gqGNPWfG8Lzcy+2/R89FCKzKpF+z8PPOKT63cnENIXgUC76/X9PAjtPpQHaD
IKh6CgtsLqMB3+k3iTJcgrBD/lzJsxwajGMBvyWj+EE/lvkuL5oGpONXqkb/
44VT33bWVkbRIJjHNy4nhRdO8DMY7yNpAIQ3z1758oKmR45P7zUavFMM+PFe
mhfv52v1CyF4/LDdSkkneWBZiz+qy5sGP2U/9FTJc0OxY6b0J08aDDdIKx+c
4YKioetdtSdp8Pwdt/bWRi742Oq3mOFGg9unk/znL3BB8yYWaechGmgJD5n2
93HCjqDucnMbGhS6TtKDyjnASOnXmLwVDUpcyAmFCRzgG8YuPmVBgyyPFG4t
Pw5wWrm3PW4rDWaIGzLW1Tjgm6bfu9dMGqynkFeG09mBX9FMJl8FH6+V0lX/
h2zwIVyW5Uqngbn2WbM/F9lAL7BKTYJKg5fKFKHCQ2xg5VFg4kekAZFYb/iL
yAbaco9nhaXw9a59idXu/Id95NjJ6GGnwbV6ruMZV9ewB1MhDxL/UeG+3clH
y7vWsLmfDYPWa1R49Vaxt0J+DTtx/Lxc8SIVNMNlTV1LV7Fwz+S+41NUePjJ
stJ6agV7PdWr7dpDhcEg0cPv/JexoQMwM/+NCnNL3kkCO5YxPa+5kKgvVMiL
cNieK7eM+ev6DDxro4Jyl9eJMWwJw7w3vW15T4XYqx1D9qJLWIShxKfCEirw
HI4YIcMCtuv72VNKL6hwJYEq4nNvAcuw7SyPxe8PzzfWHOf0XcCCqtROn3xG
hUcR+Vc4SAuYmUk+dTWNCqPTJ9sMwuaxakvXjSVRVNjLmJu4bj+HKfM6Srgd
poKb2vxfmtJf7HXTv6sPnKng+8juuyDbX6xzXOJF0wEqNJ1yNJHtm8G4ghMc
NfdRYWG1pTkxdQarsjCsbdlBhfzulFRuxRksfkvXmQIdKpjHZMjVEf5glPKV
5lo2KrjM2BQMHZjE7lwTulC0RoHnccMMQYVJLEsvZjVlmQIGCTy12t9/Y5vv
Gkf7zlLAmJWz6uL6G9txOHZueQy/b5L4N4ud+oURDaKX85opAC7Fk+nnfmIc
HBfHLydTQHY2NSfr+Cjm+eJhzlAS/r47T8UT5EexnAUD0e0JFCjio3xRaB3B
NDGf72z4/XJTrdKeqU0jmBab/5NDoRTYmBwuu1VkGPuFpT7MPkKBSdLEg4qH
Axj3NomsOLwv+2soOqtd+Ip5D8kLFhApMGrA/nS29gu270jmgffyFBg8MPqF
xvcFEzxyKntenALRauLJyTEdmGbrEwsTTgqIkiWOa0S1YVYSnQpHhpRAoZbm
3mv7HlsskDJRz1QC4y0qZ7/wZrBaV4bIux4pgds+2gZxVg7r4807h3yS8X0g
mWVRdqOQFXDRqjMvXgnctbWsRqnlLBnb2V/i4UrQVxAzakF/y9K5IHU8/rgS
yJ+wUT4c08p6BAeNnalKoKh77WXHkwFWZWasjjVJCf7KLbNYZoOshq0c8UYK
SuCQYq7y58sgq5tRECckoQSFof5GBiLDrBM/k6OyOZQgGI7U+t4eZQXXUK9F
D5Dh85+bI+qNE6zj84rXVR+RQXw+v6v96V9W468zzjcfkKH+DWn9mPgsi0tv
197xRDLIGvHEfgqdZS18e5aWfosMu0W6+cwd51iu3ibPloPI8J5DuaFAcoH1
89iRuX37yFDC81udWrnMet3Mz5/EQ4YzZ6zXsYPsaCa98eErdjKoxOSXBaay
o8PlxafKlkjw2e5uZfYAO7rpfeSPzigJYq30Db28ONCx+aa98zUksL7YeyPu
Gic6b3XiLPiS4ED5naOnPnKj2yMF27c2EyF2lmQf/YofXWPWlxnWEWH7660G
H/gFEPFTjpRKJRHq8wmfQg8JIDTqnLjyhAijHf31m9kFUWfXotO5UCLw7SAm
0W2F0KMJxvYUDSIcKR5Nr2QXRY0SK3b11whA/OTc5tInjvIdRPRU1RWhUrpp
tdJUDrnelMlN8JeDFy/uZw5foqJg5V/ZTUgaLn+oaPzUpIFk9WTT7BjS8PTz
ne1nfmmgl06yqW0q0lD1yeaDuKAmKgO/tPfC0hCw+Fdjv40m0my56HmtRwok
TlHyW//TRG/21uobB0qBh4/Wx5D6jajy3QUj/1xJuPtyylC3WhvZOf9HYWeT
gCJNYO1q1EXU2o8zT2bE4e4pH2Heb7roPJUasn1EHBZMXO5Xjumiu9jnu/6N
4iDuZHRBmFsPmcW29cQlioPq9oEqd5YeEizbrQAq4lAZb+L79oUeOufBP51u
JQa/cm5IX0nQR7Tu/A03TcVAZmlGf0uGPuKd8A/z3CgGCy0H5hYL9NGZ3uQj
cmJiEGyRw7GzUR+17Ixzp38VBZ++HWmhbAwU995s74SbKCjIxlUveTJQu0Zs
Y9ofYQhwKL1fYGSA2jer2PO0CsMpHZcRynYDVF0VtulgkTDku+/Nj9xrgMid
RglvfYRh4edWE9XTBoiL94xB9k8h0Bgaly/JMEAh8ODr1V5BiNVN/zbCa4gK
9tw/n/JaEMx1Yw+4SRqiTovfAhnJgiBYxxnVRjZEDULxkR4OgtB1suluKNMQ
/bLyvDjSJAA73kfaCngaIu2pY1zhpfwwdOPgi98Nhsivw3pAPZ4f3lzTSHNq
N0Q5q1nbK3344cj2pLjSXkNUJPSZL0aFHyyyfMkGc/j7WkOYgvc3wLrYLeIB
JSO0tm55S9+fD+4WeHyVCTBCbqob6rbs4YPsgT1HDl4xQg7z5UQDdT5Akndd
I6KMkERjVVZjHy8s8YpdzHlkhIrGc8efW/GCca7C5dV3RqjCo/2+liwP2Gu5
WnwVNUYnCd/kpWa5wafAO3WznDHyCJnaPviJG17y8dbFKhkjK3ZJNZ0IblBm
89rMpmeMitmtNe7NckHnj9cyHHuN0eIeT4WLjZxA9I9NC79jjPoyhCqwLE7I
urbVv+auMdrRJHPkxyVOaMgjk0dTjFHtt2unJ/Q4YTqquW7lmTFKvJLBmfOA
A7bzGmJm9cZohu9885QrO3hvfzots2SMLoWsxVwwYYeXr4yn5f4Zo0xFT84f
4uzgFXlikZebiViW2qV+b9ngXrDU3FNRJvL25tylRmUDmkuh17wyE90KqduR
NvcPk7z86oKjJhM9eLiCXmT9w5Tn9DZl6TLRKa36e+oc/7BA3l8FbJuYSKfv
fYxr5Rr2Rue8Vd0eJpL1Etj13WMNq2jP7r9qz0TZZCEfotQa9pds3K9+kIke
Xa0JmPZZxcxD6Qtmx5iIp+U/sVbSCuZ4aPWJzzkmEh7Z4nD+wzJ2xSw1/UYg
E10SsrfpDVjGfmTT629eZKLmBvL6WtMSZl/FE2gXzkT2I44VZwMWMcNPpthI
HBPlECXmV2QXscMzWrvT7jLR0jfeWbOqBax2UU4dPWCiojCbpT/r81iPnm6h
UToTbZ7WGXdNn8fQYfOddx4zUe+pq+63tsxjWv0EYlM2E7W4Ck7xh89hns/U
bdaeM1GyzJmJo9Q5LJHvUcp0IR6/0AfOfm9nsfqjB0Q+vGAiNpfjUVUcs5ip
/wlLgwom0hLhsVjI+Iu59R3gfVfJRKbYWd9f6C92RqTjq2k1E53c2SPJeWkG
+9kw97S3Fv++xtR9Gn5OULDJTOevY6L+6JXkf6/+YLGjYxmEeiaaYM8zHpyd
xoy2Py5f/I+JjOeLxn7ETWMsjTv/wQcmMtoXbJqnNY3ZYqu9vh+ZaFi8XKSs
eRJL1M8TD2/B41daYJbAM4mJHG3TGWtlIun4Cr3hzb8xDqmde/XamehH/KpY
rv8vbLKkJdDtMxNFCsdyDz6bwBYiPTJDO/Dx6AUxY/p/YlHd7u2hnfh8nZ/3
FEn9xKZF/QVPfGEiTmtZpR3WPzCdmvA9+l+Z6MXOR6Z7L41jf6u/PRrHPbRN
zq2teAxL2rZh7do3JopJONzRMDyK6f2a9ebrYqJ9S6yPejKj2K+PzX/O4v5k
dTtawmoEk7suG1OH20hC2tHzwjD2lPXYcg33IdW8c0Z5Q5hffQyF0M1EqqJk
zYvdg1jqtd1KNNznnHd+NBAYxORup1mJ464cFHzqYTKALaTGp4/hz8+NmQuK
nerHfitFaGThlmXVPHHT6sMwbc3pHbgvm6U+vXfzO/Ys4spsGz5eKzdSZ9VQ
N/bxTpvZdtyzqnZTrZu6sChL6HiEz++4in15V+JX7PMuI+jD4xGienSxc6IT
i3zjz82H22f9bVjDlg4syZI7XwaP3wmVUc38pHZs65+6GmE8vjJm29sjf7Zi
Opp9W3/j6/HHIOiA8+YWLLSkecvLNnz8tYesbYgfsecXXeqO4utXdPOwbSv2
H3Y7Pqt97hMTPXxis//V6huseM66prOJiV47hdw308GwQnGPfAqeH8e4Mllr
xyqwiaESWwc8f9RFP1o3BD3BEnWg1/8dE3meqixJl43BHNsK+o68ZaKASr5P
la0RLHMV3Vo9PD+DP1D9CqGI9aIwf3/sayb61j7Tf2WuiJV25lx/KO6X114b
7VMvZvUHVJ/wwr0oQry3nFDM+u9x7xEL3NNqGxXtPV6wRmYcxVermEg/XsxY
T7iEFd/K9HPH7ZR47GLyoXJWeY2DqBFeLzGnxB9GxpWz6PwtE1TcjjuepwXW
l7OGjrfUiuIOe33R8YBOBaskxd3l5ysmqve4f4XG9Yp1J3VibypumXLT4rG8
Sta1Ci8jDtwU76sKw/2VLJ6oo1WTeH3uX1X2HJCqYjl3fGd248Z++pT0Xq5i
8RmcVS7B7fRxfWVo32vW1gdcNSdwB/DYRo5FvmYdrmRJ78WdfL1qcaL6NStV
kOuUGe7+SzXXF1SqWf7pquvSuCHcPHP9UDVLQPQm4sTdMVabyRNfzWoSPBc6
Vc5ETyY3Rog0VLNq8kdLunGz/b//Z/4/N6q8HQ==
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10.881541790567027`, 
   9.886401365980944}, {-20.747630547732477`, 25.85602005164093}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{
  3.413193174161386*^9, 3.413204064150795*^9, 3.413205930303066*^9, 
   3.413206110061973*^9, 3.413267899270338*^9, 3.41327710674159*^9, 
   3.413285737998567*^9, 3.41328576814861*^9, 3.413297239527922*^9, 
   3.413347594346596*^9, {3.413353766076276*^9, 3.413353778473577*^9}, {
   3.413356006526908*^9, 3.413356041446952*^9}, 3.413381953701064*^9, 
   3.413450697723389*^9, 3.413450963396314*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["evolution", "Subsubsection",
 CellChangeTimes->{{3.412924368277187*^9, 3.412924368836622*^9}, {
  3.4131374270664*^9, 3.413137429825862*^9}, {3.41335624287826*^9, 
  3.413356244197374*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"evo", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.413381985725292*^9, 3.41338201726119*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.0375963445312664`"}],
  SequenceForm["Fit at t = ", 8, ", erf = ", 1.0375963445312664`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413382031380418*^9, 3.413450992082991*^9, 
  3.413451343687276*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.413382031380418*^9, 3.413450992082991*^9, 
  3.413451360768076*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413382031380418*^9, 3.413450992082991*^9, 
  3.413451382025002*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413382031380418*^9, 3.413450992082991*^9, 
  3.413451406426922*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "26", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.0347129314141057`"}],
  SequenceForm["Fit at t = ", 26, ", erf = ", 1.0347129314141057`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413382031380418*^9, 3.413450992082991*^9, 
  3.41345141477926*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.413382031380418*^9, 3.413450992082991*^9, 
  3.413451431579034*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"evo", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "31", ",", "43"}], "}"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "69", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.202083189809855`"}],
  SequenceForm["Fit at t = ", 69, ", erf = ", 1.202083189809855],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451479162593*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.413451484574908*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451508165595*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "50", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.6675557841381305`"}],
  SequenceForm["Fit at t = ", 50, ", erf = ", 1.6675557841381305`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451519557976*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.413451526117848*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451552162749*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451574555464*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.9258588888533268`"}],
  SequenceForm["Fit at t = ", 2, ", erf = ", 1.9258588888533268`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451579090291*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.2816475417167794`"}],
  SequenceForm["Fit at t = ", 3, ", erf = ", 1.2816475417167794`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451580112439*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.4762510349370928`"}],
  SequenceForm["Fit at t = ", 6, ", erf = ", 1.4762510349370928`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451581224747*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "18", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.0177761651988249`"}],
  SequenceForm["Fit at t = ", 18, ", erf = ", 1.0177761651988249`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451584857836*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.413451601013197*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451623828437*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "62", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.0548486751531527`"}],
  SequenceForm["Fit at t = ", 62, ", erf = ", 1.0548486751531527`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451640169479*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.413451645112193*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451671015092*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451697550812*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451720349758*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.413451742590368*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.9789081353565052`"}],
  SequenceForm["Fit at t = ", 1, ", erf = ", 1.9789081353565052`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451743517763*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.3881503758526037`"}],
  SequenceForm["Fit at t = ", 2, ", erf = ", 1.3881503758526037`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451744467117*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.1298697282455805`"}],
  SequenceForm["Fit at t = ", 5, ", erf = ", 1.1298697282455805`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451745539809*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "12", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.3035068603883815`"}],
  SequenceForm["Fit at t = ", 12, ", erf = ", 1.3035068603883815`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451748106129*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fit at t = \"\>", "\[InvisibleSpace]", "83", 
   "\[InvisibleSpace]", "\<\", erf = \"\>", "\[InvisibleSpace]", 
   "1.1270424820111202`"}],
  SequenceForm["Fit at t = ", 83, ", erf = ", 1.1270424820111202`],
  Editable->False]], "Print",
 CellChangeTimes->{3.413451761497958*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.413451765630706*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", "3"}], ";", 
  RowBox[{"ss", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"erf", "[", 
    RowBox[{"nn", ",", "ss", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     SubscriptBox["tf", 
      RowBox[{"nn", ",", 
       RowBox[{"ss", "-", "1"}]}]], ",", 
     SubscriptBox["tf", 
      RowBox[{"nn", ",", "ss"}]]}], "}"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.413286309503841*^9, 3.413286382314454*^9}, {
  3.413287242174199*^9, 3.41328724233809*^9}, {3.41335477100328*^9, 
  3.413354845235806*^9}, {3.413354880894302*^9, 3.413354906891335*^9}, {
  3.413356297334072*^9, 3.413356339066674*^9}, {3.413454548129289*^9, 
  3.41345454998471*^9}, {3.413454592540903*^9, 3.413454649796186*^9}, {
  3.41346082919202*^9, 3.413460829353553*^9}, {3.413463989997586*^9, 
  3.413464011335887*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{4.16666696014204*^-6, 0.00003981790541729424}, {
     0.5009434721975519, 0.0023205589059216436`}, {1.0018827777281436`, 
     0.004280562961866963}, {1.5028220832587351`, 0.005643065378535539}, {
     2.003761388789327, 0.006530466066578811}, {2.5047006943199186`, 
     0.007238569196488243}, {3.0056399998505103`, 0.0078117856219250825`}, {
     3.506579305381102, 0.008346529625669064}, {4.007518610911694, 
     0.00883365021309146}, {4.5505942212004795`, 0.009343989063381741}, {
     5.093669831489265, 0.009815375392463466}, {6.179821052066837, 
     0.01072272368674021}, {8.35212349322198, 0.012476473102651653`}, {
     12.40881876957651, 0.015478622685805021`}, {16.38593778798239, 
     0.018231462490803096`}, {20.70014724445382, 0.020955876266270934`}, {
     24.726447094969497`, 0.023247870558407158`}, {29.089837383550726`, 
     0.025508224894110754`}, {33.3736514141833, 0.02755930097464443}, {
     37.369555838860116`, 0.029340878427319694`}, {41.70255070160248, 
     0.03115528170383186}, {45.7476359583891, 0.032756631981101236`}, {
     49.71314495722706, 0.03425242573484866}, {54.01574439413057, 
     0.03580261522984074}, {58.03043422507833, 0.0371884127616795}, {
     62.38221449409164, 0.03860333004013228}, {66.6544185051563, 
     0.039963947756405105`}, {70.6387129102652, 0.04118726928936667}, {
     74.96009775343965, 0.0424688521434291}, {78.99357299065835, 
     0.043564307588894735`}, {83.3641386659426, 0.044777377183891076`}, {
     87.6551280832782, 0.04592345601395209}, {88.15551305970067, 
     0.04603870240771357}, {88.65589803612315, 0.04616709713900491}, {
     89.65666798896811, 0.0464060881313344}, {90.15705296539059, 
     0.046535018896065594`}, {90.65743794181307, 0.04664238213081262}, {
     91.65820789465803, 0.04688768694904866}, {92.20072917583872, 
     0.04702433864167688}, {92.74325045701939, 0.04715750719697098}, {
     93.28577173820005, 0.047291830014728475`}, {93.82829301938074, 
     0.04727439284124557}, {94.3708143005614, 0.04726903080154443}, {
     94.91333558174207, 0.04699714668277011}, {95.45585686292276, 
     0.04679718972511182}, {95.99837814410343, 0.046806020009171334`}, {
     96.49858123568325, 0.04670637292747415}, {96.99878432726308, 
     0.04593666119490081}, {97.4989874188429, 0.045858776047680294`}, {
     97.99919051042272, 0.04509501070515398}, {98.49939360200254, 
     0.044881014446218614`}, {98.99959669358236, 0.044255064835851954`}, {
     99.49979978516218, 0.04347718879671447}, {99.51891032778947, 
     0.08758989044510712}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 100.00000704340896`}, {0., 0.08758989044510712}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.413286346431209*^9, 3.41328638567656*^9}, 
   3.413287246643412*^9, {3.413354871004042*^9, 3.4133549111135*^9}, 
   3.413355928536048*^9, {3.413356310423167*^9, 3.413356343448458*^9}, {
   3.413454582328948*^9, 3.413454653440166*^9}, 3.413460831934838*^9, {
   3.413463994595582*^9, 3.413464013328031*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["total functions", "Subsubsection",
 CellChangeTimes->{{3.41335651230654*^9, 3.413356523617936*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["iso", "num"], "[", "t_", "]"}], "=", 
    RowBox[{"llafit", "[", "num", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"num", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.413463587322706*^9, 3.413463629040996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["iso", "i"], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "99"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.413463710285202*^9, 3.413463799297638*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
xx/ibhT/H0n2NSI=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxN03k8lOsXAPBJ9upakn1LwjszZL+ImWOJlJSlJG6pJJWQKIQkVNYUJblM
hRQVUXYjt0S3UPnhdiW35ZYl2RLS7fe8z/wx7x/zmc/3c85zznmWd/muINc9
AjQabRz9yH+PRk+NPyeaWLlXdmlWcphwI9//ipB8PjtLfbOzbR4TbGQtux/I
3WGXeoaL9V5mQvrzwrF8OS57ZFysU+oiE0zuvPqRJtfBLveOpj1MZYKoalh8
otwbdpDKtK9EFBNCNjc7xMl9YctF7lOt9WLCiP8SZTXRMbZ9Vsn8C08mqF83
l4mOH2MnCIhKfPFgQuKKc4Lm0ePs2CTNHH13Jrgr234oC5xkJ9xe+qbHiQlj
SwqLOC7f2Gqy/ZdLWUzQHvcnYuV+sueJNjMtTSbI1ALDPe8ne2RWtv2gBhNO
WKfIZkrTQMTds6RKnQmB4r7y/pdoIHBaSdFVhQlrc5cqS15fAGaVG19xZJkw
zw1Z4dO8EP5NXySRL8YEXxEDQ9qsCPw8ukNjbIwBin92a6sbScIjv7Uv+v5A
vvrD7ZKrJFy9WtSe18wApQjNWOkQSdCR/vxg5wMGKGuH9AqWS0LP01uJQ40M
UDu55MygnhTsbzX6TaSWAZqr7Ybu0qXBy3T7bEAZA/RKykvXaMjARf989Te/
M8A2OcXggJQ8KOww8tQ5xoCEwk2LjVrVwNNqdbYBmwFl9/5t0l2qCQOfX70B
UQY4lj849HhOG5onm58c6aNDmcBskJQpE54kdAx5VdAho8lr+KmePiRtz/6h
fZYO6k5tf71UNQTdX4ePrTxMhwsCH0bvmhmDeHtGo5kHHXYJSXC79Ewh9u8G
/0k2HSrzov5YpmQGnEiT/1wZdBjZlT2qZ2ABA74Zqd9l6XDscHNX0gpLAPuB
Z3lCdBi7nfNPI5sFtPR7mW5TBBwBLykxAoAWw/yz6j0B+RuDJdzVrYHWJcSB
HgJWh/apJzNtgMZs8KloI0CA25H+TssWaNV9XkMNBFipKUrrmNoBjVMS+LWc
gLp1iXpRsAZo6vcfjRUR4JsbUTxuZg+02MGNrN8JiF340MTN3gHZutn1PAGP
z2apd1uvRda9eTGJAJfB04X+Zo7ISh4n4ghw9nhp9dF2HdBoOiLmkWje4QKj
U1brkVlXBkMIkM56ZrnUyQk5tNvvAAHjYvIDtzdvQA5/us+XgO8FgwMHNjgj
K0dYbCcgfLP0V5ltG5HH4t95ECApu7MiiL4JmXbH1ZUAoY+ONd6FpDksww0E
VNr0t3LpLshwe94BrTcwPWV0nXSnf5AtAdM3zTeq6Lki+zh1sgg4U0VrkSvF
Dm6zIKDxRq9YjrYbctNVtV8JKNXy9jh3izRExRgRUGZ6ze0y3Z00+5A+AYHP
szwV75KONY7SJeCZyyXm8l83k77zgU6AzR6f22YVpGnJjTrovFelvXe9h91y
D9l4rk7xYBX2olvIK9PlTl2pw+ZcRhatad8h/hBbIAK5fbGVVF8Xdqsxsmel
QujxaezwMm0Cghe+NG8x30J6Y40WASZ9dXfrV2OH3UWeqyxgVFhhF5Ygx/sd
UeFYY0vlIWe3KSyIdMTWO4n8IN2nVdcTO9wZWVp5dEtWOLbL4EoCeqa6O5Ij
sfXfIec+466Ni8Je9hpZ63iGRVAs9ngnssVbY1XH09jD1ci7i499mL+IPXcG
udJYLNS3CjtYH1nSRWuxSw22NgP5wEHbAqs67NcrkTWKortkudjblZDPyk0Y
t7VgFwkjH5x79VW3G9ukXxPN01R69NsU9qoM5Li+Non309gpKcivZ/693jmD
PXgKOdNgee+Neez7McgLr2WZeQt6kM4MQB5IiJltWoot7Yh8af2mY0mG2AFC
yOqymcMcY+w5GnLRQI9XlSn2ufkVBNwN22H53gK7aRL5aX7gDytbbN+3yLSp
lOPjbrx6Tcj+uW0nt4ZhhxxHHvVbMhV4FDv2GHKYgYtvQgT2haPIcS29dnej
sVuCkHPHPgotTsS280HutBM+zb2APWaNbPbZJkWrGjtPBHlRizVboRbbXRC5
Pw8mFtVjiy9APrmJtXWcix05p4HeZ4W5Zv1j7JTPyHsi9etderAtupDPiaiO
RE1jexeQ8QHl/KAZ7NAryGY1Sq675rCL8pBf71eodvgPW+ASsk67TLy08FbS
tDRkbuYi5eJl2DPhZP2D4h05ctjBR5B97cXiUhWwJw4ji88IfwpRwRYMQt7i
JVBptRI7fA/yyPLZ9S+NsfPckIeKVXu+mGJ7uyB/WmW3a7E5tsxG5HdW6eFr
rLDr1yG/8lxZWLUGO8kGuXdgnX6XA3YUIHfvDa4bc8TmsJCfh9U9J5yxuyyQ
WzNc/ru8BXvUCLlF/uiZ6q3YNobID/NzZf63jddPn9z/rY/0X3bw5tVFrjde
cp++E1ufiVxbZ2jtsBu7lY58vy3aI3YvtrQOcuWma29z9/HiWsjlPa0Haw5g
p61ELv2wNH4iCHvdCuSbAeYSEiHYOhrIxZPbcxih2FrLka8tuFnmG45trIbM
Od2x+kQktrsqcp7E15bfo7BDVZBzLyi61sZg5ygj56jA6+5Y7G4l5OyCPf6T
cdiapLMYyZMSCbzzVEQ+a94t5ngGm6WAnNb0PXNPMnaZPHKKw3L1uFTeetJJ
7fYleenYtXLIpzYHmNZlYDuTju/LeNBzHvu9LHLc7iqnqSzss6Rjh/p6JLOx
DUnHHBLYrZuDLUA6akZ71DEXu3QZcuTxDRF+edixpMOFDwue5GBvIh2Wmp2e
f5V3X6RDZBoV6wuw5UkHX35X2FuEPS2DHKghZvC1GHuEdMANvXqpEuw+0vv1
3R30bvHtXxXxYt0d7E7Sfqz83/aW87370cNPJyt474+0j9PQYc49fv3tLyV+
1ldhfyLtvc0k6a8a7DHS2/7Ztmy6DnuKNOvsO0vhet73Sc6vwQ7wleVZlLTw
6FSyFs/zZP5wbnSFKc+CZLxzvfDf9jzPkPHKuTQBD0p+9g05+t56fr+orRyX
o5R+PiJExCmeF5Nec7+cc5HSn77HovU6pd4vMn98qaKsn2heL9dKmaf7UBer
l2dJ0rXqv/l9ouTnd3xInaHMGx8TeE+0gd/PX/dbn3wDfx6nvuOCBMX6yaJM
8wZ+PRmLDDdHSnz2k8Ixzwb+ffRfvHp1XwO/X7M940kEJb/oa8X4GUr/pAJL
hRyKA90ewU2K3QSc/Wsp683Ku9OfUOor++yoekWZjybxqX+I4vcNwcLfG/jn
1Rowq7uokf8+binFbVZq5OefeyIezWjk5x+JOF+wmuJtOspP11PyWT0Fk16N
/PvSSNRVCmjkzydict8miuKRd6z9KZR6neceZ+Q28vdXab2pppRnGdLZY70D
9ZR4VP5O0WeU/judh1a9ptSz/xHi8ZkyD730e8wPntXJ+C9e8UVLuPzznRBb
0q7C5X/P3dVZX3W5/Pp1e1VVWFx+fY7sdTtnyvr4R6sCtnP5788/tPp8IJc/
v9MK67oYSr7+i7a3aRQvO+Eqnk/Jn1v1t8EdSr/+/t2eXC5//82pI7EdlPmK
LMOK31DiScM/Or5QHJST+O0npd//AWp9+KA=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zSxSFpaG/h9FdlxB
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
0fmuCeJ+2uH5Kf8uEJ+k/X9US5XI
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 13.},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.413463775172733*^9, 3.413463800268767*^9}, 
   3.413464833339324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fplot", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.413463856399205*^9, 3.413463859432688*^9}, 
   3.41346515409054*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVkWs01HkAhmWrzaqprCUqDUPNz2huu1uaxKuZLSthZv7/mel2UEnZlLVo
KNdCxpGK4xJdVHKZtttxv1UmpGKjlmKXbuik2JKyy7L2w3Pe83x9H8vt+2W+
+np6eq5T/L9/51Rt421sdbxPBWW6NQohfB026lPT49R30muBVZoQ1KoX0k01
Q06eRXaOwXuEcLmpe6TX8tmp+XiESaVYiF6f9AmqZtLJrG3ZRLalEM6xxWlU
+xfI6Df0kOsLcfzR4qKJ5i8xv2pw7ZZeAbihfz2W1cwF1UQCRq4J0D2davx+
hhEGGG3pRhkCXGrhWddxjDGWuWpWfqQAK7b3/9mpXoAWb6PUOKkAExydyO+s
OUI3u8s0DgI0jJzJGK5fhL6GIJGaLYBWomXHJzIxh5sRUKYvQDwzddcxjSUG
GSaCOR/48B4Pv5ieZIXy3/mP3j3nw6TYlZmfbA1blabBWsdHNOuN6d0TbLwa
E1QGa/g4QqIy65MJbtl4/uQbwUciz9hMl2gLcW1Xx5lAPk6udjSvjbGDDSt/
5VMlH23kR0anPR/PIktC/2XzYXNkoNgx8jts8/P24WbxIKsMydKG20O67ev5
ZeNc3BK6WyU8cMBX9uuMA7y4GCh817kwDlAPDeQWtSzHDnaBWB21FuIQjf0C
j+UYb0ycSLoogYthXonkgR1iaa8nrLx1wHTXN8MqO2xZmbLyUrYL7jnGz5YM
ckCL+l73VLui+cTonaoYDhw4gorTFW6AR13SXhYHkjUXuoyeuyP8QBs9t94W
D1vLnFdFeaL/7eHFpYG2+DhmaqM9KMXYYqJqJLYoLE26rk6WTfVhdRf0EnTv
Ncjz/1UGN+6Mt/JuAmNWQubWZhksTu2MZnYQRKbERmGOHJfjea8smgio3WEb
ZyXLMZxks6jkCkHOcbPSvKty+Hem7nybT/CyvMJC3CaHiGuW7JZLEGTwz1CE
KQVHZqH4aBpBheCUaqGIgq9LnHDnMQK9zaLb5VspfC7Q1+05SpBSFH5yOJdC
obws5sMhgkXqwAtDOgrz6m+sTjlAUPDDruKBXgohs5t0VBBB3TNp+0tCo9ps
Xs/m3QTuV9b392ygsVCy5lb2DoKug2tGuwJoxB4KMJzpRfDRhJg/vk7jWk18
oFJB4M1iBBxtpbE3g/3HYRnBfd7wTYf3NKSb5t977E5w3qXGN4+vwL3bM9Ne
rSdg0OfLN3kq8DQyLPeChCDMJ8GQEahAdcSn1ARnAs9w6fXQqwpUZmdE164m
aBlVhbW3KrD0TI72qT3BhgPezis+KvDAMiGLuYLg7oifQbqJEu2Tl31SvyVY
F7y/dcReCS170kwoILjzITSL3qJETNS0jnEugfPPkT4lEUqUGzRph+0Iaofi
yDfnlPDQfCo04RA47Et+H1ynhP/50ue+hCDRXChd+kKJsH05phPLCNob2q91
TFPhkjh/vGopgdUvB+clWqpQpWGeOmtDsH8JM1DkrIL/lfWjBdYE1ffv/Dbg
rUJbnoPFExbBLPUe3uloFejDs42WTzltzUhxP6fCdkbhk3yrqb8e3hicvKnC
iF9fiMuU/wcWLgRC
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0H001XccB/AfbXHP7G4rQ2Kuhxxfl+7DSkh53zFMyzA3jEKdyE7mVvK4
PJV0PU/y0NgkV6TyMEKR5qE0D8vD2GFp5ai7OaOGk8XYvd/98Tnv8zrv918f
w4PhnodVGYZxVZwy/ym+vZ+3d3C3rPORlH9fCKE8Zimo7bH9o1utNdsuCOFl
89TDt23O3m+RWzsZKoRLe+cwM/DKvrYy1LvEQYjpoPxVr7Y1+yLn2X4nQyFE
yQ15XqPr0Bg3lrKmIkTOsP7V1X41ZORVFJhOC7A18sWIZ9s7MDi+PYNVJ8Dk
G173t7+5ATeacuW7CgSoGOCZdHA1IZMcsx2PF8Dq4PNH49E64F0fVa3wEGCV
22kb8r0uWksO/lFoJ8C9xe8K5rv1IC5e/iXCTIBqx2qzs1IOVs4bBF5UFeAs
53xwVpohTryO5M285CNwJbY8P90Irobukb1P+NBqcOVcyTSB3caj7RqdfCQa
/6nd840Zhjll1xLT+DhDEgq7MwlY4+tfRZ3iQ8rT3NQpNUdbmOdqo4SP3J27
de8kWUA/v541783HEPmEPW7Nh9F4Zr4a4WPLmZmG3fHboCOf1l9fxIPnrZNF
1bHWYKr8WH0rW3FX6GaU2mcH5l8//fiArZip+mt8cwrAlOuycwYsccis0iE6
4SMwd5tU3vvMEiv3pavp5Y5gEi+sO9BngWRxwK/GMieFn0kWfCzgtyN7R8W3
LmAYWa/FLBdi22fyx62uCuf03Uniwo4raClp+VTp2SRjLhx3XZ7Y8MRN4Ren
1brN8XCwSWST4K5w6YNyiTkWlrW3VMd5KJwoHyHmqLqZXhed6akwUuunCSaP
smRfXlc6Ueg7SaBpnFro30+taThGEJ+dnIC3P1faROsBgdeRmL3qmUozU6U3
CIpzNt2U1VAvjV0hmGpu+cBhiO4P2FwiOM56PXdK20vZV8blEbQILvpstqVO
8c8iYL6w/bHZn7o+5BxB9tXY3PlL1HPLXxPoRUsuz3VSZ5VEEVR+HNwwM00t
Dz5O0PG7x+gUESutITlC4HbD+fnjPdStNYcIJuJ2LU2EUS9oBRAsaBHdkTrq
vP37CAKN2WHnBqkrTnsS9PLm2+1eUusMuBGUubQdlvH3Kf3TkDMBW1zW7OtO
HZvlSBATlPoWW0Ktd0xE4B7rURdZQ911bSfBwJJPzOggdcSANcGeqECR1QK1
XN+KoGcxhJWv5a20+sUPCZwiwgcXramviQQEXX9HFon9qDkbeQSiY/FBjaeo
f9OwJLgzl0LeL6XuseQS2H2V+TKigzrwJCGQ6go9TJ9SZ6iaEYzeG60dU/FR
WvMHUwKjE3HvSg2pTdK2EIQbcCS2IurKdBOC1t6un2cCqUtvGxOoR4fyShKp
m/UVFpuws91KqTl1Rop/PayfXWv/fx+m8H93sslu
      "]]}, 
    {Hue[0.14213595499957954`, 0.6, 0.6], 
     LineBox[{{4.1249999999999995`*^-6, 12.566370614359172`}, {
      1.9837236351796659`, 12.566370614359172`}, {3.967443145359332, 
      12.566370614359172`}, {8.26860167589833, 12.566370614359172`}, {
      12.284729716616994`, 12.566370614359172`}, {16.222077267515324`, 
      12.566370614359172`}, {20.49314432859332, 12.566370614359172`}, {
      24.47918089985098, 12.566370614359172`}, {28.798936981288307`, 
      12.566370614359172`}, {33.0399125729053, 12.566370614359172`}, {
      36.99585767470196, 12.566370614359172`}, {41.28552228667829, 
      12.566370614359172`}, {45.29015640883428, 12.566370614359172`}, {
      49.21601004116993, 12.566370614359172`}, {53.47558318368525, 
      12.566370614359172`}, {57.45012583638024, 12.566370614359172`}, {
      61.75838799925489, 12.566370614359172`}, {65.98786967230922, 
      12.566370614359172`}, {69.9323208555432, 12.566370614359172`}, {
      74.21049154895685, 12.566370614359172`}, {78.20363175255017, 
      12.566370614359172`}, {82.53049146632314, 12.566370614359172`}, {
      86.77857069027579, 12.566370614359172`}, {90.7416194244081, 
      12.566370614359172`}, {95.03838766872008, 12.566370614359172`}, {
      97.01919177186004, 12.566370614359172`}, {98.999995875, 
      12.566370614359172`}}]}}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1yw1M1HUcx/HjUSm6AAmBbICcxOFxPMghDykfnk6Eg3s+zu0sys6RJEjD
YRAEAvJgEOBSxGEIpI7wGGsEM08OY4GcrJQIvSYq3RAoUYwFimfZ/H9/22+/
vfb5vX0+yJFprVkslvbF/f+loy+d7BcNh+KlHsVY2T8Zv5ZJZkFjiS2u8Sav
hal1umP1jxDGTpDJ1QXqbrIr9B4C+dESsjtea2vIilORN2DVarf4eBDZG0eM
JZI7r5I3ovP380On54MZc6B+PjKdayT7ge32TO+gI/tjxnnZx6+RHIA8vcq3
MZ/MQ3JBW7/Pu2Q+mlZuPutOJAfjqsN3d9/ik0OwkF/9tnQ9ORTSpdGTW6zI
W8C2NOk/nAxiHIa641ZzBRfIAnQJOEV15eRwZIm1kioNeSv4FbJOhYAcAbu/
bl2eZpMjccIxYztnjs84CvOXhMuOQ+Ro1J4tvdHyNfkd+M/Z/PJ9IXkb2DOz
Mo2avB3mBu1SpYAcA+OZ9viwdWRgZTS3XbMY+NIlQG+4LtDyM2NWLJ6UhTa7
dNMeixGuNbe5jvY4HP5RX9+QTXscrjkcWPgnjfZ4zE669o0E0R6PH0qLdXbO
tCfgDcdzpq7HPGZPQOfevcX6XxmzEhHlXeG0tY/2RLye5RXu0Uy7EJ62Xfo9
RbQL8Vklv9ntfdp3wMP33p2QRNp34EvzoqGXS3sSrK/oatrYtCfBI3pN+8rf
m5l9J9qbWo7032JcshNTPPbw9ADtyVDe83c4dJb2ZFQ8Ndt8Wkt7CobnrxfP
5NGeAs9TQumghnYRej++n/FKIu0i1Oe4n7kSSHsqlMkPnP90oz0VuRODA+Us
2tOQrZw31M8HMHsa5iqXwp0mGLPEcB0tENkaaBfj5O2usOxvaZdAYy4OEJ9g
DAk2ZEzknC+j/xKcMl0QFR5gbJCgMTOefXU39VK4DPHtj6VQL8XyZGm1KZJ6
KfLGph62+lMvhftvNY3311MvQ79nkbF7DfUyDO/at/R0mcv0MkimxrSjs4wN
Mkx88eigl4kxSw7F44X8VSNjyLEZAxffu0y9HIbIiKrUHurl6BN7cn7qoF6B
uzwv42gT9QpEPLf0aGqpV+CBVbVt0WHqFXA8Nm7mHaJeibmHwn37s6lXomHd
eGuMlnolRNs4VR0a6pX4aHDapUVBvQo3/7VsCkilXoXr5TZNIiH1Kuz5pDTY
DtSrcDuu8Jwiivp09A9OdEQLqE+HedEycDGY+hce2P/5DR716fhmrVJdxqVe
DcevxLoxP+rV4I29Od7DoV6N2cws+2Bf6tVw6rx0MGkj9bvgHpigWPXh4j9J
46nR
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 13.},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.413463864348398*^9, 3.413463916906323*^9, 
  3.413465161222938*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.413464937582046*^9, 3.413464973749036*^9}, {
   3.413465028293617*^9, 3.413465057006748*^9}, 3.413465134718349*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["partition function", "Subsection",
 CellChangeTimes->{
  3.411207983708696*^9, {3.411404079185362*^9, 3.411404079337551*^9}, 
   3.411405168189626*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noc", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SubscriptBox["iso", "num"], "[", "t", "]"}]}], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"c", "[", "t", "]"}], "/", 
          RowBox[{
           SubscriptBox["l", "num"], "[", "t", "]"}]}]}], ")"}]}], "]"}], ",",
      
     RowBox[{"{", 
      RowBox[{"num", ",", "1", ",", "noc"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pde", "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "z"}], "]"}], " ", "\[Equal]", 
    "0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["l", "num"], "[", "t", "]"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["iso", "num"], "[", "0", "]"}]}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"c", "[", "t", "]"}], "/", 
              RowBox[{
               SubscriptBox["l", "num"], "[", "t", "]"}]}]}], ")"}]}], 
          "]"}]}], " ", "/.", 
        RowBox[{"t", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"num", ",", "1", ",", "noc"}], "}"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"z", "/.", 
       RowBox[{"t", "\[Rule]", "0"}]}], ")"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["l", "num"], "[", "t", "]"}], "/.", 
        RowBox[{"t", "\[Rule]", "0"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"num", ",", "1", ",", "noc"}], "}"}]}], "]"}], "/", 
     "noc"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.411040454585831*^9, 3.411040459431704*^9}, {
   3.411040495107051*^9, 3.411040505305*^9}, {3.411040644760512*^9, 
   3.411040677761014*^9}, {3.411368037866572*^9, 3.411368061066891*^9}, 
   3.41136811637126*^9, {3.411368166183915*^9, 3.411368173567178*^9}, {
   3.411368375459669*^9, 3.411368391324725*^9}, {3.411368458262016*^9, 
   3.41136847740682*^9}, {3.411368512449914*^9, 3.411368567514928*^9}, {
   3.411368627926931*^9, 3.411368667255379*^9}, {3.411405769718072*^9, 
   3.411405774075398*^9}, {3.41140580834273*^9, 3.411405814467969*^9}, {
   3.411406100925306*^9, 3.411406134666998*^9}, {3.413465413008117*^9, 
   3.413465419576532*^9}, {3.413465551464897*^9, 3.413465573725801*^9}, {
   3.413466190013183*^9, 3.413466201612065*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["l", "num"], "[", "t", "]"}], "/.", 
     RowBox[{"t", "\[Rule]", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"num", ",", "1", ",", "noc"}], "}"}]}], "]"}], "/", 
  "noc"}]], "Input",
 CellChangeTimes->{{3.413465641948359*^9, 3.41346564344153*^9}}],

Cell[BoxData["100.8121111656243`"], "Output",
 CellChangeTimes->{3.411670860398019*^9, 3.411671000356083*^9, 
  3.411673211995986*^9, 3.411923641703914*^9, 3.413465536704268*^9, 
  3.413465648181283*^9, 3.41346572166402*^9, 3.413465773127686*^9, 
  3.413466204795299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"co", "=", 
  RowBox[{
   RowBox[{"c", "[", "0", "]"}], "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{"bc", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "[", "0", "]"}], ",", "0"}], "}"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.411407586924464*^9, 3.411407619720733*^9}, {
  3.411407720196177*^9, 3.411407739858288*^9}, {3.411407780164964*^9, 
  3.411407795226868*^9}, {3.413465979060899*^9, 3.413465984492066*^9}, {
  3.413466167810963*^9, 3.413466178946786*^9}}],

Cell[BoxData[
 RowBox[{"-", "201.18124248858956`"}]], "Output",
 CellChangeTimes->{{3.411407782288114*^9, 3.411407798311867*^9}, 
   3.411407838335918*^9, 3.411408513267701*^9, 3.411447987791575*^9, 
   3.411454129751754*^9, 3.411540298011235*^9, 3.411663484455363*^9, 
   3.411671001412369*^9, 3.411673213724132*^9, 3.411923642115082*^9, 
   3.41346583008403*^9, 3.413466171521559*^9, 3.413466206065762*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pde", ",", 
      RowBox[{
       RowBox[{"c", "[", "0", "]"}], "\[Equal]", "co"}]}], "}"}], ",", "c", 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", ".1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.41087471529948*^9, 3.410874727223808*^9}, {
   3.41087478548797*^9, 3.410874827288681*^9}, {3.410875002161004*^9, 
   3.410875071801481*^9}, 3.410875201917776*^9, {3.410880158012853*^9, 
   3.410880175195443*^9}, 3.410880277422612*^9, {3.410880311957375*^9, 
   3.410880334739144*^9}, {3.410880446781977*^9, 3.410880448635087*^9}, {
   3.410880728797862*^9, 3.410880746690803*^9}, {3.410972454711692*^9, 
   3.410972455439345*^9}, {3.410972510562796*^9, 3.410972569604469*^9}, 
   3.411039839986719*^9, {3.411039898570201*^9, 3.411039898789325*^9}, 
   3.411039998945769*^9, {3.411040196632053*^9, 3.41104020757994*^9}, {
   3.411040273004845*^9, 3.411040273834257*^9}, {3.411040473910433*^9, 
   3.411040474251632*^9}, {3.411040570425218*^9, 3.411040573980381*^9}, 
   3.411040633521154*^9, {3.411040731074643*^9, 3.411040736551094*^9}, 
   3.411041745039184*^9, 3.41104180484712*^9, {3.411368063233209*^9, 
   3.411368068216552*^9}, {3.411368414018244*^9, 3.411368445354856*^9}, 
   3.411368686440586*^9, 3.411407681368138*^9, {3.41140780919199*^9, 
   3.411407813795946*^9}, {3.411408207086465*^9, 3.411408241819493*^9}, {
   3.413466536110347*^9, 3.413466538774471*^9}, {3.413466902453251*^9, 
   3.413466904100602*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.411406676653761*^9, 3.4114076833427*^9, 3.41140781484877*^9, 
   3.41140785011972*^9, {3.411408211003588*^9, 3.411408222031605*^9}, 
   3.4114085142239*^9, 3.411447998557867*^9, 3.411454140498561*^9, 
   3.411540309002291*^9, 3.411663600488067*^9, 3.41167117110278*^9, 
   3.411673441306235*^9, 3.411923806493867*^9, 3.413466330890417*^9, 
   3.413466627423764*^9, 3.413466993870979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}], "/.", 
  RowBox[{
   RowBox[{"c", "[", "0", "]"}], "\[Rule]", " ", "co"}]}]], "Input",
 CellChangeTimes->{
  3.413466634208916*^9, {3.413466715613166*^9, 3.413466778446394*^9}, 
   3.413466860490538*^9}],

Cell[BoxData["3.595730887454902`*^7"], "Output",
 CellChangeTimes->{
  3.413466635232285*^9, {3.413466719310294*^9, 3.413466779683424*^9}, 
   3.413466862951543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "/.", "zsol"}], "/.", 
  RowBox[{"t", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.411408518917953*^9, 3.41140854044918*^9}, {
  3.411408589099093*^9, 3.411408619345387*^9}}],

Cell[BoxData[
 RowBox[{"{", "7.856883422264648`*^9", "}"}]], "Output",
 CellChangeTimes->{
  3.411408541189988*^9, {3.411408590013509*^9, 3.411408620016015*^9}, 
   3.411447999142655*^9, 3.411454140959666*^9, 3.411540309512668*^9, 
   3.411663600596604*^9, 3.411671201660319*^9, 3.411673702346237*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zo", "=", 
  RowBox[{
   RowBox[{"z", "/.", 
    RowBox[{"zsol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.411408368606896*^9, 3.41140840367347*^9}, {
  3.411408434232832*^9, 3.411408437390042*^9}}],

Cell[BoxData["7.856883422264648`*^9"], "Output",
 CellChangeTimes->{{3.411408405009468*^9, 3.411408439452233*^9}, 
   3.411447999579119*^9, 3.411454141391822*^9, 3.41154030982408*^9, 
   3.411663600611233*^9, 3.411671221051703*^9, 3.41167370379372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "[", "t", "]"}], "/.", 
      RowBox[{"zsol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "zo"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "99.9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.411671082304552*^9, 3.411671087480206*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 99.9}, {-2.9193190202729332`*^-8, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.411671246233194*^9, 3.411673705528831*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zoo", "=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["iso", "num"]}], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"1", "/", 
          SubscriptBox["l", "num"]}]}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"num", ",", "1", ",", "noc"}], "}"}]}], "]"}], "/.", 
   RowBox[{"t", "\[Rule]", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.411674059736155*^9, 3.41167408207816*^9}}],

Cell[BoxData["3.2429269459891474`*^-7"], "Output",
 CellChangeTimes->{{3.411674055178276*^9, 3.411674082999837*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", "/.", 
        RowBox[{"zsol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "zo"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["iso", "num"]}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"1", "/", 
             SubscriptBox["l", "num"]}]}], ")"}]}], "]"}], "/", "zoo"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"num", ",", "1", ",", "noc"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "99.9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.410880369877618*^9, 3.41088041174388*^9}, {
   3.410880456090515*^9, 3.41088045662387*^9}, 3.410880496138842*^9, {
   3.411040523653246*^9, 3.411040525073964*^9}, {3.411407858990894*^9, 
   3.411407862203577*^9}, {3.411408225606154*^9, 3.411408248402695*^9}, {
   3.411408290907949*^9, 3.411408347358206*^9}, {3.411408413083381*^9, 
   3.411408447063121*^9}, {3.41140848516362*^9, 3.411408486335914*^9}, {
   3.411408551620311*^9, 3.411408559973785*^9}, {3.411408632397583*^9, 
   3.411408646034907*^9}, {3.411674011503896*^9, 3.41167404038379*^9}, {
   3.411674087784335*^9, 3.411674089919763*^9}, {3.411674216892031*^9, 
   3.411674226041173*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwk23c8ld8fAHA7Kyuyywopkj3ifnDd6+JeNyEZESpaiqShUkplhFQUiTQQ
klSSkBJJhUL5yqqMEpFkRD/n8+ufXu/X89yz13POoewX7LyZi4ODw0GAg4P8
n+ObWbRG7qllEwf595NiNFdX4+d7lfLR9tkV4hLzVq8lvncom1Ld4onV//rf
5j39kHL28NkDxKHtXpp/fSopEtoP9xD7duQ5T6U9o/R1pwQQRztoJI2fqqU0
hKqwifPLst+OhL6iTAZupBK/W64k8t3nLYWvyc+c+LAjS/3XjSZKZhhNg1js
RFzNz7R3lHLbbmni7Mf1AcNJLZQ3XusbML2/+HmGTrVRKh5afeSc90stevbg
4Y8UFcGcD8Refiet+0P/o2j0aqB/XnrW8yXoE+VORAK+H9XEeazXp4tivLi1
gziWR0nsZ143hcd3RQ+xq1Jl1/CNHsrFPw+/Ei9Zs/HOj8xeyrkX6YPEA+tn
jwylfaa4bRn7TnwowXzJt6SvFKWYhCFikdoDT/pP9VNqdlT9IM6ae+j19fAg
ZWKDyAixgdHETG/od0q/0BF03U6DtO6gH5SmtPc/iT1vhJh1+oxQjqQWjBGH
7/ow9CPvJ+XA7eBfxFYx4eVDN0Ypz+XujBML3lwc9z1zjLL09+AE8fun9z2/
pf2iiCxyniTO+OSyYvDiOCU/PPoP8dapX9P9Sb8pV9Y34PuOp575bRWdoMRq
SeFzXank+r64CcqOvim0VLaf3hbBP5RBm6gp4mldvctfT/2h/NtzY4a4q4KT
azPvJKX4PWWO+LljU9CX45MU2RcKnFzzzmnPbPLnmKJs2zDKTRwfuNv08+Ep
yoSyNx+x2wlRgd7905ThTYv5iZUyCz90h85QfFIceYl5dY6A7+gMRSLODX//
7TEzp2vXXwo1/jiG/5ahKOYz9JciqrqYg7ikbSi8M2iWol9P+UfSc+RXLP1T
wBwlyigNTRddId3h84+S+MaIi7wv3HaxZcaYA3xPB2F8e9VTrwpUcYAbtyZa
803qCTEeTuB5WYDxd4RdCpK244QGTlH8faLiZdaSOE7YDk8wfmrNZf1ljZyg
lMiPntyRJrNSkgs+bF6KzpdMn9Vz5wLhZBFMv295eq9pOhfIrnmK4UkGXKmF
bi540siB8dcJZeTT1bjh24KwBcQR9zKSWIHcwO7IFiDW9by6zzWfG4rjRwWJ
v3Jlenr95Iab2ZXoy3mZ4G/AAzXJXvg+yzlr2bb9PCA0HYLhcU1nCe4p54EI
/ViM70HWtZFwDl4w/SHEQ7xkNPvRydO8IHPQFPMfDTeiksX4YO5sEr5vNnAj
8LILH+QvjcHwhhNuMrNS+YBjWzLGd834ll5OBx9kgJYQ1nfXLek7SgvA5Xoe
WvBUzt/7AQvAJ/4hprdCJ7enPGcB+C/swvYQ0pr74tnQAvj1rxTbi8aRvNv1
uvzgml6O6Ut8fTvsQyk/CLgewvKbVCig9IEA7I5iYnrznxeo/TghABymd/F9
3x2FAuN1844MwPAkJe8MTwsLQsPqOUx/3eM77zjXCoJLxW+MP8K/qJT/giA8
CVuG7+sK3b0i+lEQ7vfswf71pfju8cWKQrBQXxvHj1SP4q2Km4TgxHKlauxf
XPcc1W4IwYUv4+nEHHn3Vq8YFAKnxcahxIFTJTMme4ShuzBNmlgh63435b4w
7FhCGSDjXaPdgxralDBcPuL8iPjEzwd5TIuFwOXbEEtskvowweXYQuhcEu1L
PEQp3etZsxCSZdeYEGf2l27wExCBmL74RcQuCY8sg5giQJed/frv3whFwLhM
dXeSCKzaO1hAXNFZxh/eIgL1U2FHiUOiH/84LCsKzIl/HsTqOuXNJ7xFYdSt
AIjbW8ofxmaJgs6SnbrEZw8/ST/3VRTWvf+znDhLoquqQVIMZP6+XUl8aIuP
fqORGEhEW5sQu5Z13XjnLgYJ1K0OxCK7bMQv7heDMDOKP/EL5VsR7qliEC71
HNNzpEVwQK5UDPQPP7lKbHxm17pPbWKwUrzhKbGs+yxHv5s42LiJLyX5bRba
tCN3nzg0JvlpEsdUPm/bflEcHOJEtYmtQzVtdB6Ig6zdOkfiGfW4wp8t4qBR
VrQf58P2Edl7v8XhQpsTlveOs+tOhklJALXzdwyxmvXDn8aGEvCB6zr60285
r2kXCegRDMD3L+YeqS3fKwFiNuk4n7K8e/WOnpeAhdS5RGI+cVqGVYkEFBVr
XSCufJ4rwPNeAtY53L1EvH//wrAXvyTgq5B4BrHuyj3dpxctApp3aRbxQNd7
Bwf9RfBuDe914qxkk4cL1y2Cz74n0R70dJXGkEWwS1H3BrHEzL/4c+cWgfzf
uJvE9YX+Uy7Fi4CtejiHOMqvNkC6eRH4yTfnEa9ZvKLx4+giKJ5gFhCPvzxr
ni4uCasPZd/B+f3w2M2NqyVB2n7fXeLNq90klNdKQgG/ZzHxkq+PDn/eLQlX
tqSjW1MVB28kSkLv8ch7xGcdj7kEFklCE2O2hJjO8bVSq1ESTvv8fEDMUWK3
4seIJKzVX47tv3Rr/sU7olLQoh70mHi3vBhXyCopaCvxf0K8/G3oTgMnKfBM
raggvmxkTn10VgrOB6RUEgtlcMlbvpGCBxS9auLna7dEcwxLQVGe7HPiCN76
0eqFi6H95fIXxAaPtL1Pai+GGFO1OuIfO5Lq6MzFALwVL4k3vne/2hC3GB4J
bK4nfmuutG9tw2JYvaEef396JKpn0dBiGP8kjeFDdr9jq5A0GJ5b9ZR40s2h
NHWFNCxYycT03hW8o+rpIA2PxzIxf9sqJBIUt0vD7R4nzL9KyL7prhhpeFYf
+pC4fVn75mt50jB0QB7LK/mjRVNAvTRUtdjfJ+ax4s0ZFJABjRNy6LCchiO7
GDKgqaeN70+v2udVckoG0tOXYXhHHi41m66RgcZ141gfcGhcU/GrDPSJfsf6
5aa8lAYeWbDw4y4kfsGVweevKguLT5/Oxfy+CPl90loW7KWeYPuzj6F/ydkk
C6Ki/10lXshSePcqUhZWCkim4fgmPvp0+Kos/KIkXSQ+11JTJF4pC54loedw
vLp0+apBpyxspr0/SyztHXx2/aws8Dc+w/7VrkQ9fFBBDkIoDmeI07/I7Lhi
Lgd+d7efIlbeUc34fEAOGs65niS++Wu7xvJSOZj+3XGCOPAhLHZskwO5U0vR
WoekeIMn5OCFZ9VxHE8tv/1KkpKHRr2JSOI7XJW9JQby0Pfs5xHikBfJTW3r
5OHNhw8R2F5iAqumQ+RBOaDxIPEE0+KO4jl5kL08huNJqbhEBtyVh3I+l3Bi
i0uPD0WPyMOtad4w4mqlzRsatBXg1G/+vcQNq0ol3fMUQOpBCrrVUqjxs7oi
CIz/wPV3Kld3BR9NEUQer9tN7PmipGD5ZkVwOXh1F/a/mDPpjicUIffzjx3E
3cyNscHZihDh6bad+Jq4/sFz1YoQI/w9iDigZUHQ/R5FCJ8pDcT1/6WO9R84
lsBH2bqtxINed2kzS5dA0AZ59Nh2Hq5T6Uvg6pWsLcR/D65/IiG7FDKqRNEV
livzDU2WQmOc8GbiY1ycae7rl8Lj0rf+xNQXLWcO7VsK9VphfjgexuTtz7iw
FFoyJTcR1zGPbn1ashQWVT31IY4Vd3H78m4puC+L24jjaYum7YJfS8E27Kg3
tr+GOVkpASXYtyPbi/iNwVPNa45KoH5Xx5NY6kqU8apEJVjkNOGB+TM2OCSR
pQScSUMbcD5t+lLx+64SHFMPdcf2u/0C18dqJfBcX+RG7MVLo5W/UwJXwRcu
xLuuTpy5+kUJuNqbnImPmt56ffy3Ekhr/sDvn8R368W38CmD/mptJyzvnfyu
DGllEFHOZuL43VLv3+qhDPmS/vbEqyzjQ/wzlOHsyREHYueQ4anlVcrQLvwK
39930+nYzx5lOHggAcO71F7E/5BbBQSv+2B85SISiYeXqYDvjSfoNznV73yN
VMBxG30tcZd1qDSVrgLiw/KY3p8dqp4a7ipwxNN6HTFX+PsMwSAVYCtVYv4k
xU/2/jigAsy/yZh/9duG6k0xKkAXrcLyMbHtCypJUwHJfgqWL6PrYkFKvgo8
jV+I9eNxgD568IkKKKQoYX3uWDRpsPGNChzW2YXfi4n0DeVqP1XgwJ9j/2+P
PQIc/JyqMPdNPZj43qEym+/iqmAi8DwEx2up7afeqKhCv6HNPuwPd+Rf3dVX
hVyTOPw+HWA0iFygqkLwyxPYH6c/Rzjvd1UF7itiR4mFj2hf9NyiCrPB4seI
FWU6P1qGq8KQxFbs7+BI2cR7aT78t33ogMjMgVdlqvDa4y46b8Dvj/ucKtSq
v0aPspfx9VmpQb/gIxw/xr4ERW/fpAZ7o5nROF/uL+QbjVSD4YcGp4l/Vze+
uJeoBnQVcxyvJoR/Re/LVIM/D21x/fDHTYpuWqQG58SYOL5NZhov+FupBtWf
7eKIZ+qqFiz4pwb+UlwJxHM/GfwSlsvArEMWzSX7jl/x8DKYPshA81p5CWiW
L4OJGMf/rzdaMs8U/LcMLLXVkoj5g74K6M8sA0MhTRxvBWeXx5TKqUNCBTUZ
yytpl6ClmTp49/mcJ17UEynkUqoOxgFrcbyWW50svM1IA/olKlJwvD12Y2Fk
iQZcbth1mViz6aHIRT1N4B8qwfG+uHdmj9ljTbD86I37DRbjlJZOm+VglWeD
8wPXbA/f6tPLYeGLPHQd7wmTqIblcOiRfyaOz4Kua/OHl4NIw3Nc/8SLqG9r
EdOC5613s3G8STw7MaisBeGzb3H++Snx5/icnhYsVuXC9Y6zdF2ahqsW1BxN
/P9655Ku5potWrDJ9QvOXyXyl0rY4VrgEmR+G+cbpW2vD1zSAgedr7j+sbvW
vOFs3nz4watx/XNQzbzv2uP534vvLSLu0BT+9+qTFkRsbcb1jqX2J+nf/7Rg
7t4wzqdZqwt1l6isgICnj3H+5TE6yqBTV4DwQ91S4i1mbL/dW1ZAkjYD5/sV
NmPJ1XkrQP1CUBnmx+F8jeTICugSmEWvY2/utBBfCSu3/8P1wgMXoz9b9FfC
dL4frodkNiwQS3RdCU0XuXD9c8j7g+aj8JXQl1ZZhf1lj1yN9aWVsKlpH66H
XKK9NjWUrYQyaXlcr1Rdzph17VgJOflpNcQr73Rf6ppdCd3SQ7i+4f0Q0DwG
2nC5sQvXR50cg4J8J7Th3Ewfro8eLt9pI1urDU/2GeD6KNF59NBKQR1IddmG
DjoUVkJh6kCT/MdXxNbXp4acE3VgJWPqNXFhqfmZjrs6EMyQfkss//rwsi3v
dMDKd3kjjvc9lU9HxnWgp0G1Cfvbb86NBxavgo5/s+jXS6Ivxm1YBZEfLd/h
/E8XfHs1fd6hn9H5jgJK/uK6cLJK+j3xybB4930uulBIv9BCfJemWpDapAud
3sUfiD9JP+J8zFoNQRcEPxILDLLcPr1aDe3XStGGZV/y/tnpgXrq9XbiL475
m4oa9YCfJxp/f74rVGaTuz5w3WxCV7p3q3b46oO11Pk24m9NjqvWB+kDi1us
Fecrh0dmzXv0QfI9E9MHz5fRmAf14W62azPxdotza+uO60Oi7Sosj4sP5rxs
YvWhwqYXy28opy3UNF0fzvOPYv1Iq1CPllzXB+cdHlh/1mlFMasK9OFHQOkz
4tT4M1nLKvSheC4I16M2IeZvxbv1YfK7KbbfXd9vtccN6MN19W5cD6YGSPYt
GNUHy9xr2B+efYocPT6lD0OTJ7C/DLv9+DvLaQDvaDHYn2QbN/AfEDSA/F33
sb9RGS8WjUsYwNoJfuyPwdV6S4PlDaBb+BT218vmV7W+qRqAW8xq/H75qb3f
qtvAAE76imN/pymtdW+1NQADhyIcD9IltIIb3AzAKEIMPcbDHV291QCSg3XQ
xreYsqnhBrD0zA90BCM1f+cpAxh9YYHhZVy22OeeYAAJDGkcP55+76XYpBhA
T7gIxv9lzWkBnasGsOykEqaP76z2O5lbBvDAw/4WjnddzencdwygL+U05sdB
d/+W4QcGcDypDfOb2Fw99eyFAaScT8nH+U018FnhGwOwefsPy6t178L4S60G
QNPYiuUpL+2uFNxnAFvsl/x/PAmcHdwwbABDvX74/eT76No96oQBhOslYv1E
CdodXjVnAG8+XcX1/k3PHzQ5PkPwM4/F8eb7rHH7iJQhcHV+wPW+bubxnTXL
DKGz0hzHH+dRDeMibUMYy2jH52HWrznSDA3h9zsOdGpySP1JC0OIu1+K4Zd9
kT6/29YQxu2FMf4OwyfenkxDaHPkxfT+i/bToLkawmm1AsyPyocFo7rehsA9
JIz5pS4vKJPfbAiKO7Xxe3PLQecTfDsN4ZuyNJbnmVd/mKN7DYFu0Iz182an
dc+LE4awMPq/dGL34rYFIdfnn9/nwu+Dg9yHm7zyDeGgrxXOp1dcVNLoJYbA
4XwK5+PeiR06is8NQfybBa4HeO0kJhc0GEKsfukhrL9LD5+OvTOEFH4mrtd3
mnO51n02hHKhVlxvJ8bdWnLvuyE8pTbh+rr4k+PAlV+GAEt/4/qlRWfs7ukZ
Q+hwouJ6evJoyqFQbiPIMn6K62G5pjW2G4WMoO7zTlz/WKj0ijAWGYHNQkdc
//qGnvqgL28E3LLeuJ9z/PnKa0tUjeCE9DVcT12Xat4usMII1Grkcb1buyXc
cFzPCMLO1OP669tDhX+dZkYQEF6I61thgeq6l9ZG4MKsxfXt2tvCXledjeA5
5wVcv11krh/Z62cE6ya00N3hHs+n9xhBTV84Wuua96XIY0bALNiMv9/b4LuL
L8kIqlZ/wvArJvxt4jKNwGNHNa63P8d+1XbKMYIv4u8xffzKW2UkiozAZ/M4
pt/ZYduPlEojOKXPxPVgePf3No/a+fL5cxDznx62s1rxrRGMzWTh90G14Eh+
d6sRrF9ajuXVf3V3SnanEawZrcbviYjxfVZ3Zo1g6Z4k/F4RYxz+XqZgDJHx
VPw+MeycazmsZgwbJwbwfY/QyCpYaQyBj1dheEf5uW5zG8w//6qM8V+/EnXh
hbkxjK6qw++Nl3q8kWdsjCFMcAXmZ7g2epujgzF4pThj/k3GzlCaPYwB3ong
etn7lJDWBT9jyLIrxvX3cYV4SfdtxuAya4zr9wZa4uCnA8bwJYiHhvWddjF5
MHU+/iQ7Y5x/dGWO5GcaA2PDLX3ivJpLgcE5xrDPQEoX57eRdIvfD41BbFRn
OY6nJ5dollYaw52I3mU4PshlShyqNYax4BIVnB+p2f0cbcZgkFupQFzwUa35
WacxTFvNyRI377pZHt1nDOkDm/G85Q+35i3GsDF4xE1KEitcyk0SnjAG9+aH
EsRWOisi3s4aQ67UDTHsr8/yt5zjNYG0rU9FiGPddda6LjSBZwkLFxIX/bhj
LiNlAnzCMULYP46vVv9PwQQUxI0Fiael74llqJlAbIykAPHSAoMZ35UmUCan
wo/jg/WDr6oGJmAn77OA+OyOR2W5NibwK9Cfj/jjxfKEVetMYHXKYrTLFO/q
BQEm8+vncPQbT6fmzr3zvnUAf8+oSA19cNIELC7PYfjPlXolz140gRzebkwP
Z3P016kME7Dv/4rptYxa8WDzLRNI+DkqjO3NoDG66Y4JZBXNYv4efd273qLU
BOLduESJDewqJiVfmkCg/kcsn8K8BZeHPpqA6VkTLD/NhWvNn38zgcGTHejs
4MsdaTMmkFRBR3crUQoW8JjCJhF/ceIlzZ8Phwqbgsc2VQzPM+o0q0vSFG4t
OoflnWqgvdRB0RRGRh9i+lq+No08WGYK0heuYH4kUvZVqeiYwm4DB8xv/FTl
pmlLU1BJVOQmrs8L0NtCNwXmgrV4HsjvJcDd7GQKP3veTZP91OMVztdzfU2h
u/zVMHFl8J+9UkGmsL0jd4D4r1K67bE9pvBkUVQvcXjU1z7346ZQUebUSlxi
EPPweYwpfOFyayQe+6pzWjfZFLZKHa4n3mG3fzn/dVMQNnSsJM6dUpgOzTcF
9hRnGXFf3tP6rhJT8P3zq4RYzWtLmsMTU9i8X6OIeNNCoR0Pa0xBUj3rNnFG
xZ01qm9MYZ3Q5lvEHcEuCxNaTcH04r5s3B9Wnvo03WkKv1M/4P6xW/OVwi39
ptDDiE8nTo6yPto8Ml9ethcvETca9DtZTprCp7PjF3F/ui9WKY/DDE4n5Zwn
dkjRHZUSMIMnysXncL966sC5H7JmUMKsTiAGr2f6NVpm0C8mc5bYUNlt315H
M/jvoh5aq2+gVHWXGRzI+pJEfH4yu7X9sBmUy2/B8OcEfcaT4s3gdtnSFOJA
RTkJxhUzmHzVgulrWtWyiqPADJQCaJj+6y4O23c1mEHBpC7mb/+Bpzc7vpvB
tkLNK8S9sRHPk2fMILuN4zKxY4Zxr72QOTi3P7tAfExDao/6InPoWLg2mfhB
0dg/TnlzuP/pTiLx0mcFio+0zOFf42wMsYtjbP55PXMwG5g6RXy6JdB8t5k5
NJ/sOYH13a+6QcPeHGivzxzB8hG+fP5CkDl4ztXvIZ65EK66Z485PP1ydxex
7lLXYscD5qB/Mnc78eXVYo3cZ8yhV/zDZuK3ZT82diWag/R/kng+wEN99aMs
1Ryk5Hf5Eu90ixYKyTGH3OojnsTXuvwvM4vMge+L6Qbi1kCr5ctLzeHKqMx6
YqGxJaU8VeawUU3RFevr0F9ad605nAmjryPOi38YkNJmDrsVxdnEkpkhx1n9
5nCtbT+T+PHgxikt9TWwpXLWjthP32H3gs1r4NnsbTzPeOXNllmRuwZcL6rg
7w1Ou1axfqyBud4y1v/r0/28r6gFBA8nOxKnF3sEhqy2gBtdAvbEvJ98xC6G
WUBKTgWV2CzE78utFAsY7LewJt61YHPpo0cWMKLWR8H8pm+Ne/WfBdhblVpg
fldv8/00awEv7xWbE1O8gvk5rS3h0/AqPH/Jid5bpBZtCW7034bY31YMLEi5
ZQmr+/6h1Zo8fQReWsKGC2KmxM+ypWKrP1qCf24ahue37+2DQ98sgTp12ZKY
i3Gm12DGEk5s7rfC8x95G5FhIQrc2+tli+U7/Nf0lgIFJMM/YHl1Vz3Y7KtN
gdbCNZj/o8m7k2QtKTCxb6cT8ZItWk+aWRQoCHR2JvYSypC03U2BeocBN2wf
ReI7HiZRIC3/GNbvB9eTz5bfowCd2oWWnpmUS39PAZUubndsz6+Laa5fKbD0
swv+3i1zR4jIBAUO/DNxIT5ouuitPzdA/+qatcT1Kj8DqoQAbPctwvTICb+e
VpAEKBi0xvQG/c5NPKAAIDoSziAu7YxWb1UDEHbpoBHz1/mX62kDuO25ivV3
67LiwHcLgK3v5bH+aDvbFt1gAfBtHsTn35i9FrHOAOe2XMLfx+v82LrHDWDS
8jKWl67oZNJ6D4C6+F5sH+9HuMotNgI0rQnC9ri/cWGfqh/AeNQybG8Kd2XE
BLcABA+IYHv2D9EJaN0JkH7LDsuHb53p2fI9ALEpZ7ywvetTS6+FzS9nGj/4
YP8d3yAcfBig7Vn0FuLI8JMlC+IBLluFhmL7cE/s/JEIsL1r3z7iWpM0/vfn
AUZiPQ4Qb5O9qVeWCnCAQy4Cx8/pIq/MdIBm5l0cD4rbH0dHZ84//6RwDM8D
H78o2nEd4OmeDVHEk2lN7c45AOs0Ak5i/4jo4DHNB5AMM8PxRuvfgoKmxwAz
BzfFET86pu+67RXAoFZLPLEdj88s138AskuyY7E/RMfcSPsGEHLALJpY0S5z
ausYQHZVwnHiAIEHTINpgIZruzB9Y7E9vxsErMDj24Ew4os7hpbeW2gFI6st
MP+mzD+MS+JW4GIhiuNZhzbX3qNSVqApNYnjWaTIwozNslZQp8Oxk7jurcrY
amUrOLzsXBCxaJIJbU7TCnpCxbfi/LUoYPiiiRVs4PPF8l55MeHiKjsrsLto
jOF18OTrb3O0Ap+isxhfXGhd43X2fPi37TF939mcQnIbrCBQ+95h7B+Vijku
3laga2KN+bPXMbNN2GQFjFUzmP88odCjPNusYLb7AY7vHgcTFCi7rGDGIAvn
A4HB248OhFhBXu4JnC8CX3z5NXzQChJsF14nljHkTFp+1ArKja7mYP6yFXUC
oqzAoIsbz5M1jrkFfoy1Agdt9ftY/iMhvJKJVjA32FJKHL0x4RrrvBWEx68p
JzZ6fZtyJtUK7jW54Hqgz7yu41m6FexbIldNbCvLKW16wwo+/pf+Aue7CdO1
hQVWcLm04CW277u3a1IrrGCZqOsrYpUdimZRb61gzw+jWuLmdtO2J++sYMp7
Yw3xcYbb3sk2K4i9bP6MWK80RFy/wwq80t9XEfeoJxTu7LaC3Yt1K4gTL9x2
yPliBVz7XR/jeMZTN9A7YAXUIUfMT2YPh6r7qBV82t56l5jNVqw699sKMo5F
FBJzVJp6v56yArWnCrhe8UkPSbHmsoYi4QgsTxGhBIPDfNbQquqaRVxx4HbT
Q0FrEIzwysDxfqB215iINWzgzErD8XH9FyHtRdaQ7aeH64FP4m6R0mrWQFN9
jfN3ekPtOKehNWhUiuH7juZfktaYWkPNqD2uD2ZyOVaFW1hDZpojxp8no9hw
18oaMj7M5WJ7OGUaNGRrDVqxDrjeEpxw5dOwt4Z2D8WHxGUBIdmbWNZwo8QH
y0fW+vanVjdrUM/sf038XOHLhpce1vB+8lAL8e4/Cq2PN1qDa4jeJxwv8s++
ydxiDSI/3g4Rh5yqtU/eZg2ekVfGMX9+HLUnd1mDnafHX+Iw6ZDKbfusQbW1
jJesV5XG8sy9D1pDXI0Pfj80NHx+6HTEGpye9uN6WPW4a5FBtDV4ZSXg/Yc3
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
Axlw6oQ=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 99.9}, {0., 47.588139739161726`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.411408561187299*^9, 3.411408582639498*^9}, {
   3.411408636633126*^9, 3.411408647634388*^9}, 3.411448001162232*^9, 
   3.411454142826681*^9, 3.41154031132315*^9, 3.411663601135396*^9, 
   3.411671233416584*^9, 3.411673709123171*^9, 3.411674017963559*^9, 
   3.411674091996045*^9, {3.411674219533795*^9, 3.411674230575165*^9}}]
}, Open  ]],

Cell["", "Subsubsection"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{924, 971},
WindowMargins->{{Automatic, 0}, {Automatic, 25}},
FrontEndVersion->"6.0 for Linux x86 (32-bit) (June 19, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 164, 2, 73, "Section"],
Cell[CellGroupData[{
Cell[779, 29, 222, 4, 39, "Subsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1026, 37, 254, 4, 30, "Subsubsection",
 InitializationCell->True],
Cell[1283, 43, 762, 21, 121, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2070, 68, 662, 13, 55, "Input",
 InitializationCell->True],
Cell[2735, 83, 1132, 19, 70, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3904, 107, 385, 10, 55, "Input",
 InitializationCell->True],
Cell[4292, 119, 1709, 27, 70, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6038, 151, 682, 14, 55, "Input",
 InitializationCell->True],
Cell[6723, 167, 1902, 30, 70, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[8662, 202, 556, 14, 55, "Input"],
Cell[9221, 218, 805, 14, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10063, 237, 398, 9, 55, "Input"],
Cell[10464, 248, 301, 6, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10814, 260, 255, 4, 24, "Subsubsection",
 InitializationCell->True],
Cell[11072, 266, 19018, 478, 1177, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[30127, 749, 131, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[30261, 753, 15952, 332, 1089, "Input",
 InitializationCell->True],
Cell[46216, 1087, 118, 2, 32, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[46371, 1094, 126, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[46500, 1098, 12950, 303, 869, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[59487, 1406, 130, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[59620, 1410, 14981, 376, 1309, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[74638, 1791, 132, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[74773, 1795, 2524, 70, 99, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[77334, 1870, 170, 3, 24, "Subsubsection",
 InitializationCell->True],
Cell[77507, 1875, 11944, 291, 1089, "Input",
 InitializationCell->True],
Cell[89454, 2168, 1369, 19, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[90860, 2192, 252, 4, 24, "Subsubsection",
 InitializationCell->True],
Cell[91115, 2198, 3329, 87, 341, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[94481, 2290, 134, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[94618, 2294, 6467, 168, 649, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[101122, 2467, 151, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[101276, 2471, 4865, 110, 473, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[106178, 2586, 126, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[106307, 2590, 1763, 41, 209, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[108107, 2636, 210, 3, 24, "Subsubsection",
 InitializationCell->True],
Cell[108320, 2641, 3791, 96, 407, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[112148, 2742, 152, 2, 24, "Subsubsection",
 InitializationCell->True],
Cell[112303, 2746, 5294, 129, 561, "Input"]
}, Open  ]],
Cell[117612, 2878, 52, 1, 30, "Subsubsection",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[117701, 2884, 146, 2, 39, "Subsection"],
Cell[CellGroupData[{
Cell[117872, 2890, 567, 8, 30, "Subsubsection"],
Cell[118442, 2900, 3635, 100, 297, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[122114, 3005, 226, 3, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[122365, 3012, 331, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[122721, 3024, 19624, 328, 394, "Print"],
Cell[142348, 3354, 19008, 318, 253, "Print"],
Cell[161359, 3674, 17123, 287, 348, "Print"],
Cell[178485, 3963, 20868, 348, 440, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[199414, 4318, 195, 3, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[199634, 4325, 267, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[199926, 4336, 373, 8, 24, "Print"],
Cell[200302, 4346, 116, 2, 24, "Print"],
Cell[200421, 4350, 116, 2, 24, "Print"],
Cell[200540, 4354, 116, 2, 24, "Print"],
Cell[200659, 4358, 374, 8, 24, "Print"],
Cell[201036, 4368, 116, 2, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201201, 4376, 204, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[201430, 4386, 325, 7, 24, "Print"],
Cell[201758, 4395, 69, 1, 24, "Print"],
Cell[201830, 4398, 69, 1, 24, "Print"],
Cell[201902, 4401, 328, 7, 24, "Print"],
Cell[202233, 4410, 69, 1, 24, "Print"],
Cell[202305, 4413, 69, 1, 24, "Print"],
Cell[202377, 4416, 69, 1, 24, "Print"],
Cell[202449, 4419, 326, 7, 24, "Print"],
Cell[202778, 4428, 326, 7, 24, "Print"],
Cell[203107, 4437, 326, 7, 24, "Print"],
Cell[203436, 4446, 328, 7, 24, "Print"],
Cell[203767, 4455, 69, 1, 24, "Print"],
Cell[203839, 4458, 69, 1, 24, "Print"],
Cell[203911, 4461, 328, 7, 24, "Print"],
Cell[204242, 4470, 69, 1, 24, "Print"],
Cell[204314, 4473, 69, 1, 24, "Print"],
Cell[204386, 4476, 69, 1, 24, "Print"],
Cell[204458, 4479, 69, 1, 24, "Print"],
Cell[204530, 4482, 69, 1, 24, "Print"],
Cell[204602, 4485, 326, 7, 24, "Print"],
Cell[204931, 4494, 326, 7, 24, "Print"],
Cell[205260, 4503, 326, 7, 24, "Print"],
Cell[205589, 4512, 328, 7, 24, "Print"],
Cell[205920, 4521, 328, 7, 24, "Print"],
Cell[206251, 4530, 69, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206369, 4537, 966, 23, 55, "Input"],
Cell[207338, 4562, 3214, 52, 239, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[210601, 4620, 105, 1, 24, "Subsubsection"],
Cell[210709, 4623, 326, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[211060, 4636, 479, 13, 32, "Input"],
Cell[211542, 4651, 23911, 401, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235490, 5057, 149, 3, 32, "Input"],
Cell[235642, 5062, 6265, 109, 232, "Output"]
}, Open  ]],
Cell[241922, 5174, 164, 2, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242135, 5182, 157, 3, 39, "Subsection"],
Cell[242295, 5187, 2773, 77, 121, "Input"],
Cell[CellGroupData[{
Cell[245093, 5268, 355, 11, 32, "Input"],
Cell[245451, 5281, 271, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245759, 5290, 512, 13, 32, "Input"],
Cell[246274, 5305, 408, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246719, 5316, 1555, 28, 32, "Input"],
Cell[248277, 5346, 447, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248761, 5358, 285, 8, 32, "Input"],
Cell[249049, 5368, 165, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249251, 5376, 220, 5, 32, "Input"],
Cell[249474, 5383, 301, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249812, 5393, 302, 8, 32, "Input"],
Cell[250117, 5403, 252, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250406, 5411, 380, 11, 32, "Input"],
Cell[250789, 5424, 3164, 58, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253990, 5487, 522, 16, 32, "Input"],
Cell[254515, 5505, 116, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254668, 5511, 1435, 35, 32, "Input"],
Cell[256106, 5548, 49020, 810, 244, "Output"]
}, Open  ]],
Cell[305141, 6361, 25, 0, 30, "Subsubsection"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
