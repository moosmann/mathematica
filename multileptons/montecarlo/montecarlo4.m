(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Needs["PlotLegends`"];
SetDirectory["/home/moosmann/mathematica/multileptons"];

mu=105.658369 10^6 ; (*muon mass*)

(*Substitute x1 by x2 using the expression for the invariant mass*)
Block[{solx1m},
{solx1p,solx1m}=Evaluate[x1/.Simplify[Solve[X^2==2(1+Sqrt[1+x1^2]Sqrt[1+x2^2]-x1 x2 cos),x1]]];
solx1p];

(*condition for x1=f (x2,X,cos (\[Theta])) to be real and positiv*)
solx1sqrtcon=Boole[(-4 X^2+X^4+4 (-1+cos^2) x2^2)>0];

(*Jacobian determinant jx1Xp=(d/dx1 X^2)^-1 with x1 substituted by solx1p, where X^2 is given by the dimless invariant mass and dx1=2*X*jx1Xp*dX *)
jx1Xp=Simplify[1/D[2(1+Sqrt[1+x1^2]Sqrt[1+x2^2]-x1 x2 cos),x1]/.x1->solx1p];

(*relative angle condition*)
Block[{n},
n[cos_,p_]:={Sqrt[1-cos^2]Cos[2\[Pi] p],Sqrt[1-cos^2]Sin[2\[Pi] p],cos};
cos12=n[cos1,p1]. n[cos2,p2];
angcon=Boole[Evaluate[cos12]>cosmin];
]

(*transversal impuls cut-off*)
ptcut=Boole[(1-cos1^2) x1^2>((ptmin  10^9)/mu)^2]*Boole[(1-cos2^2) x2^2>((ptmin  10^9)/mu)^2]/.{x1->solx1p};

(* function that gives the data to plot {X,# f/\[CapitalDelta]X} *)
Remove[plotdata];
plotdata[yy_,CosMin_,acgoal_,prgoal_,partlist_List,Xmax_:10,points_:40,pt_]:=
Block[{dX=(Xmax-2)/points,y=yy,cosmin=CosMin,ptmin=pt,cos=cos12,plot,int,time},

int= Evaluate[
ptcut angcon solx1sqrtcon jx1Xp
 solx1p^3/Sqrt[solx1p^2+1] 1/(Exp[1/(11.24/(2\[Pi]) y) Sqrt[1+solx1p^2]]+1) 
x2^3/Sqrt[x2^2+1] 1/(Exp[1/(11.24/(2\[Pi]) y) Sqrt[1+x2^2]]+1)
];


Table[{X,
2X (*change from dx1->dX*)(2\[Pi])^2(*change from \[Phi]->2\[Pi]p*)(1/(8\[Pi]^3))^2(*original prefactor*)NIntegrate[
int,
{x2,0,Sqrt[X^2 (X^2-1)/4]},{cos1,-1,1},{cos2,-1,1},{p1,0,1},{p2,0,1},
Method->{"AdaptiveQuasiMonteCarlo","Partitioning"->partlist},
AccuracyGoal->acgoal,
PrecisionGoal->prgoal
]},{X,2,Xmax,dX}
]

];



